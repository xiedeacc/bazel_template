load("@bazel_template//bazel_scripts:common.bzl", "extract_symbols", "template_rule")

package(default_visibility = ["//visibility:public"])

SRCS = [
    "src/arena.c",
    "src/background_thread.c",
    "src/base.c",
    "src/batcher.c",
    "src/bin.c",
    "src/bin_info.c",
    "src/bitmap.c",
    "src/buf_writer.c",
    "src/cache_bin.c",
    "src/ckh.c",
    "src/counter.c",
    "src/ctl.c",
    "src/decay.c",
    "src/div.c",
    "src/ecache.c",
    "src/edata.c",
    "src/edata_cache.c",
    "src/ehooks.c",
    "src/emap.c",
    "src/eset.c",
    "src/exp_grow.c",
    "src/extent.c",
    "src/extent_dss.c",
    "src/extent_mmap.c",
    "src/fxp.c",
    "src/hook.c",
    "src/hpa.c",
    "src/hpa_hooks.c",
    "src/hpdata.c",
    "src/inspect.c",
    "src/jemalloc.c",
    "src/large.c",
    "src/log.c",
    "src/malloc_io.c",
    "src/mutex.c",
    "src/nstime.c",
    "src/pa.c",
    "src/pa_extra.c",
    "src/pac.c",
    "src/pages.c",
    "src/pai.c",
    "src/peak_event.c",
    "src/prof.c",
    "src/prof_data.c",
    "src/prof_log.c",
    "src/prof_recent.c",
    "src/prof_stats.c",
    "src/prof_sys.c",
    "src/psset.c",
    "src/rtree.c",
    "src/safety_check.c",
    "src/san.c",
    "src/san_bump.c",
    "src/sc.c",
    "src/sec.c",
    "src/stats.c",
    "src/sz.c",
    "src/tcache.c",
    "src/test_hooks.c",
    "src/thread_event.c",
    "src/ticker.c",
    "src/tsd.c",
    "src/util.c",
    "src/witness.c",
]

HEADERS = [
    "include/jemalloc/internal/activity_callback.h",
    "include/jemalloc/internal/arena_externs.h",
    "include/jemalloc/internal/arena_inlines_a.h",
    "include/jemalloc/internal/arena_inlines_b.h",
    "include/jemalloc/internal/arena_stats.h",
    "include/jemalloc/internal/arena_structs.h",
    "include/jemalloc/internal/arena_types.h",
    "include/jemalloc/internal/assert.h",
    "include/jemalloc/internal/atomic.h",
    "include/jemalloc/internal/atomic_c11.h",
    "include/jemalloc/internal/atomic_gcc_atomic.h",
    "include/jemalloc/internal/atomic_gcc_sync.h",
    "include/jemalloc/internal/atomic_msvc.h",
    "include/jemalloc/internal/background_thread_externs.h",
    "include/jemalloc/internal/background_thread_inlines.h",
    "include/jemalloc/internal/background_thread_structs.h",
    "include/jemalloc/internal/base.h",
    "include/jemalloc/internal/batcher.h",
    "include/jemalloc/internal/bin.h",
    "include/jemalloc/internal/bin_info.h",
    "include/jemalloc/internal/bin_stats.h",
    "include/jemalloc/internal/bin_types.h",
    "include/jemalloc/internal/bit_util.h",
    "include/jemalloc/internal/bitmap.h",
    "include/jemalloc/internal/buf_writer.h",
    "include/jemalloc/internal/cache_bin.h",
    "include/jemalloc/internal/ckh.h",
    "include/jemalloc/internal/counter.h",
    "include/jemalloc/internal/ctl.h",
    "include/jemalloc/internal/decay.h",
    "include/jemalloc/internal/div.h",
    "include/jemalloc/internal/ecache.h",
    "include/jemalloc/internal/edata.h",
    "include/jemalloc/internal/edata_cache.h",
    "include/jemalloc/internal/ehooks.h",
    "include/jemalloc/internal/emap.h",
    "include/jemalloc/internal/emitter.h",
    "include/jemalloc/internal/eset.h",
    "include/jemalloc/internal/exp_grow.h",
    "include/jemalloc/internal/extent.h",
    "include/jemalloc/internal/extent_dss.h",
    "include/jemalloc/internal/extent_mmap.h",
    "include/jemalloc/internal/fb.h",
    "include/jemalloc/internal/fxp.h",
    "include/jemalloc/internal/hash.h",
    "include/jemalloc/internal/hook.h",
    "include/jemalloc/internal/hpa.h",
    "include/jemalloc/internal/hpa_hooks.h",
    "include/jemalloc/internal/hpa_opts.h",
    "include/jemalloc/internal/hpdata.h",
    "include/jemalloc/internal/inspect.h",
    "include/jemalloc/internal/jemalloc_internal_decls.h",
    "include/jemalloc/internal/jemalloc_internal_defs.h",
    "include/jemalloc/internal/jemalloc_internal_externs.h",
    "include/jemalloc/internal/jemalloc_internal_includes.h",
    "include/jemalloc/internal/jemalloc_internal_inlines_a.h",
    "include/jemalloc/internal/jemalloc_internal_inlines_b.h",
    "include/jemalloc/internal/jemalloc_internal_inlines_c.h",
    "include/jemalloc/internal/jemalloc_internal_macros.h",
    "include/jemalloc/internal/jemalloc_internal_overrides.h",
    "include/jemalloc/internal/jemalloc_internal_types.h",
    "include/jemalloc/internal/jemalloc_preamble.h",
    "include/jemalloc/internal/large_externs.h",
    "include/jemalloc/internal/lockedint.h",
    "include/jemalloc/internal/log.h",
    "include/jemalloc/internal/malloc_io.h",
    "include/jemalloc/internal/mpsc_queue.h",
    "include/jemalloc/internal/mutex.h",
    "include/jemalloc/internal/mutex_prof.h",
    "include/jemalloc/internal/nstime.h",
    "include/jemalloc/internal/pa.h",
    "include/jemalloc/internal/pac.h",
    "include/jemalloc/internal/pages.h",
    "include/jemalloc/internal/pai.h",
    "include/jemalloc/internal/peak.h",
    "include/jemalloc/internal/peak_event.h",
    "include/jemalloc/internal/ph.h",
    "include/jemalloc/internal/prng.h",
    "include/jemalloc/internal/prof_data.h",
    "include/jemalloc/internal/prof_externs.h",
    "include/jemalloc/internal/prof_hook.h",
    "include/jemalloc/internal/prof_inlines.h",
    "include/jemalloc/internal/prof_log.h",
    "include/jemalloc/internal/prof_recent.h",
    "include/jemalloc/internal/prof_stats.h",
    "include/jemalloc/internal/prof_structs.h",
    "include/jemalloc/internal/prof_sys.h",
    "include/jemalloc/internal/prof_types.h",
    "include/jemalloc/internal/psset.h",
    "include/jemalloc/internal/public_namespace.h",
    "include/jemalloc/internal/public_unnamespace.h",
    "include/jemalloc/internal/ql.h",
    "include/jemalloc/internal/qr.h",
    "include/jemalloc/internal/quantum.h",
    "include/jemalloc/internal/rb.h",
    "include/jemalloc/internal/rtree.h",
    "include/jemalloc/internal/rtree_tsd.h",
    "include/jemalloc/internal/safety_check.h",
    "include/jemalloc/internal/san.h",
    "include/jemalloc/internal/san_bump.h",
    "include/jemalloc/internal/sc.h",
    "include/jemalloc/internal/sec.h",
    "include/jemalloc/internal/sec_opts.h",
    "include/jemalloc/internal/seq.h",
    "include/jemalloc/internal/slab_data.h",
    "include/jemalloc/internal/smoothstep.h",
    "include/jemalloc/internal/spin.h",
    "include/jemalloc/internal/stats.h",
    "include/jemalloc/internal/sz.h",
    "include/jemalloc/internal/tcache_externs.h",
    "include/jemalloc/internal/tcache_inlines.h",
    "include/jemalloc/internal/tcache_structs.h",
    "include/jemalloc/internal/tcache_types.h",
    "include/jemalloc/internal/test_hooks.h",
    "include/jemalloc/internal/thread_event.h",
    "include/jemalloc/internal/ticker.h",
    "include/jemalloc/internal/tsd.h",
    "include/jemalloc/internal/tsd_generic.h",
    "include/jemalloc/internal/tsd_internals.h",
    "include/jemalloc/internal/tsd_malloc_thread_cleanup.h",
    "include/jemalloc/internal/tsd_tls.h",
    "include/jemalloc/internal/tsd_types.h",
    "include/jemalloc/internal/tsd_win.h",
    "include/jemalloc/internal/typed_list.h",
    "include/jemalloc/internal/util.h",
    "include/jemalloc/internal/witness.h",
    "include/jemalloc/jemalloc_macros.h",
    "include/jemalloc/jemalloc_protos.h",
]

COPTS = [
    "-std=gnu11",
    "-Wall",
    "-Wextra",
    "-Wsign-compare",
    "-Wundef",
    "-Wno-format-zero-length",
    "-Wpointer-arith",
    "-Wno-missing-braces",
    "-Wno-missing-field-initializers",
    "-Wno-missing-attributes",
    "-pipe",
    "-g3",
    "-fvisibility=hidden",
    "-Wimplicit-fallthrough",
    "-Wdeprecated-declarations",
    "-O3",
    "-funroll-loops",
]

genrule(
    name = "public_symbols_txt",
    outs = ["include/jemalloc/internal/public_symbols.txt"],
    cmd = "\n".join([
        "cat <<'EOF' > $@",
        "aligned_alloc:aligned_alloc",
        "calloc:calloc",
        "dallocx:dallocx",
        "free:free",
        "free_sized:free_sized",
        "free_aligned_sized:free_aligned_sized",
        "mallctl:mallctl",
        "mallctlbymib:mallctlbymib",
        "mallctlnametomib:mallctlnametomib",
        "malloc:malloc",
        "malloc_conf:malloc_conf",
        "malloc_conf_2_conf_harder:malloc_conf_2_conf_harder",
        "malloc_message:malloc_message",
        "malloc_stats_print:malloc_stats_print",
        "malloc_usable_size:malloc_usable_size",
        "mallocx:mallocx",
        "smallocx_21bcc0a8d49ab2944ae53c7e43f5c84fc8a34322:smallocx_21bcc0a8d49ab2944ae53c7e43f5c84fc8a34322",
        "nallocx:nallocx",
        "posix_memalign:posix_memalign",
        "rallocx:rallocx",
        "realloc:realloc",
        "sallocx:sallocx",
        "sdallocx:sdallocx",
        "xallocx:xallocx",
        "memalign:memalign",
        "valloc:valloc",
        "pvalloc:pvalloc",
        "EOF",
    ]),
)

sh_binary(
    name = "jemalloc_mangle_sh",
    srcs = ["include/jemalloc/jemalloc_mangle.sh"],
)

genrule(
    name = "jemalloc_mangle_h",
    srcs = [":public_symbols_txt"],
    outs = ["include/jemalloc/jemalloc_mangle.h"],
    cmd = "$(location :jemalloc_mangle_sh) $(location :public_symbols_txt) je_ > $@",
    tools = [":jemalloc_mangle_sh"],
)

sh_binary(
    name = "jemalloc_rename_sh",
    srcs = ["include/jemalloc/jemalloc_rename.sh"],
)

genrule(
    name = "jemalloc_rename_h",
    srcs = [":public_symbols_txt"],
    outs = ["include/jemalloc/jemalloc_rename.h"],
    cmd = "$(location :jemalloc_rename_sh) $(location :public_symbols_txt) > $@",
    tools = [":jemalloc_rename_sh"],
)

sh_binary(
    name = "public_namespace_sh",
    srcs = ["include/jemalloc/internal/public_namespace.sh"],
)

genrule(
    name = "public_namespace_h",
    srcs = [":public_symbols_txt"],
    outs = ["include/jemalloc/internal/public_namespace.h"],
    cmd = "$(location :public_namespace_sh) $(location :public_symbols_txt) > $@",
    tools = [":public_namespace_sh"],
)

sh_binary(
    name = "public_unnamespace_sh",
    srcs = ["include/jemalloc/internal/public_unnamespace.sh"],
)

genrule(
    name = "public_unnamespace_h",
    srcs = [":public_symbols_txt"],
    outs = ["include/jemalloc/internal/public_unnamespace.h"],
    cmd = "$(location :public_unnamespace_sh) $(location :public_symbols_txt) > $@",
    tools = [":public_unnamespace_sh"],
)

template_rule(
    name = "jemalloc_preamble_h",
    src = "include/jemalloc/internal/jemalloc_preamble.h.in",
    out = "include/jemalloc/internal/jemalloc_preamble.h",
    substitutions = {
        "@private_namespace@": "je_",
        "@install_suffix@": "",
    },
)

template_rule(
    name = "jemalloc_internal_defs_h",
    src = "include/jemalloc/internal/jemalloc_internal_defs.h.in",
    out = "include/jemalloc/internal/jemalloc_internal_defs.h",
    substitutions = select({
                        "@platforms//cpu:aarch64": {
                            "#undef CPU_SPINWAIT": "#define CPU_SPINWAIT __asm__ volatile(\"isb\")",
                        },
                        "//conditions:default": {
                            "#undef CPU_SPINWAIT": "#define CPU_SPINWAIT __asm__ volatile(\"pause\")",
                        },
                    }) |
                    {
                        "#undef JEMALLOC_PREFIX": "/* #undef JEMALLOC_PREFIX */",
                        "#undef JEMALLOC_CPREFIX": "/* #undef JEMALLOC_CPREFIX */",
                        "#undef JEMALLOC_OVERRIDE___LIBC_CALLOC": "#define JEMALLOC_OVERRIDE___LIBC_CALLOC",
                        "#undef JEMALLOC_OVERRIDE___LIBC_FREE\n": "#define JEMALLOC_OVERRIDE___LIBC_FREE\n",
                        "#undef JEMALLOC_OVERRIDE___LIBC_FREE_SIZED\n": "/* #undef JEMALLOC_OVERRIDE___LIBC_FREE_SIZED */\n",
                        "#undef JEMALLOC_OVERRIDE___LIBC_FREE_ALIGNED_SIZED\n": "/* #undef JEMALLOC_OVERRIDE___LIBC_FREE_ALIGNED_SIZED */\n",
                        "#undef JEMALLOC_OVERRIDE___LIBC_MALLOC": "#define JEMALLOC_OVERRIDE___LIBC_MALLOC",
                        "#undef JEMALLOC_OVERRIDE___LIBC_MEMALIGN": "#define JEMALLOC_OVERRIDE___LIBC_MEMALIGN",
                        "#undef JEMALLOC_OVERRIDE___LIBC_REALLOC": "#define JEMALLOC_OVERRIDE___LIBC_REALLOC",
                        "#undef JEMALLOC_OVERRIDE___LIBC_VALLOC": "#define JEMALLOC_OVERRIDE___LIBC_VALLOC",
                        "#undef JEMALLOC_OVERRIDE___LIBC_PVALLOC": "#define JEMALLOC_OVERRIDE___LIBC_PVALLOC",
                        "#undef JEMALLOC_OVERRIDE___POSIX_MEMALIGN": "/* #undef JEMALLOC_OVERRIDE___POSIX_MEMALIGN */",
                        "#undef JEMALLOC_PRIVATE_NAMESPACE": "#define JEMALLOC_PRIVATE_NAMESPACE je_",
                        "#undef HAVE_CPU_SPINWAIT": "#define HAVE_CPU_SPINWAIT 1",
                        "#undef LG_VADDR": "#define LG_VADDR 48",
                        "#undef JEMALLOC_C11_ATOMICS": "#define JEMALLOC_C11_ATOMICS",
                        "#undef JEMALLOC_GCC_ATOMIC_ATOMICS": "#define JEMALLOC_GCC_ATOMIC_ATOMICS",
                        "#undef JEMALLOC_GCC_U8_ATOMIC_ATOMICS": "#define JEMALLOC_GCC_U8_ATOMIC_ATOMICS",
                        "#undef JEMALLOC_GCC_SYNC_ATOMICS": "#define JEMALLOC_GCC_SYNC_ATOMICS",
                        "#undef JEMALLOC_GCC_U8_SYNC_ATOMICS": "#define JEMALLOC_GCC_U8_SYNC_ATOMICS",
                        "#undef JEMALLOC_HAVE_BUILTIN_CLZ": "#define JEMALLOC_HAVE_BUILTIN_CLZ",
                        "#undef JEMALLOC_OS_UNFAIR_LOCK": "/* #undef JEMALLOC_OS_UNFAIR_LOCK */",
                        "#undef JEMALLOC_USE_SYSCALL": "#define JEMALLOC_USE_SYSCALL",
                        "#undef JEMALLOC_HAVE_SECURE_GETENV": "#define JEMALLOC_HAVE_SECURE_GETENV",
                        "#undef JEMALLOC_HAVE_ISSETUGID": "/* #undef JEMALLOC_HAVE_ISSETUGID */",
                        "#undef JEMALLOC_HAVE_PTHREAD_ATFORK": "#define JEMALLOC_HAVE_PTHREAD_ATFORK",
                        "#undef JEMALLOC_HAVE_PTHREAD_SETNAME_NP": "#define JEMALLOC_HAVE_PTHREAD_SETNAME_NP",
                        "#undef JEMALLOC_HAVE_PTHREAD_GETNAME_NP": "#define JEMALLOC_HAVE_PTHREAD_GETNAME_NP",
                        "#undef JEMALLOC_HAVE_PTHREAD_SET_NAME_NP": "/* #undef JEMALLOC_HAVE_PTHREAD_SET_NAME_NP */",
                        "#undef JEMALLOC_HAVE_PTHREAD_GET_NAME_NP": "/* #undef JEMALLOC_HAVE_PTHREAD_GET_NAME_NP */",
                        "#undef JEMALLOC_HAVE_CLOCK_MONOTONIC_COARSE": "#define JEMALLOC_HAVE_CLOCK_MONOTONIC_COARSE",
                        # Newline required because of substitution conflicts.
                        "#undef JEMALLOC_HAVE_CLOCK_MONOTONIC\n": "#define JEMALLOC_HAVE_CLOCK_MONOTONIC\n",
                        "#undef JEMALLOC_HAVE_MACH_ABSOLUTE_TIME": "/* #undef JEMALLOC_HAVE_MACH_ABSOLUTE_TIME */",
                        "#undef JEMALLOC_HAVE_CLOCK_REALTIME": "#define JEMALLOC_HAVE_CLOCK_REALTIME",
                        "#undef JEMALLOC_MALLOC_THREAD_CLEANUP": "/* #undef JEMALLOC_MALLOC_THREAD_CLEANUP */",
                        "#undef JEMALLOC_THREADED_INIT": "#define JEMALLOC_THREADED_INIT",
                        "#undef JEMALLOC_MUTEX_INIT_CB": "/* #undef JEMALLOC_MUTEX_INIT_CB */",
                        "#undef JEMALLOC_TLS_MODEL": "#define JEMALLOC_TLS_MODEL __attribute__((tls_model(\"initial-exec\")))",
                        "#undef JEMALLOC_DEBUG": "/* #undef JEMALLOC_DEBUG */",
                        "#undef JEMALLOC_STATS": "#define JEMALLOC_STATS",
                        "#undef JEMALLOC_EXPERIMENTAL_SMALLOCX_API": "/* #undef JEMALLOC_EXPERIMENTAL_SMALLOCX_API */",
                        "#undef JEMALLOC_PROF\n": "/* #undef JEMALLOC_PROF */\n",
                        "#undef JEMALLOC_PROF_LIBUNWIND\n": "/* #undef JEMALLOC_PROF_LIBUNWIND */\n",
                        "#undef JEMALLOC_PROF_LIBGCC\n": "/* #undef JEMALLOC_PROF_LIBGCC */\n",
                        "#undef JEMALLOC_PROF_GCC\n": "/* #undef JEMALLOC_PROF_GCC */\n",
                        "#undef JEMALLOC_PAGEID": "/* #undef JEMALLOC_PAGEID */",
                        "#undef JEMALLOC_HAVE_PRCTL": "#define JEMALLOC_HAVE_PRCTL",
                        "#undef JEMALLOC_DSS": "#define JEMALLOC_DSS",
                        "#undef JEMALLOC_FILL": "#define JEMALLOC_FILL",
                        "#undef JEMALLOC_UTRACE\n": "/* #undef JEMALLOC_UTRACE */\n",
                        "#undef JEMALLOC_UTRACE_LABEL\n": "/* #undef JEMALLOC_UTRACE_LABEL */\n",
                        "#undef JEMALLOC_XMALLOC": "/* #undef JEMALLOC_XMALLOC */",
                        "#undef JEMALLOC_LAZY_LOCK": "/* #undef JEMALLOC_LAZY_LOCK */",
                        "#undef LG_QUANTUM": "/* #undef LG_QUANTUM */",
                        "#undef LG_PAGE": "#define LG_PAGE 12",
                        "#undef CONFIG_LG_SLAB_MAXREGS": "/* #undef CONFIG_LG_SLAB_MAXREGS */",
                        "#undef LG_HUGEPAGE": "#define LG_HUGEPAGE 21",
                        "#undef JEMALLOC_MAPS_COALESCE": "#define JEMALLOC_MAPS_COALESCE",
                        "#undef JEMALLOC_RETAIN": "#define JEMALLOC_RETAIN",
                        "#undef JEMALLOC_TLS": "#define JEMALLOC_TLS",
                        "#undef JEMALLOC_INTERNAL_UNREACHABLE": "#define JEMALLOC_INTERNAL_UNREACHABLE __builtin_unreachable",
                        # Newline required because of substitution conflicts.
                        "#undef JEMALLOC_INTERNAL_FFSLL\n": "#define JEMALLOC_INTERNAL_FFSLL __builtin_ffsll\n",
                        "#undef JEMALLOC_INTERNAL_FFSL\n": "#define JEMALLOC_INTERNAL_FFSL __builtin_ffsl\n",
                        "#undef JEMALLOC_INTERNAL_FFS\n": "#define JEMALLOC_INTERNAL_FFS __builtin_ffs\n",
                        "#undef JEMALLOC_INTERNAL_POPCOUNTL\n": "#define JEMALLOC_INTERNAL_POPCOUNTL __builtin_popcountl\n",
                        "#undef JEMALLOC_INTERNAL_POPCOUNT\n": "#define JEMALLOC_INTERNAL_POPCOUNT __builtin_popcount\n",
                        "#undef JEMALLOC_CACHE_OBLIVIOUS": "#define JEMALLOC_CACHE_OBLIVIOUS",
                        "#undef JEMALLOC_LOG": "/* #undef JEMALLOC_LOG */",
                        "#undef JEMALLOC_READLINKAT": "/* #undef JEMALLOC_READLINKAT */",
                        "#undef JEMALLOC_FORCE_GETENV": "/* #undef JEMALLOC_FORCE_GETENV */",
                        "#undef JEMALLOC_ZONE": "/* #undef JEMALLOC_ZONE */",
                        "#undef JEMALLOC_SYSCTL_VM_OVERCOMMIT": "/* #undef JEMALLOC_SYSCTL_VM_OVERCOMMIT */",
                        "#undef JEMALLOC_PROC_SYS_VM_OVERCOMMIT_MEMORY": "#define JEMALLOC_PROC_SYS_VM_OVERCOMMIT_MEMORY",
                        "#undef JEMALLOC_HAVE_MADVISE": "#define JEMALLOC_HAVE_MADVISE",
                        "#undef JEMALLOC_HAVE_MADVISE_HUGE": "#define JEMALLOC_HAVE_MADVISE_HUGE",
                        "#undef JEMALLOC_PURGE_MADVISE_FREE": "#define JEMALLOC_PURGE_MADVISE_FREE",
                        "#undef JEMALLOC_PURGE_MADVISE_DONTNEED": "#define JEMALLOC_PURGE_MADVISE_DONTNEED",
                        "#undef JEMALLOC_PURGE_MADVISE_DONTNEED_ZEROS": "#define JEMALLOC_PURGE_MADVISE_DONTNEED_ZEROS",
                        "#undef JEMALLOC_DEFINE_MADVISE_FREE": "/* #undef JEMALLOC_DEFINE_MADVISE_FREE */",
                        "#undef JEMALLOC_MADVISE_DONTDUMP": "#define JEMALLOC_MADVISE_DONTDUMP",
                        "#undef JEMALLOC_MADVISE_NOCORE": "/* #undef JEMALLOC_MADVISE_NOCORE */",
                        "#undef JEMALLOC_HAVE_MPROTECT": "#define JEMALLOC_HAVE_MPROTECT",
                        "#undef JEMALLOC_THP": "/* #undef JEMALLOC_THP */",
                        "#undef JEMALLOC_HAVE_POSIX_MADVISE": "/* #undef JEMALLOC_HAVE_POSIX_MADVISE */",
                        "#undef JEMALLOC_PURGE_POSIX_MADVISE_DONTNEED\n": "/* #undef JEMALLOC_PURGE_POSIX_MADVISE_DONTNEED */\n",
                        "#undef JEMALLOC_PURGE_POSIX_MADVISE_DONTNEED_ZEROS\n": "/* #undef JEMALLOC_PURGE_POSIX_MADVISE_DONTNEED_ZEROS */\n",
                        "#undef JEMALLOC_HAVE_MEMCNTL": "/* #undef JEMALLOC_HAVE_MEMCNTL */",
                        "#undef JEMALLOC_HAVE_MALLOC_SIZE": "/* #undef JEMALLOC_HAVE_MALLOC_SIZE */",
                        "#undef JEMALLOC_HAS_ALLOCA_H": "#define JEMALLOC_HAS_ALLOCA_H",
                        "#undef JEMALLOC_HAS_RESTRICT": "#define JEMALLOC_HAS_RESTRICT",
                        "#undef JEMALLOC_BIG_ENDIAN": "/* #undef JEMALLOC_BIG_ENDIAN */",
                        # Newline required because of substitution conflicts.
                        "#undef LG_SIZEOF_INT\n": "#define LG_SIZEOF_INT 2\n",
                        "#undef LG_SIZEOF_LONG\n": "#define LG_SIZEOF_LONG 3\n",
                        "#undef LG_SIZEOF_LONG_LONG": "#define LG_SIZEOF_LONG_LONG 3",
                        "#undef LG_SIZEOF_INTMAX_T": "#define LG_SIZEOF_INTMAX_T 3",
                        "#undef JEMALLOC_GLIBC_MALLOC_HOOK": "/* #undef JEMALLOC_GLIBC_MALLOC_HOOK */",
                        "#undef JEMALLOC_GLIBC_MEMALIGN_HOOK": "/* #undef JEMALLOC_GLIBC_MEMALIGN_HOOK */",
                        "#undef JEMALLOC_HAVE_PTHREAD\n": "#define JEMALLOC_HAVE_PTHREAD\n",
                        "#undef JEMALLOC_HAVE_DLSYM": "#define JEMALLOC_HAVE_DLSYM",
                        "#undef JEMALLOC_HAVE_PTHREAD_MUTEX_ADAPTIVE_NP": "#define JEMALLOC_HAVE_PTHREAD_MUTEX_ADAPTIVE_NP",
                        "#undef JEMALLOC_HAVE_SCHED_GETCPU": "#define JEMALLOC_HAVE_SCHED_GETCPU",
                        "#undef JEMALLOC_HAVE_SCHED_SETAFFINITY": "#define JEMALLOC_HAVE_SCHED_SETAFFINITY",
                        "#undef JEMALLOC_HAVE_PTHREAD_SETAFFINITY_NP": "#define JEMALLOC_HAVE_PTHREAD_SETAFFINITY_NP",
                        "#undef JEMALLOC_BACKGROUND_THREAD": "#define JEMALLOC_BACKGROUND_THREAD",
                        "#undef JEMALLOC_EXPORT": "/* #undef JEMALLOC_EXPORT */",
                        "#undef JEMALLOC_CONFIG_MALLOC_CONF": "#define JEMALLOC_CONFIG_MALLOC_CONF \"\"",
                        "#undef JEMALLOC_IS_MALLOC": "#define JEMALLOC_IS_MALLOC",
                        "#undef JEMALLOC_STRERROR_R_RETURNS_CHAR_WITH_GNU_SOURCE": "#define JEMALLOC_STRERROR_R_RETURNS_CHAR_WITH_GNU_SOURCE",
                        "#undef JEMALLOC_OPT_SAFETY_CHECKS": "/* #undef JEMALLOC_OPT_SAFETY_CHECKS */",
                        "#undef JEMALLOC_ENABLE_CXX": "#define JEMALLOC_ENABLE_CXX",
                        "#undef JEMALLOC_OPT_SIZE_CHECKS": "/* #undef JEMALLOC_OPT_SIZE_CHECKS */",
                        "#undef JEMALLOC_UAF_DETECTION": "/* #undef JEMALLOC_UAF_DETECTION */",
                        "#undef JEMALLOC_HAVE_VM_MAKE_TAG": "/* #undef JEMALLOC_HAVE_VM_MAKE_TAG */",
                        "#undef JEMALLOC_ZERO_REALLOC_DEFAULT_FREE": "#define JEMALLOC_ZERO_REALLOC_DEFAULT_FREE",
                        "#undef JEMALLOC_HAVE_ASM_VOLATILE": "#define JEMALLOC_HAVE_ASM_VOLATILE",
                        "#undef JEMALLOC_HAVE_RDTSCP": "#define JEMALLOC_HAVE_RDTSCP",
                    },
)

template_rule(
    name = "jemalloc_defs_h",
    src = "include/jemalloc/jemalloc_defs.h.in",
    out = "include/jemalloc/jemalloc_defs.h",
    substitutions = {
        "#undef JEMALLOC_HAVE_ATTR": "#define JEMALLOC_HAVE_ATTR",
        "#undef JEMALLOC_HAVE_ATTR_ALLOC_SIZE": "#define JEMALLOC_HAVE_ATTR_ALLOC_SIZE",
        "#undef JEMALLOC_HAVE_ATTR_FORMAT_ARG": "#define JEMALLOC_HAVE_ATTR_FORMAT_ARG",
        "#undef JEMALLOC_HAVE_ATTR_FORMAT_GNU_PRINTF": "#define JEMALLOC_HAVE_ATTR_FORMAT_GNU_PRINTF",
        "#undef JEMALLOC_HAVE_ATTR_FORMAT_PRINTF": "#define JEMALLOC_HAVE_ATTR_FORMAT_PRINTF",
        "#undef JEMALLOC_HAVE_ATTR_FALLTHROUGH": "#define JEMALLOC_HAVE_ATTR_FALLTHROUGH",
        "#undef JEMALLOC_HAVE_ATTR_COLD": "#define JEMALLOC_HAVE_ATTR_COLD",
        "#undef JEMALLOC_HAVE_ATTR_DEPRECATED": "#define JEMALLOC_HAVE_ATTR_DEPRECATED",
        "#undef JEMALLOC_OVERRIDE_MEMALIGN": "#define JEMALLOC_OVERRIDE_MEMALIGN",
        "#undef JEMALLOC_OVERRIDE_VALLOC": "#define JEMALLOC_OVERRIDE_VALLOC",
        "#undef JEMALLOC_OVERRIDE_PVALLOC": "#define JEMALLOC_OVERRIDE_PVALLOC",
        "#undef JEMALLOC_USABLE_SIZE_CONST": "#define JEMALLOC_USABLE_SIZE_CONST",
        "#undef JEMALLOC_USE_CXX_THROW": "#define JEMALLOC_USE_CXX_THROW",
        "#undef LG_SIZEOF_PTR": "#define LG_SIZEOF_PTR 3",
    },
)

template_rule(
    name = "jemalloc_macros_h",
    src = "include/jemalloc/jemalloc_macros.h.in",
    out = "include/jemalloc/jemalloc_macros.h",
    substitutions = {
        "@jemalloc_version@": "\\\"5.3.0-186-g21bcc0a8d49ab2944ae53c7e43f5c84fc8a34322\\\"",
        "@jemalloc_version_major@": "5",
        "@jemalloc_version_minor@": "3",
        "@jemalloc_version_bugfix@": "0",
        "@jemalloc_version_nrev@": "186",
        "@jemalloc_version_gid@": "\\\"21bcc0a8d49ab2944ae53c7e43f5c84fc8a34322\\\"",
    },
)

template_rule(
    name = "jemalloc_protos_h",
    src = "include/jemalloc/jemalloc_protos.h.in",
    out = "include/jemalloc/jemalloc_protos.h",
    substitutions = {
        "@je_@": "je_",
    },
)

template_rule(
    name = "jemalloc_typedefs_h",
    src = "include/jemalloc/jemalloc_typedefs.h.in",
    out = "include/jemalloc/jemalloc_typedefs.h",
    substitutions = {},
)

sh_binary(
    name = "jemalloc_sh",
    srcs = ["include/jemalloc/jemalloc.sh"],
)

genrule(
    name = "jemalloc_h",
    srcs = [
        ":jemalloc_defs_h",
        ":jemalloc_macros_h",
        ":jemalloc_mangle_h",
        ":jemalloc_protos_h",
        ":jemalloc_rename_h",
        ":jemalloc_typedefs_h",
    ],
    outs = ["include/jemalloc/jemalloc.h"],
    cmd = "$(location :jemalloc_sh) $$(dirname $(location :jemalloc_defs_h))/../../ > $@",
    tools = [":jemalloc_sh"],
)

sh_binary(
    name = "private_symbols_sh",
    srcs = ["include/jemalloc/internal/private_symbols.sh"],
)

public_symbol_and_sys_symbol = [
    "aligned_alloc",
    "calloc",
    "dallocx",
    "free",
    "free_sized",
    "free_aligned_sized",
    "mallctl",
    "mallctlbymib",
    "mallctlnametomib",
    "malloc",
    "malloc_conf",
    "malloc_conf_2_conf_harder",
    "malloc_message",
    "malloc_stats_print",
    "malloc_usable_size",
    "mallocx",
    "smallocx_abd3b4f2995fbca3f4b5c20692083dedece1cea8",
    "nallocx",
    "posix_memalign",
    "rallocx",
    "realloc",
    "sallocx",
    "sdallocx",
    "xallocx",
    "memalign",
    "valloc",
    "pvalloc",
    "__libc_calloc",
    "__libc_free",
    "__libc_malloc",
    "__libc_memalign",
    "__libc_realloc",
    "__libc_valloc",
    "__libc_pvalloc",
    "pthread_create",
]

genrule(
    name = "private_symbols_awk",
    srcs = [],
    outs = ["include/jemalloc/internal/private_symbols.awk"],
    cmd = """
            $(location :private_symbols_sh) "" {list} > $@
          """.format(list = " ".join(public_symbol_and_sys_symbol)),
    tools = [":private_symbols_sh"],
)

extract_symbols(
    name = "private_symbols",
    awk_script = ":private_symbols_awk",
    deps = [
        ":jemalloc_headers",
        ":jemalloc_impl",
    ],
)

sh_binary(
    name = "private_namespace_sh",
    srcs = ["include/jemalloc/internal/private_namespace.sh"],
)

genrule(
    name = "private_namespace_h",
    srcs = [":private_symbols"],
    outs = ["include/jemalloc/internal/private_namespace.h"],
    cmd = "$(location :private_namespace_sh) $(locations :private_symbols) > $@",
    tools = [":private_namespace_sh"],
)

cc_library(
    name = "jemalloc_headers",
    hdrs = ["include/jemalloc/jemalloc.h"],
    includes = ["include"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "jemalloc_impl",
    srcs = SRCS,
    hdrs = HEADERS,
    copts = COPTS,
    includes = ["include"],
    linkopts = ["-lpthread"],
    local_defines = [
        "JEMALLOC_NO_PRIVATE_NAMESPACE",
        "_GNU_SOURCE",
        "_REENTRANT",
    ],
    visibility = ["//visibility:public"],
    deps = [":jemalloc_headers"],
)

cc_library(
    name = "jemalloc_impl_with_private_namespace",
    srcs = SRCS,
    hdrs = HEADERS + ["include/jemalloc/internal/private_namespace.h"],
    copts = COPTS,
    includes = ["include"],
    linkopts = ["-lpthread"],
    local_defines = [
        "_GNU_SOURCE",
        "_REENTRANT",
    ],
    visibility = ["//visibility:public"],
    deps = [":jemalloc_headers"],
)

cc_library(
    name = "jemalloc",
    srcs = [
        "src/jemalloc_cpp.cpp",
    ],
    hdrs = [],
    copts = [
        "-std=c++17",
        "-Wall",
        "-Wextra",
        "-g3",
        "-fvisibility=hidden",
        "-Wimplicit-fallthrough",
        "-Wdeprecated-declarations",
        "-O3",
        "-c",
    ],
    includes = ["include"],
    linkopts = [
        "-lpthread",
        "-lm",
    ],
    local_defines = [
        "JEMALLOC_NO_PRIVATE_NAMESPACE",
        "_GNU_SOURCE",
        "_REENTRANT",
    ],
    visibility = ["//visibility:public"],
    deps = [":jemalloc_impl"],
)
