digraph mygraph {
  node [shape=box];
  "//src/server:grpc_server"
  "//src/server:grpc_server" -> "//src/server:grpc_server.cc"
  "//src/server:grpc_server" -> "//src/server:grpc_server_impl"
  "//src/server:grpc_server" -> "//src/server:version_info"
  "//src/server:grpc_server" -> "@jemalloc//:jemalloc"
  "//src/server:grpc_server" -> "@libunwind//:unwind"
  "//src/server:grpc_server" -> "@libunwind//:unwind-all"
  "//src/server:grpc_server" -> "@openssl//:crypto"
  "//src/server:grpc_server" -> "@bazel_tools//tools/cpp:malloc"
  "//src/server:grpc_server" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "//src/server:grpc_server" -> "@openssl//:ssl"
  "//src/server:grpc_server" -> "@bazel_tools//tools/cpp:toolchain_type"
  "//src/server:grpc_server" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/server:grpc_server" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/server:grpc_server_impl"
  "//src/server:grpc_server_impl" -> "//src/server:grpc_server_impl.cc\n//src/server:grpc_service_handlers.h\n//src/server:grpc_server_impl.h"
  "//src/server:grpc_server_impl" -> "//src/common:blocking_list"
  "//src/server:grpc_server_impl" -> "//src/common:garbage_collector"
  "//src/server:grpc_server_impl" -> "//src/proto:cc_grpc_service"
  "//src/server:grpc_server_impl" -> "//src/context:server_run_info"
  "//src/server:grpc_server_impl" -> "//src/util:config_manager"
  "//src/server:grpc_server_impl" -> "@boost//:thread"
  "//src/server:grpc_server_impl" -> "//src/util:util"
  "//src/server:grpc_server_impl" -> "//src/async_grpc:async_grpc"
  "//src/server:grpc_server_impl" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/server:grpc_server_impl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:thread"
  "@boost//:thread" -> "@platforms//os:linux"
  "@boost//:thread" -> "@boost//:windows_x86_64"
  "@boost//:thread" -> "@boost//:libs/thread/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp\n@boost//:libs/thread/include/boost/thread/win32/once.hpp\n@boost//:libs/thread/include/boost/thread/win32/thread_heap_alloc.hpp\n@boost//:libs/thread/include/boost/thread/win32/basic_timed_mutex.hpp\n@boost//:libs/thread/include/boost/thread/exceptional_ptr.hpp\n@boost//:libs/thread/include/boost/thread/executors/basic_thread_pool.hpp\n@boost//:libs/thread/include/boost/thread/win32/mutex.hpp\n...and 166 more items"
  [label="@@platforms//os:android\n@@platforms//os:ios\n@@platforms//os:watchos...@@boost//:windows_x86_64......"];
  "@boost//:thread" -> "@platforms//os:android"
  "@boost//:thread" -> "@platforms//os:osx"
  "@boost//:thread" -> "@platforms//os:ios"
  "@boost//:thread" -> "@platforms//os:watchos\n@platforms//os:tvos"
  "@boost//:thread" -> "@platforms//os:windows"
  "@boost//:thread" -> "@boost//:algorithm"
  "@boost//:thread" -> "@boost//:assert"
  "@boost//:thread" -> "@boost//:atomic"
  "@boost//:thread" -> "@boost//:bind"
  "@boost//:thread" -> "@boost//:chrono"
  "@boost//:thread" -> "@boost//:config"
  "@boost//:thread" -> "@boost//:core"
  "@boost//:thread" -> "@boost//:cstdint"
  "@boost//:thread" -> "@boost//:date_time"
  "@boost//:thread" -> "@boost//:detail"
  "@boost//:thread" -> "@boost//:enable_shared_from_this"
  "@boost//:thread" -> "@boost//:exception"
  "@boost//:thread" -> "@boost//:function"
  "@boost//:thread" -> "@boost//:functional"
  "@boost//:thread" -> "@boost//:io"
  "@boost//:thread" -> "@boost//:iterator"
  "@boost//:thread" -> "@boost//:lexical_cast"
  "@boost//:thread" -> "@boost//:move"
  "@boost//:thread" -> "@boost//:optional"
  "@boost//:thread" -> "@boost//:predef"
  "@boost//:thread" -> "@boost//:preprocessor"
  "@boost//:thread" -> "@boost//:scoped_array"
  "@boost//:thread" -> "@boost//:shared_ptr"
  "@boost//:thread" -> "@boost//:smart_ptr"
  "@boost//:thread" -> "@boost//:static_assert"
  "@boost//:thread" -> "@boost//:system"
  "@boost//:thread" -> "@boost//:throw_exception"
  "@boost//:thread" -> "@boost//:tuple"
  "@boost//:thread" -> "@boost//:type_traits"
  "@boost//:thread" -> "@boost//:utility"
  "@boost//:thread" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:thread" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/proto:cc_grpc_service"
  "//src/proto:cc_grpc_service" -> "//src/proto:_cc_grpc_service_grpc_codegen"
  "//src/proto:cc_grpc_service" -> "//src/proto:cc_error"
  "//src/proto:cc_grpc_service" -> "//src/proto:cc_service"
  "//src/proto:cc_grpc_service" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/proto:cc_grpc_service" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/proto:cc_grpc_service" -> "@com_github_grpc_grpc//:grpc++_codegen_proto"
  "//src/proto:cc_service"
  "//src/proto:cc_service" -> "//src/proto:service_proto"
  "//src/proto:cc_service" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/proto:cc_service" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@boost//:libs/thread/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp\n@boost//:libs/thread/include/boost/thread/win32/once.hpp\n@boost//:libs/thread/include/boost/thread/win32/thread_heap_alloc.hpp\n@boost//:libs/thread/include/boost/thread/win32/basic_timed_mutex.hpp\n@boost//:libs/thread/include/boost/thread/exceptional_ptr.hpp\n@boost//:libs/thread/include/boost/thread/executors/basic_thread_pool.hpp\n@boost//:libs/thread/include/boost/thread/win32/mutex.hpp\n...and 166 more items"
  "//src/common:blocking_list"
  "//src/common:blocking_list" -> "//src/common:blocking_list.h"
  "//src/common:blocking_list" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/common:blocking_list" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/server:grpc_server_impl.cc\n//src/server:grpc_service_handlers.h\n//src/server:grpc_server_impl.h"
  "//src/common:garbage_collector"
  "//src/common:garbage_collector" -> "//src/common:garbage_collector.cc\n//src/common:garbage_collector.h"
  "//src/common:garbage_collector" -> "//src/common:module"
  "//src/common:garbage_collector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/common:garbage_collector" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/common:garbage_collector" -> "//src/util:util"
  "//src/common:module"
  "//src/common:module" -> "//src/common:module.h\n//src/common:module.cc"
  "//src/common:module" -> "//src/common:dependency_map"
  "//src/common:module" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/common:module" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/common:module" -> "@folly//:folly"
  "//src/common:module" -> "@com_github_gflags_gflags//:gflags"
  "//src/common:module" -> "@com_github_glog_glog//:glog"
  "//src/common:dependency_map"
  "//src/common:dependency_map" -> "//src/common:dependency_map.cc\n//src/common:dependency_map.h"
  "//src/common:dependency_map" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/common:dependency_map" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/common:garbage_collector.cc\n//src/common:garbage_collector.h"
  "//src/common:blocking_list.h"
  "//src/server:grpc_server.cc"
  "//src/proto:_cc_grpc_service_grpc_codegen"
  "//src/proto:_cc_grpc_service_grpc_codegen" -> "//src/proto:service_proto"
  "//src/proto:_cc_grpc_service_grpc_codegen" -> "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin"
  "//src/proto:_cc_grpc_service_grpc_codegen" -> "@com_google_protobuf//:protoc"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin" -> "@com_github_grpc_grpc//src/compiler:cpp_plugin.cc"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin" -> "@com_github_grpc_grpc//src/compiler:grpc_plugin_support"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@com_github_grpc_grpc//src/compiler:grpc_cpp_plugin" -> "@bazel_tools//tools/cpp:malloc"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@com_github_grpc_grpc//src/compiler:node_generator.cc\n@com_github_grpc_grpc//src/compiler:protobuf_plugin.h\n@com_github_grpc_grpc//src/compiler:csharp_generator.h\n@com_github_grpc_grpc//src/compiler:config.h\n@com_github_grpc_grpc//src/compiler:objective_c_generator_helpers.h\n@com_github_grpc_grpc//src/compiler:ruby_generator.cc\n@com_github_grpc_grpc//src/compiler:php_generator_helpers.h\n@com_github_grpc_grpc//src/compiler:cpp_generator_helpers.h\n...and 22 more items"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@com_github_grpc_grpc//src/compiler:proto_parser_helper"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@com_github_grpc_grpc//:grpc++_config_proto"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@com_github_grpc_grpc//third_party:protobuf"
  "@com_github_grpc_grpc//src/compiler:grpc_plugin_support" -> "@com_github_grpc_grpc//third_party:protobuf_clib"
  "@com_github_grpc_grpc//third_party:protobuf_clib"
  "@com_github_grpc_grpc//third_party:protobuf_clib" -> "@com_google_protobuf//:protoc_lib"
  "@com_google_protobuf//:protoc_lib"
  "@com_google_protobuf//:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib"
  "@com_github_grpc_grpc//src/compiler:proto_parser_helper"
  "@com_github_grpc_grpc//src/compiler:proto_parser_helper" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/compiler:proto_parser_helper" -> "@com_github_grpc_grpc//src/compiler:proto_parser_helper.cc\n@com_github_grpc_grpc//src/compiler:proto_parser_helper.h"
  "@com_github_grpc_grpc//src/compiler:proto_parser_helper" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/compiler:proto_parser_helper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/compiler:proto_parser_helper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/compiler:node_generator.cc\n@com_github_grpc_grpc//src/compiler:protobuf_plugin.h\n@com_github_grpc_grpc//src/compiler:csharp_generator.h\n@com_github_grpc_grpc//src/compiler:config.h\n@com_github_grpc_grpc//src/compiler:objective_c_generator_helpers.h\n@com_github_grpc_grpc//src/compiler:ruby_generator.cc\n@com_github_grpc_grpc//src/compiler:php_generator_helpers.h\n@com_github_grpc_grpc//src/compiler:cpp_generator_helpers.h\n...and 22 more items"
  "//src/proto:service_proto"
  "//src/proto:service_proto" -> "//src/proto:service.proto"
  "//src/proto:service_proto" -> "//src/proto:error_proto"
  "//src/proto:service_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_grpc_grpc//src/compiler:cpp_plugin.cc"
  "//src/util:config_manager"
  "//src/util:config_manager" -> "//src/util:config_manager.h\n//src/util:config_manager.cc"
  "//src/util:config_manager" -> "//src/util:util"
  "//src/util:config_manager" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/util:config_manager" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/util:config_manager" -> "@folly//:folly"
  "//src/util:config_manager" -> "//src/proto:cc_config"
  "//src/proto:cc_config"
  "//src/proto:cc_config" -> "//src/proto:config_proto"
  "//src/proto:cc_config" -> "@bazel_tools//tools/proto:cc_toolchain"
  "//src/proto:cc_config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/util:util"
  "//src/util:util" -> "//src/util:util.cc\n//src/util:util.h"
  "//src/util:util" -> "//src/common:net"
  "//src/util:util" -> "@boost//:algorithm"
  "//src/util:util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/util:util" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/util:util" -> "@boost//:beast"
  "//src/util:util" -> "@smhasher//:smhasher"
  "//src/util:util" -> "@openssl//:openssl"
  "//src/util:util" -> "@fmt//:fmt"
  "//src/util:util" -> "@boost//:iostreams"
  "//src/util:util" -> "@com_github_glog_glog//:glog"
  "//src/util:util" -> "@com_google_absl//absl/strings:strings"
  "//src/util:util" -> "@com_google_absl//absl/time:time"
  "//src/util:util" -> "@com_google_protobuf//:protobuf"
  "//src/util:util" -> "@com_google_absl//absl/synchronization:synchronization"
  "@boost//:beast"
  "@boost//:beast" -> "@boost//:windows_x86_64"
  "@boost//:beast" -> "@boost//:beast_std_string_view"
  "@boost//:beast" -> "@boost//:libs/beast/include/boost/beast/_experimental/test/impl/error.ipp\n@boost//:libs/beast/include/boost/beast/_experimental/test/impl/error.hpp\n@boost//:libs/beast/include/boost/beast/http/field.hpp\n@boost//:libs/beast/include/boost/beast/http/detail/rfc7230.hpp\n@boost//:libs/beast/include/boost/beast/_experimental/http/icy_stream.hpp\n@boost//:libs/beast/include/boost/beast/core/impl/buffers_adaptor.hpp\n@boost//:libs/beast/include/boost/beast/core/flat_stream.hpp\n...and 237 more items"
  "@boost//:beast" -> "@platforms//os:windows"
  "@boost//:beast" -> "@boost//:asio"
  "@boost//:beast" -> "@boost//:assert"
  "@boost//:beast" -> "@boost//:config"
  "@boost//:beast" -> "@boost//:core"
  "@boost//:beast" -> "@boost//:detail"
  "@boost//:beast" -> "@boost//:endian"
  "@boost//:beast" -> "@boost//:intrusive"
  "@boost//:beast" -> "@boost//:is_placeholder"
  "@boost//:beast" -> "@boost//:mp11"
  "@boost//:beast" -> "@boost//:optional"
  "@boost//:beast" -> "@boost//:preprocessor"
  "@boost//:beast" -> "@boost//:shared_ptr"
  "@boost//:beast" -> "@boost//:smart_ptr"
  "@boost//:beast" -> "@boost//:static_assert"
  "@boost//:beast" -> "@boost//:static_string"
  "@boost//:beast" -> "@boost//:system"
  "@boost//:beast" -> "@boost//:throw_exception"
  "@boost//:beast" -> "@boost//:tribool"
  "@boost//:beast" -> "@boost//:type_traits"
  "@boost//:beast" -> "@boost//:utility"
  "@boost//:beast" -> "@boost//:version"
  "@boost//:beast" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:beast" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:tribool"
  "@boost//:tribool" -> "@boost//:windows_x86_64"
  "@boost//:tribool" -> "@boost//:libs/logic/include/boost/logic/tribool_fwd.hpp\n@boost//:libs/logic/include/boost/logic/tribool.hpp"
  "@boost//:tribool" -> "@platforms//os:windows"
  "@boost//:tribool" -> "@boost//:config"
  "@boost//:tribool" -> "@boost//:detail"
  "@boost//:tribool" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:tribool" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/logic/include/boost/logic/tribool_fwd.hpp\n@boost//:libs/logic/include/boost/logic/tribool.hpp"
  "@boost//:static_string"
  "@boost//:static_string" -> "@boost//:windows_x86_64"
  "@boost//:static_string" -> "@platforms//os:windows"
  "@boost//:static_string" -> "@boost//:libs/static_string/include/boost/static_string/config.hpp\n@boost//:libs/static_string/include/boost/static_string/static_string.hpp\n@boost//:libs/static_string/include/boost/static_string.hpp"
  "@boost//:static_string" -> "@boost//:container_hash"
  "@boost//:static_string" -> "@boost//:static_assert"
  "@boost//:static_string" -> "@boost//:throw_exception"
  "@boost//:static_string" -> "@boost//:utility"
  "@boost//:static_string" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:static_string" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/static_string/include/boost/static_string/config.hpp\n@boost//:libs/static_string/include/boost/static_string/static_string.hpp\n@boost//:libs/static_string/include/boost/static_string.hpp"
  "//src/common:net"
  "//src/common:net" -> "//src/common:host_spec.cc\n//src/common:ip_address.h\n//src/common:ip_address.cc\n//src/common:host_spec.h"
  "//src/common:net" -> "@com_google_absl//absl/strings:strings"
  "//src/common:net" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/common:net" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/util:util.cc\n//src/util:util.h"
  "//src/context:server_run_info"
  "//src/context:server_run_info" -> "//src/context:server_run_info.h"
  "//src/context:server_run_info" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/context:server_run_info" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/context:server_run_info.h"
  "//src/common:dependency_map.cc\n//src/common:dependency_map.h"
  "//src/common:host_spec.cc\n//src/common:ip_address.h\n//src/common:ip_address.cc\n//src/common:host_spec.h"
  "//src/proto:service.proto"
  "@boost//:asio"
  "@boost//:asio" -> "@boost//:asio_io_uring"
  "@boost//:asio" -> "@boost//:windows_x86_64"
  "@boost//:asio" -> "@boost//:asio_no_epoll"
  "@boost//:asio" -> "@boost//:libs/asio/include/boost/asio/impl/buffered_read_stream.hpp\n@boost//:libs/asio/include/boost/asio/detail/win_object_handle_service.hpp\n@boost//:libs/asio/include/boost/asio/detail/impl/io_uring_socket_service_base.ipp\n@boost//:libs/asio/include/boost/asio/execution/sender.hpp\n@boost//:libs/asio/include/boost/asio/ip/basic_resolver_query.hpp\n@boost//:libs/asio/include/boost/asio/detail/signal_init.hpp\n@boost//:libs/asio/include/boost/asio/basic_deadline_timer.hpp\n...and 663 more items"
  "@boost//:asio" -> "@platforms//os:android"
  "@boost//:asio" -> "@platforms//os:osx"
  "@boost//:asio" -> "@platforms//os:ios"
  "@boost//:asio" -> "@platforms//os:watchos\n@platforms//os:tvos"
  "@boost//:asio" -> "@platforms//os:windows"
  "@boost//:asio" -> "@boost//:assert"
  "@boost//:asio" -> "@boost//:bind"
  "@boost//:asio" -> "@boost//:cerrno"
  "@boost//:asio" -> "@boost//:config"
  "@boost//:asio" -> "@boost//:date_time"
  "@boost//:asio" -> "@boost//:limits"
  "@boost//:asio" -> "@boost//:regex"
  "@boost//:asio" -> "@boost//:static_assert"
  "@boost//:asio" -> "@boost//:system"
  "@boost//:asio" -> "@boost//:throw_exception"
  "@boost//:asio" -> "@boost//:version"
  "@boost//:asio" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:asio" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:date_time"
  "@boost//:date_time" -> "@boost//:windows_x86_64"
  "@boost//:date_time" -> "@boost//:libs/date_time/include/boost/date_time/c_local_time_adjustor.hpp\n@boost//:libs/date_time/include/boost/date_time/date.hpp\n@boost//:libs/date_time/include/boost/date_time/time_iterator.hpp\n@boost//:libs/date_time/include/boost/date_time/string_parse_tree.hpp\n@boost//:libs/date_time/include/boost/date_time/microsec_time_clock.hpp\n@boost//:libs/date_time/include/boost/date_time/posix_time/time_parsers.hpp\n...and 99 more items"
  "@boost//:date_time" -> "@boost//:algorithm"
  "@boost//:date_time" -> "@boost//:io"
  "@boost//:date_time" -> "@boost//:lexical_cast"
  "@boost//:date_time" -> "@platforms//os:windows"
  "@boost//:date_time" -> "@boost//:mpl"
  "@boost//:date_time" -> "@boost//:operators"
  "@boost//:date_time" -> "@boost//:static_assert"
  "@boost//:date_time" -> "@boost//:tokenizer"
  "@boost//:date_time" -> "@boost//:type_traits"
  "@boost//:date_time" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:date_time" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/date_time/include/boost/date_time/c_local_time_adjustor.hpp\n@boost//:libs/date_time/include/boost/date_time/date.hpp\n@boost//:libs/date_time/include/boost/date_time/time_iterator.hpp\n@boost//:libs/date_time/include/boost/date_time/string_parse_tree.hpp\n@boost//:libs/date_time/include/boost/date_time/microsec_time_clock.hpp\n@boost//:libs/date_time/include/boost/date_time/posix_time/time_parsers.hpp\n...and 99 more items"
  "@boost//:libs/asio/include/boost/asio/impl/buffered_read_stream.hpp\n@boost//:libs/asio/include/boost/asio/detail/win_object_handle_service.hpp\n@boost//:libs/asio/include/boost/asio/detail/impl/io_uring_socket_service_base.ipp\n@boost//:libs/asio/include/boost/asio/execution/sender.hpp\n@boost//:libs/asio/include/boost/asio/ip/basic_resolver_query.hpp\n@boost//:libs/asio/include/boost/asio/detail/signal_init.hpp\n@boost//:libs/asio/include/boost/asio/basic_deadline_timer.hpp\n...and 663 more items"
  "@boost//:asio_no_epoll"
  "@boost//:asio_no_epoll" -> "@boost//:asio_disable_epoll"
  "@boost//:asio_disable_epoll"
  "@boost//:asio_io_uring"
  "@boost//:asio_io_uring" -> "@boost//:asio_has_io_uring"
  "//src/common:module.h\n//src/common:module.cc"
  "//src/util:config_manager.h\n//src/util:config_manager.cc"
  "//src/proto:cc_error"
  "//src/proto:cc_error" -> "//src/proto:error_proto"
  "//src/proto:cc_error" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/proto:cc_error" -> "@bazel_tools//tools/proto:cc_toolchain"
  "//src/proto:error_proto"
  "//src/proto:error_proto" -> "//src/proto:error.proto"
  "//src/proto:error_proto" -> "@bazel_tools//tools/proto:protoc"
  "//src/proto:error.proto"
  "@smhasher//:smhasher"
  "@smhasher//:smhasher" -> "@smhasher//:src/MurmurHash2.h\n@smhasher//:src/MurmurHash2.cpp\n@smhasher//:src/MurmurHash3.cpp\n@smhasher//:src/MurmurHash3.h"
  "@smhasher//:smhasher" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@smhasher//:smhasher" -> "@bazel_tools//tools/def_parser:def_parser"
  "@smhasher//:src/MurmurHash2.h\n@smhasher//:src/MurmurHash2.cpp\n@smhasher//:src/MurmurHash3.cpp\n@smhasher//:src/MurmurHash3.h"
  "@boost//:enable_shared_from_this"
  "@boost//:enable_shared_from_this" -> "@boost//:windows_x86_64"
  "@boost//:enable_shared_from_this" -> "@platforms//os:windows"
  "@boost//:enable_shared_from_this" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:enable_shared_from_this" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:beast_std_string_view"
  "@boost//:beast_std_string_view" -> "@boost//:beast_use_std_string_view"
  "@boost//:beast_use_std_string_view"
  "@com_github_grpc_grpc//src/compiler:proto_parser_helper.cc\n@com_github_grpc_grpc//src/compiler:proto_parser_helper.h"
  "@folly//:folly"
  "@folly//:folly" -> "@folly//:MathOperation"
  "@folly//:folly" -> "@folly//:MathOperation_AVX2"
  "@folly//:folly" -> "@folly//:assemble"
  "@folly//:folly" -> "@folly//:base64"
  "@folly//:folly" -> "@folly//:checksum"
  "@folly//:folly" -> "@folly//:common"
  "@folly//:folly" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@folly//:folly" -> "@bazel_tools//tools/def_parser:def_parser"
  "@folly//:checksum"
  "@folly//:checksum" -> "@folly//:folly/hash/detail/Crc32CombineDetail.cpp\n@folly//:folly/external/fast-crc32/avx512_crc32c_v8s3x4.cpp\n@folly//:folly/hash/detail/ChecksumDetail.cpp\n@folly//:folly/external/fast-crc32/sse_crc32c_v8s3x3.cpp\n@folly//:folly/hash/detail/Crc32cDetail.cpp"
  "@folly//:checksum" -> "@folly//:common"
  "@folly//:checksum" -> "@bazel_tools//tools/def_parser:def_parser"
  "@folly//:checksum" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@folly//:base64"
  "@folly//:base64" -> "@folly//:folly/detail/base64_detail/Base64_SSE4_2.cpp"
  "@folly//:base64" -> "@folly//:common"
  "@folly//:base64" -> "@bazel_tools//tools/def_parser:def_parser"
  "@folly//:base64" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@folly//:assemble"
  "@folly//:assemble" -> "@folly//:folly/memcpy.S"
  "@folly//:assemble" -> "@folly//:common"
  "@folly//:assemble" -> "@bazel_tools//tools/def_parser:def_parser"
  "@folly//:assemble" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@folly//:MathOperation_AVX2"
  "@folly//:MathOperation_AVX2" -> "@folly//:folly/crypto/detail/MathOperation_AVX2.cpp"
  "@folly//:MathOperation_AVX2" -> "@folly//:common"
  "@folly//:MathOperation_AVX2" -> "@bazel_tools//tools/def_parser:def_parser"
  "@folly//:MathOperation_AVX2" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@folly//:MathOperation"
  "@folly//:MathOperation" -> "@folly//:folly/crypto/detail/MathOperation_Simple.cpp\n@folly//:folly/crypto/detail/MathOperation_SSE2.cpp"
  "@folly//:MathOperation" -> "@folly//:common"
  "@folly//:MathOperation" -> "@bazel_tools//tools/def_parser:def_parser"
  "@folly//:MathOperation" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:asio_has_io_uring"
  "@folly//:common"
  "@folly//:common" -> "@folly//:linux_x86_64"
  "@folly//:common" -> "@folly//:linux_aarch64"
  "@folly//:common" -> "@folly//:folly/debugging/exception_tracer/SmartExceptionTracer.cpp\n@folly//:folly/debugging/exception_tracer/ExceptionTracerLib.cpp\n@folly//:folly/executors/ScheduledExecutor.h\n@folly//:folly/observer/CoreCachedObserver.h\n@folly//:folly/container/MapUtil.h\n@folly//:folly/net/detail/SocketFileDescriptorMap.cpp\n@folly//:folly/experimental/observer/SimpleObservable.h\n@folly//:folly/IPAddressV6.h\n@folly//:folly/Executor.cpp\n@folly//:folly/channels/Transform-inl.h\n...and 1394 more items"
  [label="@@folly//:linux_aarch64"];
  "@folly//:common" -> "@folly//:folly/crypto/detail/MathOperation_AVX2.cpp"
  "@folly//:common" -> "@folly//:folly/crypto/detail/MathOperation_Simple.cpp\n@folly//:folly/crypto/detail/MathOperation_SSE2.cpp"
  "@folly//:common" -> "@folly//:folly/detail/base64_detail/Base64_SSE4_2.cpp"
  "@folly//:common" -> "@folly//:folly/hash/detail/Crc32CombineDetail.cpp\n@folly//:folly/external/fast-crc32/avx512_crc32c_v8s3x4.cpp\n@folly//:folly/hash/detail/ChecksumDetail.cpp\n@folly//:folly/external/fast-crc32/sse_crc32c_v8s3x3.cpp\n@folly//:folly/hash/detail/Crc32cDetail.cpp"
  "@folly//:common" -> "@folly//:folly/memcpy.S"
  "@folly//:common" -> "@folly//:folly-config_h"
  "@folly//:common" -> "@boost//:algorithm"
  "@folly//:common" -> "@boost//:bind"
  "@folly//:common" -> "@boost//:context"
  "@folly//:common" -> "@boost//:conversion"
  "@folly//:common" -> "@boost//:core"
  "@folly//:common" -> "@boost//:crc"
  "@folly//:common" -> "@boost//:filesystem"
  "@folly//:common" -> "@boost//:mpl"
  "@folly//:common" -> "@boost//:multi_index"
  "@folly//:common" -> "@boost//:preprocessor"
  "@folly//:common" -> "@boost//:program_options"
  "@folly//:common" -> "@boost//:utility"
  "@folly//:common" -> "@bzip2//:bzip2"
  "@folly//:common" -> "@com_github_gflags_gflags//:gflags"
  "@folly//:common" -> "@com_github_glog_glog//:glog"
  "@folly//:common" -> "@com_github_google_snappy//:snappy"
  "@folly//:common" -> "@com_google_googletest//:gtest"
  "@folly//:common" -> "@double-conversion//:double-conversion"
  "@folly//:common" -> "@fmt//:fmt"
  "@folly//:common" -> "@jemalloc//:jemalloc"
  "@folly//:common" -> "@libaio//:aio"
  "@folly//:common" -> "@libdwarf//:dwarf"
  "@folly//:common" -> "@libevent//:event"
  "@folly//:common" -> "@libevent//:event_openssl"
  "@folly//:common" -> "@libevent//:event_pthreads"
  "@folly//:common" -> "@libiberty//:iberty"
  "@folly//:common" -> "@libsodium//:sodium"
  "@folly//:common" -> "@libunwind//:unwind-all"
  "@folly//:common" -> "@liburing//:liburing-ffi"
  "@folly//:common" -> "@openssl//:ssl"
  "@folly//:common" -> "@xz//:xz"
  "@folly//:common" -> "@zlib//:zlib"
  "@folly//:common" -> "@bazel_tools//tools/def_parser:def_parser"
  "@folly//:common" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@liburing//:liburing-ffi"
  "@liburing//:liburing-ffi" -> "@liburing//:linux_x86_64"
  "@liburing//:liburing-ffi" -> "@liburing//:linux_aarch64"
  "@liburing//:liburing-ffi" -> "@liburing//:src/version.c\n@liburing//:src/syscall.c\n@liburing//:src/setup.h\n@liburing//:src/register.c\n@liburing//:src/arch/x86/syscall.h\n@liburing//:src/syscall.h\n@liburing//:src/lib.h\n@liburing//:src/int_flags.h\n@liburing//:src/arch/aarch64/syscall.h\n@liburing//:src/ffi.c\n@liburing//:src/arch/x86/lib.h\n@liburing//:src/queue.c\n@liburing//:src/setup.c\n@liburing//:src/include/liburing/barrier.h\n@liburing//:src/nolibc.c\n@liburing//:src/include/liburing.h\n...and 2 more items"
  [label="@@liburing//:linux_x86_64@@liburing//:linux_aarch64"];
  "@liburing//:liburing-ffi" -> "@liburing//:compat_h\n@liburing//:io_uring_version_h"
  "@liburing//:liburing-ffi" -> "@liburing//:private_header"
  "@liburing//:liburing-ffi" -> "@bazel_tools//tools/def_parser:def_parser"
  "@liburing//:liburing-ffi" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@liburing//:private_header"
  "@liburing//:private_header" -> "@liburing//:src/arch/syscall-defs.h"
  "@liburing//:private_header" -> "@bazel_tools//tools/def_parser:def_parser"
  "@liburing//:private_header" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@liburing//:src/arch/syscall-defs.h"
  "@liburing//:compat_h\n@liburing//:io_uring_version_h"
  "@liburing//:compat_h\n@liburing//:io_uring_version_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@liburing//:src/version.c\n@liburing//:src/syscall.c\n@liburing//:src/setup.h\n@liburing//:src/register.c\n@liburing//:src/arch/x86/syscall.h\n@liburing//:src/syscall.h\n@liburing//:src/lib.h\n@liburing//:src/int_flags.h\n@liburing//:src/arch/aarch64/syscall.h\n@liburing//:src/ffi.c\n@liburing//:src/arch/x86/lib.h\n@liburing//:src/queue.c\n@liburing//:src/setup.c\n@liburing//:src/include/liburing/barrier.h\n@liburing//:src/nolibc.c\n@liburing//:src/include/liburing.h\n...and 2 more items"
  "@liburing//:linux_aarch64"
  "@liburing//:linux_aarch64" -> "@platforms//os:linux"
  "@liburing//:linux_aarch64" -> "@platforms//cpu:aarch64"
  "@liburing//:linux_x86_64"
  "@liburing//:linux_x86_64" -> "@platforms//os:linux"
  "@liburing//:linux_x86_64" -> "@platforms//cpu:x86_64"
  "@libunwind//:unwind-all"
  "@libunwind//:unwind-all" -> "@libunwind//:context"
  "@libunwind//:unwind-all" -> "@libunwind//:unwind"
  "@libunwind//:unwind-all" -> "@libunwind//:unwind-arch"
  "@libunwind//:unwind-all" -> "@libunwind//:unwind-coredump"
  "@libunwind//:unwind-all" -> "@libunwind//:unwind-elf64"
  "@libunwind//:unwind-all" -> "@libunwind//:unwind-ptrace"
  "@libunwind//:unwind-all" -> "@libunwind//:unwind-setjmp"
  "@libunwind//:unwind-all" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:unwind-all" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:unwind-setjmp"
  "@libunwind//:unwind-setjmp" -> "@libunwind//:linux_x86_64"
  "@libunwind//:unwind-setjmp" -> "@libunwind//:linux_aarch64"
  "@libunwind//:unwind-setjmp" -> "@libunwind//:src/mi/init.c"
  "@libunwind//:unwind-setjmp" -> "@libunwind//:src/setjmp/longjmp.c\n@libunwind//:src/setjmp/siglongjmp.c"
  "@libunwind//:unwind-setjmp" -> "@libunwind//:unwind"
  "@libunwind//:unwind-setjmp" -> "@libunwind//:unwind-elf64"
  "@libunwind//:unwind-setjmp" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:unwind-setjmp" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:src/setjmp/longjmp.c\n@libunwind//:src/setjmp/siglongjmp.c"
  "@libunwind//:unwind-ptrace"
  "@libunwind//:unwind-ptrace" -> "@libunwind//:linux_x86_64"
  "@libunwind//:unwind-ptrace" -> "@libunwind//:linux_aarch64"
  "@libunwind//:unwind-ptrace" -> "@libunwind//:src/mi/init.c"
  "@libunwind//:unwind-ptrace" -> "@libunwind//:src/ptrace/_UPT_create.c\n@libunwind//:src/ptrace/_UPT_get_elf_filename.c\n@libunwind//:src/ptrace/_UPT_get_proc_name.c\n@libunwind//:src/ptrace/_UPT_put_unwind_info.c\n@libunwind//:src/ptrace/_UPT_accessors.c\n@libunwind//:src/ptrace/_UPT_elf.c\n@libunwind//:src/ptrace/_UPT_access_fpreg.c\n@libunwind//:src/ptrace/_UPT_reg_offset.c\n@libunwind//:src/ptrace/_UPT_access_reg.c\n@libunwind//:src/ptrace/_UPT_resume.c\n@libunwind//:src/ptrace/_UPT_access_mem.c\n...and 3 more items"
  "@libunwind//:unwind-ptrace" -> "@libunwind//:unwind-elf64"
  "@libunwind//:unwind-ptrace" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:unwind-ptrace" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:src/ptrace/_UPT_create.c\n@libunwind//:src/ptrace/_UPT_get_elf_filename.c\n@libunwind//:src/ptrace/_UPT_get_proc_name.c\n@libunwind//:src/ptrace/_UPT_put_unwind_info.c\n@libunwind//:src/ptrace/_UPT_accessors.c\n@libunwind//:src/ptrace/_UPT_elf.c\n@libunwind//:src/ptrace/_UPT_access_fpreg.c\n@libunwind//:src/ptrace/_UPT_reg_offset.c\n@libunwind//:src/ptrace/_UPT_access_reg.c\n@libunwind//:src/ptrace/_UPT_resume.c\n@libunwind//:src/ptrace/_UPT_access_mem.c\n...and 3 more items"
  "@libunwind//:unwind-arch"
  "@libunwind//:unwind-arch" -> "@libunwind//:linux_x86_64"
  "@libunwind//:unwind-arch" -> "@libunwind//:linux_aarch64"
  "@libunwind//:unwind-arch" -> "@libunwind//:src/aarch64/is_fpreg.c\n@libunwind//:src/aarch64/regname.c\n@libunwind//:src/mi/mempool.c\n@libunwind//:src/x86_64/is_fpreg.c\n@libunwind//:src/x86_64/regname.c\n@libunwind//:src/os-linux.c\n@libunwind//:src/mi/strerror.c\n@libunwind//:src/mi/flush_cache.c"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:unwind-arch" -> "@libunwind//:src/mi/init.c"
  [label="@@libunwind//:linux_x86_64\n@@libunwind//:linux_aarch64"];
  "@libunwind//:unwind-arch" -> "@libunwind//:src/aarch64/Gstep.c\n@libunwind//:src/mi/Gset_caching_policy.c\n@libunwind//:src/x86_64/Ginit.c\n@libunwind//:src/aarch64/Gis_signal_frame.c\n@libunwind//:src/x86_64/Gos-linux.c\n@libunwind//:src/aarch64/Gos-linux.c\n@libunwind//:src/aarch64/Gapply_reg_state.c\n@libunwind//:src/mi/Gget_elf_filename.c\n@libunwind//:src/x86_64/Gregs.c\n@libunwind//:src/aarch64/Ginit_local.c\n@libunwind//:src/aarch64/Gcreate_addr_space.c\n@libunwind//:src/aarch64/Gget_save_loc.c\n...and 39 more items"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:unwind-arch" -> "@libunwind//:unwind"
  "@libunwind//:unwind-arch" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:unwind-arch" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:unwind"
  "@libunwind//:unwind" -> "@libunwind//:linux_x86_64"
  "@libunwind//:unwind" -> "@libunwind//:linux_aarch64"
  "@libunwind//:unwind" -> "@libunwind//:src/unwind/FindEnclosingFunction.c\n@libunwind//:src/x86_64/Linit_remote.c\n@libunwind//:src/aarch64/Lget_proc_info.c\n@libunwind//:src/unwind/Backtrace.c\n@libunwind//:src/aarch64/Lstep.c\n@libunwind//:src/unwind/GetLanguageSpecificData.c\n@libunwind//:src/aarch64/Linit_local.c\n@libunwind//:src/mi/dyn-info-list.c\n@libunwind//:src/aarch64/Lresume.c\n@libunwind//:src/unwind/ForcedUnwind.c\n@libunwind//:src/unwind/GetDataRelBase.c\n...and 70 more items"
  [label="@@libunwind//:linux_x86_64@@libunwind//:linux_aarch64"];
  "@libunwind//:unwind" -> "@libunwind//:src/aarch64/is_fpreg.c\n@libunwind//:src/aarch64/regname.c\n@libunwind//:src/mi/mempool.c\n@libunwind//:src/x86_64/is_fpreg.c\n@libunwind//:src/x86_64/regname.c\n@libunwind//:src/os-linux.c\n@libunwind//:src/mi/strerror.c\n@libunwind//:src/mi/flush_cache.c"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:unwind" -> "@libunwind//:src/mi/init.c"
  "@libunwind//:unwind" -> "@libunwind//:src/dwarf/Gparser.c\n@libunwind//:src/dwarf/Gpe.c\n@libunwind//:src/dwarf/Gget_proc_info_in_range.c\n@libunwind//:src/dwarf/Gfde.c\n@libunwind//:src/dwarf/Gfind_proc_info-lsb.c\n@libunwind//:src/dwarf/Gexpr.c\n@libunwind//:src/dwarf/Gfind_unwind_table.c"
  "@libunwind//:unwind" -> "@libunwind//:context"
  "@libunwind//:unwind" -> "@libunwind//:unwind-elf64"
  "@libunwind//:unwind" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:unwind" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:src/aarch64/is_fpreg.c\n@libunwind//:src/aarch64/regname.c\n@libunwind//:src/mi/mempool.c\n@libunwind//:src/x86_64/is_fpreg.c\n@libunwind//:src/x86_64/regname.c\n@libunwind//:src/os-linux.c\n@libunwind//:src/mi/strerror.c\n@libunwind//:src/mi/flush_cache.c"
  "@libunwind//:src/unwind/FindEnclosingFunction.c\n@libunwind//:src/x86_64/Linit_remote.c\n@libunwind//:src/aarch64/Lget_proc_info.c\n@libunwind//:src/unwind/Backtrace.c\n@libunwind//:src/aarch64/Lstep.c\n@libunwind//:src/unwind/GetLanguageSpecificData.c\n@libunwind//:src/aarch64/Linit_local.c\n@libunwind//:src/mi/dyn-info-list.c\n@libunwind//:src/aarch64/Lresume.c\n@libunwind//:src/unwind/ForcedUnwind.c\n@libunwind//:src/unwind/GetDataRelBase.c\n...and 70 more items"
  "@libunwind//:context"
  "@libunwind//:context" -> "@libunwind//:linux_x86_64"
  "@libunwind//:context" -> "@libunwind//:linux_aarch64"
  "@libunwind//:context" -> "@libunwind//:src/x86_64/longjmp.S\n@libunwind//:src/x86_64/getcontext.S\n@libunwind//:src/x86_64/siglongjmp.S\n@libunwind//:src/x86_64/setcontext.S\n@libunwind//:src/aarch64/getcontext.S\n@libunwind//:src/aarch64/longjmp.S\n@libunwind//:src/aarch64/siglongjmp.S"
  [label="@@libunwind//:linux_x86_64@@libunwind//:linux_aarch64"];
  "@libunwind//:context" -> "@libunwind//:src/aarch64/ucontext_i.h\n@libunwind//:src/x86_64/ucontext_i.h"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:context" -> "@libunwind//:invisible_header"
  "@libunwind//:context" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:context" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:src/x86_64/longjmp.S\n@libunwind//:src/x86_64/getcontext.S\n@libunwind//:src/x86_64/siglongjmp.S\n@libunwind//:src/x86_64/setcontext.S\n@libunwind//:src/aarch64/getcontext.S\n@libunwind//:src/aarch64/longjmp.S\n@libunwind//:src/aarch64/siglongjmp.S"
  "@libsodium//:sodium"
  "@libsodium//:sodium" -> "@libsodium//:windows"
  "@libsodium//:sodium" -> "@platforms//cpu:aarch64"
  "@libsodium//:sodium" -> "@libsodium//:src/libsodium/sodium/codecs.c\n@libsodium//:src/libsodium/sodium/core.c\n@libsodium//:src/libsodium/sodium/runtime.c"
  "@libsodium//:sodium" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:sodium" -> "@libsodium//:aesni"
  "@libsodium//:sodium" -> "@libsodium//:armcrypto"
  "@libsodium//:sodium" -> "@libsodium//:avx2"
  "@libsodium//:sodium" -> "@libsodium//:avx512f"
  "@libsodium//:sodium" -> "@libsodium//:common"
  "@libsodium//:sodium" -> "@libsodium//:rdrand"
  "@libsodium//:sodium" -> "@libsodium//:sse2"
  "@libsodium//:sodium" -> "@libsodium//:sse41"
  "@libsodium//:sodium" -> "@libsodium//:ssse3"
  "@libsodium//:sodium" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:sodium" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:ssse3"
  "@libsodium//:ssse3" -> "@libsodium//:windows"
  "@libsodium//:ssse3" -> "@libsodium//:src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c\n@libsodium//:src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c"
  "@libsodium//:ssse3" -> "@platforms//cpu:aarch64"
  "@libsodium//:ssse3" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:ssse3" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:ssse3" -> "@libsodium//:common"
  "@libsodium//:ssse3" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:ssse3" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:sse41"
  "@libsodium//:sse41" -> "@libsodium//:windows"
  "@libsodium//:sse41" -> "@platforms//cpu:aarch64"
  "@libsodium//:sse41" -> "@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c"
  "@libsodium//:sse41" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:sse41" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:sse41" -> "@libsodium//:common"
  "@libsodium//:sse41" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:sse41" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c"
  "@libsodium//:sse2"
  "@libsodium//:sse2" -> "@libsodium//:windows"
  "@libsodium//:sse2" -> "@libsodium//:src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c"
  "@libsodium//:sse2" -> "@platforms//cpu:aarch64"
  "@libsodium//:sse2" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:sse2" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:sse2" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:sse2" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c"
  "@libsodium//:rdrand"
  "@libsodium//:rdrand" -> "@libsodium//:windows"
  "@libsodium//:rdrand" -> "@platforms//cpu:aarch64"
  "@libsodium//:rdrand" -> "@libsodium//:src/libsodium/randombytes/internal/randombytes_internal_random.c"
  "@libsodium//:rdrand" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:rdrand" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:rdrand" -> "@libsodium//:common"
  "@libsodium//:rdrand" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:rdrand" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:src/libsodium/randombytes/internal/randombytes_internal_random.c"
  "@libsodium//:avx512f"
  "@libsodium//:avx512f" -> "@libsodium//:windows"
  "@libsodium//:avx512f" -> "@platforms//cpu:aarch64"
  "@libsodium//:avx512f" -> "@libsodium//:src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx512f.c"
  "@libsodium//:avx512f" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:avx512f" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:avx512f" -> "@libsodium//:common"
  "@libsodium//:avx512f" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:avx512f" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx512f.c"
  "@libsodium//:avx2"
  "@libsodium//:avx2" -> "@libsodium//:windows"
  "@libsodium//:avx2" -> "@libsodium//:src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c\n@libsodium//:src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c\n@libsodium//:src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c"
  "@libsodium//:avx2" -> "@platforms//cpu:aarch64"
  "@libsodium//:avx2" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:avx2" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:avx2" -> "@libsodium//:common"
  "@libsodium//:avx2" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:avx2" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c\n@libsodium//:src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c\n@libsodium//:src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c"
  "@libsodium//:aesni"
  "@libsodium//:aesni" -> "@libsodium//:windows"
  "@libsodium//:aesni" -> "@platforms//cpu:aarch64"
  "@libsodium//:aesni" -> "@libsodium//:src/libsodium/crypto_aead/aegis256/aegis256_aesni.c\n@libsodium//:src/libsodium/crypto_aead/aegis128l/aegis128l_aesni.c\n@libsodium//:src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c"
  "@libsodium//:aesni" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:aesni" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:aesni" -> "@libsodium//:common"
  "@libsodium//:aesni" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:aesni" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:src/libsodium/crypto_aead/aegis256/aegis256_aesni.c\n@libsodium//:src/libsodium/crypto_aead/aegis128l/aegis128l_aesni.c\n@libsodium//:src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c"
  "@libsodium//:src/libsodium/sodium/codecs.c\n@libsodium//:src/libsodium/sodium/core.c\n@libsodium//:src/libsodium/sodium/runtime.c"
  "@libiberty//:iberty"
  "@libiberty//:iberty" -> "@libiberty//:linux_aarch64"
  "@libiberty//:iberty" -> "@libiberty//:linux_x86_64"
  "@libiberty//:iberty" -> "@libiberty//:include/partition.h\n@libiberty//:include/ctf.h\n@libiberty//:libiberty/splay-tree.c\n@libiberty//:libiberty/vprintf-support.c\n@libiberty//:libiberty/getruntime.c\n@libiberty//:include/objalloc.h\n@libiberty//:include/fopen-same.h\n@libiberty//:include/xtensa-dynconfig.h\n@libiberty//:include/xtensa-isa.h\n@libiberty//:include/demangle.h\n@libiberty//:include/safe-ctype.h\n@libiberty//:include/gcc-c-interface.h\n@libiberty//:include/libfcollector.h\n...and 114 more items"
  "@libiberty//:iberty" -> "@libiberty//:config_h"
  "@libiberty//:iberty" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libiberty//:iberty" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libiberty//:config_h"
  "@libiberty//:config_h" -> "@libiberty//:linux_aarch64"
  "@libiberty//:config_h" -> "@libiberty//:linux_x86_64"
  "@libiberty//:config_h" -> "@libiberty//:libiberty/config.in"
  "@libiberty//:libiberty/config.in"
  "@libiberty//:include/partition.h\n@libiberty//:include/ctf.h\n@libiberty//:libiberty/splay-tree.c\n@libiberty//:libiberty/vprintf-support.c\n@libiberty//:libiberty/getruntime.c\n@libiberty//:include/objalloc.h\n@libiberty//:include/fopen-same.h\n@libiberty//:include/xtensa-dynconfig.h\n@libiberty//:include/xtensa-isa.h\n@libiberty//:include/demangle.h\n@libiberty//:include/safe-ctype.h\n@libiberty//:include/gcc-c-interface.h\n@libiberty//:include/libfcollector.h\n...and 114 more items"
  "@libiberty//:linux_x86_64"
  "@libiberty//:linux_x86_64" -> "@platforms//cpu:x86_64"
  "@libiberty//:linux_x86_64" -> "@platforms//os:linux"
  "@libevent//:event_pthreads"
  "@libevent//:event_pthreads" -> "@libevent//:evthread_pthread.c"
  "@libevent//:event_pthreads" -> "@libevent//:strlcpy-internal.h\n@libevent//:ratelim-internal.h\n@libevent//:include/event2/event_struct.h\n@libevent//:evrpc-internal.h\n@libevent//:iocp-internal.h\n@libevent//:include/event2/bufferevent_ssl.h\n@libevent//:include/evutil.h\n@libevent//:include/evdns.h\n@libevent//:include/event2/dns_struct.h\n@libevent//:include/event2/dns.h\n@libevent//:include/event2/http.h\n@libevent//:include/event2/util.h\n@libevent//:evthread-internal.h\n@libevent//:include/event.h\n...and 46 more items"
  "@libevent//:event_pthreads" -> "@libevent//:evconfig-private_h"
  "@libevent//:event_pthreads" -> "@libevent//:event-config_h"
  "@libevent//:event_pthreads" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libevent//:event_pthreads" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libevent//:evthread_pthread.c"
  "@libevent//:event_openssl"
  "@libevent//:event_openssl" -> "@libevent//:bufferevent_ssl.c\n@libevent//:bufferevent_openssl.c"
  "@libevent//:event_openssl" -> "@libevent//:strlcpy-internal.h\n@libevent//:ratelim-internal.h\n@libevent//:include/event2/event_struct.h\n@libevent//:evrpc-internal.h\n@libevent//:iocp-internal.h\n@libevent//:include/event2/bufferevent_ssl.h\n@libevent//:include/evutil.h\n@libevent//:include/evdns.h\n@libevent//:include/event2/dns_struct.h\n@libevent//:include/event2/dns.h\n@libevent//:include/event2/http.h\n@libevent//:include/event2/util.h\n@libevent//:evthread-internal.h\n@libevent//:include/event.h\n...and 46 more items"
  "@libevent//:event_openssl" -> "@libevent//:evconfig-private_h"
  "@libevent//:event_openssl" -> "@libevent//:event-config_h"
  "@libevent//:event_openssl" -> "@openssl//:crypto"
  "@libevent//:event_openssl" -> "@openssl//:ssl"
  "@libevent//:event_openssl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libevent//:event_openssl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libevent//:bufferevent_ssl.c\n@libevent//:bufferevent_openssl.c"
  "@libevent//:event"
  "@libevent//:event" -> "@libevent//:bufferevent_pair.c\n@libevent//:evrpc.c\n@libevent//:strlcpy.c\n@libevent//:bufferevent_ratelim.c\n@libevent//:buffer.c\n@libevent//:bufferevent_filter.c\n@libevent//:event_tagging.c\n@libevent//:event.c\n@libevent//:evutil_rand.c\n@libevent//:http.c\n@libevent//:evthread.c\n@libevent//:log.c\n@libevent//:evmap.c\n@libevent//:evutil.c\n@libevent//:listener.c\n@libevent//:poll.c\n@libevent//:ws.c\n@libevent//:bufferevent.c\n@libevent//:sha1.c\n@libevent//:signal.c\n...and 7 more items"
  "@libevent//:event" -> "@libevent//:strlcpy-internal.h\n@libevent//:ratelim-internal.h\n@libevent//:include/event2/event_struct.h\n@libevent//:evrpc-internal.h\n@libevent//:iocp-internal.h\n@libevent//:include/event2/bufferevent_ssl.h\n@libevent//:include/evutil.h\n@libevent//:include/evdns.h\n@libevent//:include/event2/dns_struct.h\n@libevent//:include/event2/dns.h\n@libevent//:include/event2/http.h\n@libevent//:include/event2/util.h\n@libevent//:evthread-internal.h\n@libevent//:include/event.h\n...and 46 more items"
  "@libevent//:event" -> "@libevent//:evconfig-private_h"
  "@libevent//:event" -> "@libevent//:event-config_h"
  "@libevent//:event" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libevent//:event" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libevent//:event-config_h"
  "@libevent//:event-config_h" -> "@libevent//:event-config.h.cmake\n@libevent//:clang"
  "@libevent//:event-config.h.cmake\n@libevent//:clang"
  "@libevent//:strlcpy-internal.h\n@libevent//:ratelim-internal.h\n@libevent//:include/event2/event_struct.h\n@libevent//:evrpc-internal.h\n@libevent//:iocp-internal.h\n@libevent//:include/event2/bufferevent_ssl.h\n@libevent//:include/evutil.h\n@libevent//:include/evdns.h\n@libevent//:include/event2/dns_struct.h\n@libevent//:include/event2/dns.h\n@libevent//:include/event2/http.h\n@libevent//:include/event2/util.h\n@libevent//:evthread-internal.h\n@libevent//:include/event.h\n...and 46 more items"
  "@libevent//:bufferevent_pair.c\n@libevent//:evrpc.c\n@libevent//:strlcpy.c\n@libevent//:bufferevent_ratelim.c\n@libevent//:buffer.c\n@libevent//:bufferevent_filter.c\n@libevent//:event_tagging.c\n@libevent//:event.c\n@libevent//:evutil_rand.c\n@libevent//:http.c\n@libevent//:evthread.c\n@libevent//:log.c\n@libevent//:evmap.c\n@libevent//:evutil.c\n@libevent//:listener.c\n@libevent//:poll.c\n@libevent//:ws.c\n@libevent//:bufferevent.c\n@libevent//:sha1.c\n@libevent//:signal.c\n...and 7 more items"
  "@libdwarf//:dwarf"
  "@libdwarf//:dwarf" -> "@libdwarf//:config_h"
  "@libdwarf//:dwarf" -> "@libdwarf//:src/lib/libdwarf/dwarf_tied_decls.h\n@libdwarf//:src/lib/libdwarf/dwarf_machoread.c\n@libdwarf//:src/lib/libdwarf/dwarf_error.c\n@libdwarf//:src/lib/libdwarf/dwarf_macro5.h\n@libdwarf//:src/lib/libdwarf/dwarf_ranges.c\n@libdwarf//:src/lib/libdwarf/dwarf_macro.c\n@libdwarf//:src/lib/libdwarf/dwarf_reading.h\n@libdwarf//:src/lib/libdwarf/dwarf_init_finish.c\n@libdwarf//:src/lib/libdwarf/dwarf_peread.c\n@libdwarf//:src/lib/libdwarf/dwarf_safe_strcpy.h\n...and 99 more items"
  "@libdwarf//:dwarf" -> "@zlib//:zlib"
  "@libdwarf//:dwarf" -> "@zstd//:zstd"
  "@libdwarf//:dwarf" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libdwarf//:dwarf" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libdwarf//:src/lib/libdwarf/dwarf_tied_decls.h\n@libdwarf//:src/lib/libdwarf/dwarf_machoread.c\n@libdwarf//:src/lib/libdwarf/dwarf_error.c\n@libdwarf//:src/lib/libdwarf/dwarf_macro5.h\n@libdwarf//:src/lib/libdwarf/dwarf_ranges.c\n@libdwarf//:src/lib/libdwarf/dwarf_macro.c\n@libdwarf//:src/lib/libdwarf/dwarf_reading.h\n@libdwarf//:src/lib/libdwarf/dwarf_init_finish.c\n@libdwarf//:src/lib/libdwarf/dwarf_peread.c\n@libdwarf//:src/lib/libdwarf/dwarf_safe_strcpy.h\n...and 99 more items"
  "@libdwarf//:config_h"
  "@libdwarf//:config_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@libaio//:aio"
  "@libaio//:aio" -> "@libaio//:linux_x86_64"
  "@libaio//:aio" -> "@libaio//:linux_aarch64"
  "@libaio//:aio" -> "@libaio//:src/syscall-generic.h\n@libaio//:src/io_pgetevents.c\n@libaio//:src/io_setup.c\n@libaio//:src/io_queue_init.c\n@libaio//:src/io_queue_run.c\n@libaio//:src/syscall-arm.h\n@libaio//:src/io_queue_wait.c\n@libaio//:src/struct_offsets.c\n@libaio//:src/vsys_def.h\n@libaio//:src/aio_ring.h\n@libaio//:src/io_getevents.c\n@libaio//:src/raw_syscall.c\n@libaio//:src/syscall.h\n@libaio//:src/io_destroy.c\n@libaio//:src/io_queue_release.c\n@libaio//:src/io_cancel.c\n...and 4 more items"
  [label="@@libaio//:linux_aarch64@@libaio//:linux_x86_64"];
  "@libaio//:aio" -> "@libaio//:libaio.map"
  "@libaio//:aio" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libaio//:aio" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libaio//:libaio.map"
  "@libaio//:libaio.map" -> "@libaio//:src/libaio.map"
  "@libaio//:src/libaio.map"
  "@libaio//:src/syscall-generic.h\n@libaio//:src/io_pgetevents.c\n@libaio//:src/io_setup.c\n@libaio//:src/io_queue_init.c\n@libaio//:src/io_queue_run.c\n@libaio//:src/syscall-arm.h\n@libaio//:src/io_queue_wait.c\n@libaio//:src/struct_offsets.c\n@libaio//:src/vsys_def.h\n@libaio//:src/aio_ring.h\n@libaio//:src/io_getevents.c\n@libaio//:src/raw_syscall.c\n@libaio//:src/syscall.h\n@libaio//:src/io_destroy.c\n@libaio//:src/io_queue_release.c\n@libaio//:src/io_cancel.c\n...and 4 more items"
  "@libaio//:linux_x86_64"
  "@libaio//:linux_x86_64" -> "@platforms//os:linux"
  "@libaio//:linux_x86_64" -> "@platforms//cpu:x86_64"
  "@jemalloc//:jemalloc"
  "@jemalloc//:jemalloc" -> "@jemalloc//:jemalloc_build"
  "@jemalloc//:jemalloc_build"
  "@jemalloc//:jemalloc_build" -> "@jemalloc//:jemalloc_build_"
  "@jemalloc//:jemalloc_build" -> "@bazel_tools//tools/allowlists/function_transition_allowlist:function_transition_allowlist"
  "@jemalloc//:jemalloc_build_"
  "@jemalloc//:jemalloc_build_" -> "@jemalloc//:all"
  "@jemalloc//:jemalloc_build_" -> "@platforms//cpu:aarch64"
  "@jemalloc//:jemalloc_build_" -> "@platforms//cpu:x86_64"
  "@jemalloc//:jemalloc_build_" -> "@platforms//os:linux"
  "@jemalloc//:jemalloc_build_" -> "@rules_foreign_cc//foreign_cc/private/framework:platform_info"
  "@jemalloc//:jemalloc_build_" -> "@platforms//os:android"
  "@jemalloc//:jemalloc_build_" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@jemalloc//:all"
  "@jemalloc//:all" -> "@jemalloc//:.autom4te.cfg\n@jemalloc//:test/unit/atomic.c\n@jemalloc//:src/prof.c\n@jemalloc//:test/unit/mtx.c\n@jemalloc//:scripts/windows/script.sh\n@jemalloc//:src/hpdata.c\n@jemalloc//:include/jemalloc/internal/extent.h\n@jemalloc//:scripts/freebsd/before_install.sh\n@jemalloc//:include/jemalloc/internal/mutex.h\n@jemalloc//:src/zone.c\n@jemalloc//:src/large.c\n@jemalloc//:test/stress/batch_alloc.c\n@jemalloc//:test/unit/zero_realloc_abort.c\n@jemalloc//:test/unit/junk_free.sh\n...and 458 more items"
  "@jemalloc//:.autom4te.cfg\n@jemalloc//:test/unit/atomic.c\n@jemalloc//:src/prof.c\n@jemalloc//:test/unit/mtx.c\n@jemalloc//:scripts/windows/script.sh\n@jemalloc//:src/hpdata.c\n@jemalloc//:include/jemalloc/internal/extent.h\n@jemalloc//:scripts/freebsd/before_install.sh\n@jemalloc//:include/jemalloc/internal/mutex.h\n@jemalloc//:src/zone.c\n@jemalloc//:src/large.c\n@jemalloc//:test/stress/batch_alloc.c\n@jemalloc//:test/unit/zero_realloc_abort.c\n@jemalloc//:test/unit/junk_free.sh\n...and 458 more items"
  "@fmt//:fmt"
  "@fmt//:fmt" -> "@fmt//:include/fmt/ostream.h\n@fmt//:include/fmt/format-inl.h\n@fmt//:include/fmt/format.h\n@fmt//:include/fmt/os.h\n@fmt//:include/fmt/args.h\n@fmt//:include/fmt/core.h\n@fmt//:include/fmt/xchar.h\n@fmt//:include/fmt/color.h\n@fmt//:include/fmt/std.h\n@fmt//:include/fmt/ranges.h\n@fmt//:include/fmt/compile.h\n@fmt//:include/fmt/chrono.h\n@fmt//:include/fmt/printf.h"
  "@fmt//:fmt" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@fmt//:fmt" -> "@bazel_tools//tools/def_parser:def_parser"
  "@fmt//:include/fmt/ostream.h\n@fmt//:include/fmt/format-inl.h\n@fmt//:include/fmt/format.h\n@fmt//:include/fmt/os.h\n@fmt//:include/fmt/args.h\n@fmt//:include/fmt/core.h\n@fmt//:include/fmt/xchar.h\n@fmt//:include/fmt/color.h\n@fmt//:include/fmt/std.h\n@fmt//:include/fmt/ranges.h\n@fmt//:include/fmt/compile.h\n@fmt//:include/fmt/chrono.h\n@fmt//:include/fmt/printf.h"
  "@double-conversion//:double-conversion"
  "@double-conversion//:double-conversion" -> "@double-conversion//:double-conversion/bignum.cc\n@double-conversion//:double-conversion/strtod.cc\n@double-conversion//:double-conversion/cached-powers.cc\n@double-conversion//:double-conversion/double-to-string.h\n@double-conversion//:double-conversion/strtod.h\n@double-conversion//:double-conversion/string-to-double.h\n@double-conversion//:double-conversion/fixed-dtoa.h\n@double-conversion//:double-conversion/cached-powers.h\n@double-conversion//:double-conversion/bignum.h\n...and 11 more items"
  "@double-conversion//:double-conversion" -> "@bazel_tools//tools/def_parser:def_parser"
  "@double-conversion//:double-conversion" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@double-conversion//:double-conversion/bignum.cc\n@double-conversion//:double-conversion/strtod.cc\n@double-conversion//:double-conversion/cached-powers.cc\n@double-conversion//:double-conversion/double-to-string.h\n@double-conversion//:double-conversion/strtod.h\n@double-conversion//:double-conversion/string-to-double.h\n@double-conversion//:double-conversion/fixed-dtoa.h\n@double-conversion//:double-conversion/cached-powers.h\n@double-conversion//:double-conversion/bignum.h\n...and 11 more items"
  "@com_google_googletest//:gtest"
  "@com_google_googletest//:gtest" -> "@com_google_googletest//:windows"
  "@com_google_googletest//:gtest" -> "@com_google_googletest//:qnx"
  "@com_google_googletest//:gtest" -> "@com_google_googletest//:freebsd"
  "@com_google_googletest//:gtest" -> "@com_google_googletest//:openbsd"
  "@com_google_googletest//:gtest" -> "@com_google_googletest//:googlemock/include/gmock/gmock-matchers.h\n@com_google_googletest//:googletest/src/gtest-assertion-result.cc\n@com_google_googletest//:googletest/src/gtest-filepath.cc\n@com_google_googletest//:googlemock/src/gmock-matchers.cc\n@com_google_googletest//:googletest/include/gtest/internal/gtest-death-test-internal.h\n@com_google_googletest//:googlemock/include/gmock/gmock-more-matchers.h\n@com_google_googletest//:googletest/include/gtest/gtest_prod.h\n...and 47 more items"
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/container:flat_hash_set"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_googlesource_code_re2//:re2"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/debugging:failure_signal_handler"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/debugging:stacktrace"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/debugging:symbolize"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/flags:reflection"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/flags:parse"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/flags:flag"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/strings:strings"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/flags:usage"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/types:optional"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/types:any"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@com_google_absl//absl/types:variant"
  [label="@@com_google_googletest//:has_absl"];
  "@com_google_googletest//:gtest" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_googletest//:gtest" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:any"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl/types:any.h"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl/types:bad_any_cast"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl/base:fast_type_id"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/types:any" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:any" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:any" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/types:bad_any_cast"
  "@com_google_absl//absl/types:bad_any_cast" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:bad_any_cast" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:bad_any_cast" -> "@com_google_absl//absl/types:bad_any_cast.h"
  "@com_google_absl//absl/types:bad_any_cast" -> "@com_google_absl//absl/types:bad_any_cast_impl"
  "@com_google_absl//absl/types:bad_any_cast" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:bad_any_cast" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:bad_any_cast" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:bad_any_cast_impl"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@com_google_absl//absl/types:bad_any_cast.cc"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@com_google_absl//absl/types:bad_any_cast.h"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:bad_any_cast_impl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:bad_any_cast.cc"
  "@com_google_absl//absl/types:bad_any_cast.h"
  "@com_google_absl//absl/types:any.h"
  "@com_google_absl//absl/flags:parse"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:internal/parse.h\n@com_google_absl//absl/flags:parse.cc\n@com_google_absl//absl/flags:parse.h"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:commandlineflag"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:commandlineflag_internal"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:config"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:flag"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:flag_internal"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:private_handle_accessor"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:program_name"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:reflection"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:usage"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/flags:usage_internal"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/flags:parse" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:parse" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:parse" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:usage"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl/flags:usage.h\n@com_google_absl//absl/flags:usage.cc"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl/flags:usage_internal"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/flags:usage" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:usage" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/flags:usage" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:usage.h\n@com_google_absl//absl/flags:usage.cc"
  "@com_google_absl//absl/flags:internal/parse.h\n@com_google_absl//absl/flags:parse.cc\n@com_google_absl//absl/flags:parse.h"
  "@com_google_absl//absl/debugging:failure_signal_handler"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl/debugging:failure_signal_handler.h\n@com_google_absl//absl/debugging:failure_signal_handler.cc"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl/debugging:examine_stack"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl/debugging:stacktrace"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/debugging:failure_signal_handler" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/debugging:failure_signal_handler.h\n@com_google_absl//absl/debugging:failure_signal_handler.cc"
  "@com_google_googletest//:googlemock/include/gmock/gmock-matchers.h\n@com_google_googletest//:googletest/src/gtest-assertion-result.cc\n@com_google_googletest//:googletest/src/gtest-filepath.cc\n@com_google_googletest//:googlemock/src/gmock-matchers.cc\n@com_google_googletest//:googletest/include/gtest/internal/gtest-death-test-internal.h\n@com_google_googletest//:googlemock/include/gmock/gmock-more-matchers.h\n@com_google_googletest//:googletest/include/gtest/gtest_prod.h\n...and 47 more items"
  "@com_google_googletest//:openbsd"
  "@com_google_googletest//:openbsd" -> "@platforms//os:openbsd"
  "@com_google_googletest//:freebsd"
  "@com_google_googletest//:freebsd" -> "@platforms//os:freebsd"
  "@com_google_googletest//:qnx"
  "@com_google_googletest//:qnx" -> "@platforms//os:qnx"
  "@com_google_googletest//:windows"
  "@com_google_googletest//:windows" -> "@platforms//os:windows"
  "@com_github_google_snappy//:snappy"
  "@com_github_google_snappy//:snappy" -> "@com_github_google_snappy//:windows"
  "@com_github_google_snappy//:snappy" -> "@com_github_google_snappy//:snappy.cc\n@com_github_google_snappy//:snappy-sinksource.cc\n@com_github_google_snappy//:snappy-internal.h\n@com_github_google_snappy//:snappy.h\n@com_github_google_snappy//:snappy-sinksource.h"
  "@com_github_google_snappy//:snappy" -> "@com_github_google_snappy//:config"
  "@com_github_google_snappy//:snappy" -> "@com_github_google_snappy//:snappy-stubs-internal"
  "@com_github_google_snappy//:snappy" -> "@com_github_google_snappy//:snappy-stubs-public"
  "@com_github_google_snappy//:snappy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_google_snappy//:snappy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_google_snappy//:snappy-stubs-internal"
  "@com_github_google_snappy//:snappy-stubs-internal" -> "@com_github_google_snappy//:snappy-stubs-internal.cc\n@com_github_google_snappy//:snappy-stubs-internal.h"
  "@com_github_google_snappy//:snappy-stubs-internal" -> "@com_github_google_snappy//:config"
  "@com_github_google_snappy//:snappy-stubs-internal" -> "@com_github_google_snappy//:snappy-stubs-public"
  "@com_github_google_snappy//:snappy-stubs-internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_google_snappy//:snappy-stubs-internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_google_snappy//:snappy-stubs-public"
  "@com_github_google_snappy//:snappy-stubs-public" -> "@com_github_google_snappy//:snappy-stubs-public.h"
  "@com_github_google_snappy//:snappy-stubs-public" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_google_snappy//:snappy-stubs-public" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_google_snappy//:snappy-stubs-public.h"
  "@com_github_google_snappy//:snappy-stubs-public.h" -> "@com_github_google_snappy//:snappy_stubs_public_h"
  "@com_github_google_snappy//:snappy_stubs_public_h"
  "@com_github_google_snappy//:snappy_stubs_public_h" -> "@com_github_google_snappy//:snappy-stubs-public.h.in"
  "@com_github_google_snappy//:snappy_stubs_public_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_github_google_snappy//:snappy-stubs-public.h.in"
  "@com_github_google_snappy//:snappy-stubs-internal.cc\n@com_github_google_snappy//:snappy-stubs-internal.h"
  "@com_github_google_snappy//:config"
  "@com_github_google_snappy//:config" -> "@com_github_google_snappy//:config.h"
  "@com_github_google_snappy//:config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_google_snappy//:config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_google_snappy//:config.h"
  "@com_github_google_snappy//:config.h" -> "@com_github_google_snappy//:config_h"
  "@com_github_google_snappy//:config_h"
  "@com_github_google_snappy//:config_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_github_google_snappy//:snappy.cc\n@com_github_google_snappy//:snappy-sinksource.cc\n@com_github_google_snappy//:snappy-internal.h\n@com_github_google_snappy//:snappy.h\n@com_github_google_snappy//:snappy-sinksource.h"
  "@com_github_google_snappy//:windows"
  "@com_github_google_snappy//:windows" -> "@platforms//os:windows"
  "@bzip2//:bzip2"
  "@bzip2//:bzip2" -> "@bzip2//:bzip2.c"
  "@bzip2//:bzip2" -> "@bzip2//:libbzip2"
  "@bzip2//:bzip2" -> "@bazel_tools//tools/cpp:malloc"
  "@bzip2//:bzip2" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@bzip2//:bzip2" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bzip2//:bzip2" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bzip2//:bzip2" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@bzip2//:bzip2.c"
  "@boost//:program_options"
  "@boost//:program_options" -> "@boost//:windows_x86_64"
  "@boost//:program_options" -> "@boost//:libs/program_options/include/boost/program_options/parsers.hpp\n@boost//:libs/program_options/include/boost/program_options/positional_options.hpp\n@boost//:libs/program_options/include/boost/program_options/detail/value_semantic.hpp\n@boost//:libs/program_options/src/options_description.cpp\n@boost//:libs/program_options/include/boost/program_options/eof_iterator.hpp\n@boost//:libs/program_options/include/boost/program_options.hpp\n...and 24 more items"
  "@boost//:program_options" -> "@platforms//os:windows"
  "@boost//:program_options" -> "@boost//:any"
  "@boost//:program_options" -> "@boost//:bind"
  "@boost//:program_options" -> "@boost//:config"
  "@boost//:program_options" -> "@boost//:detail"
  "@boost//:program_options" -> "@boost//:function"
  "@boost//:program_options" -> "@boost//:iterator"
  "@boost//:program_options" -> "@boost//:lexical_cast"
  "@boost//:program_options" -> "@boost//:limits"
  "@boost//:program_options" -> "@boost//:noncopyable"
  "@boost//:program_options" -> "@boost//:shared_ptr"
  "@boost//:program_options" -> "@boost//:static_assert"
  "@boost//:program_options" -> "@boost//:throw_exception"
  "@boost//:program_options" -> "@boost//:tokenizer"
  "@boost//:program_options" -> "@boost//:type_traits"
  "@boost//:program_options" -> "@boost//:version"
  "@boost//:program_options" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:program_options" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:tokenizer"
  "@boost//:tokenizer" -> "@boost//:windows_x86_64"
  "@boost//:tokenizer" -> "@boost//:libs/tokenizer/include/boost/tokenizer.hpp\n@boost//:libs/tokenizer/include/boost/token_functions.hpp\n@boost//:libs/tokenizer/include/boost/token_iterator.hpp"
  "@boost//:tokenizer" -> "@platforms//os:windows"
  "@boost//:tokenizer" -> "@boost//:assert"
  "@boost//:tokenizer" -> "@boost//:config"
  "@boost//:tokenizer" -> "@boost//:detail"
  "@boost//:tokenizer" -> "@boost//:iterator"
  "@boost//:tokenizer" -> "@boost//:mpl"
  "@boost//:tokenizer" -> "@boost//:throw_exception"
  "@boost//:tokenizer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:tokenizer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/tokenizer/include/boost/tokenizer.hpp\n@boost//:libs/tokenizer/include/boost/token_functions.hpp\n@boost//:libs/tokenizer/include/boost/token_iterator.hpp"
  "@boost//:any"
  "@boost//:any" -> "@boost//:windows_x86_64"
  "@boost//:any" -> "@platforms//os:windows"
  "@boost//:any" -> "@boost//:libs/any/include/boost/any/detail/placeholder.hpp\n@boost//:libs/any/include/boost/any.hpp\n@boost//:libs/any/include/boost/any/bad_any_cast.hpp\n@boost//:libs/any/include/boost/any/basic_any.hpp\n@boost//:libs/any/include/boost/any/unique_any.hpp\n@boost//:libs/any/include/boost/any/fwd.hpp"
  "@boost//:any" -> "@boost//:config"
  "@boost//:any" -> "@boost//:mpl"
  "@boost//:any" -> "@boost//:static_assert"
  "@boost//:any" -> "@boost//:throw_exception"
  "@boost//:any" -> "@boost//:type_index"
  "@boost//:any" -> "@boost//:type_traits"
  "@boost//:any" -> "@boost//:utility"
  "@boost//:any" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:any" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/any/include/boost/any/detail/placeholder.hpp\n@boost//:libs/any/include/boost/any.hpp\n@boost//:libs/any/include/boost/any/bad_any_cast.hpp\n@boost//:libs/any/include/boost/any/basic_any.hpp\n@boost//:libs/any/include/boost/any/unique_any.hpp\n@boost//:libs/any/include/boost/any/fwd.hpp"
  "@boost//:libs/program_options/include/boost/program_options/parsers.hpp\n@boost//:libs/program_options/include/boost/program_options/positional_options.hpp\n@boost//:libs/program_options/include/boost/program_options/detail/value_semantic.hpp\n@boost//:libs/program_options/src/options_description.cpp\n@boost//:libs/program_options/include/boost/program_options/eof_iterator.hpp\n@boost//:libs/program_options/include/boost/program_options.hpp\n...and 24 more items"
  "@boost//:multi_index"
  "@boost//:multi_index" -> "@boost//:windows_x86_64"
  "@boost//:multi_index" -> "@platforms//os:windows"
  "@boost//:multi_index" -> "@boost//:libs/multi_index/include/boost/multi_index/key_extractors.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/ord_index_args.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/bad_archive_exception.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/any_container_view.hpp\n@boost//:libs/multi_index/include/boost/multi_index/global_fun.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/ord_index_ops.hpp\n...and 80 more items"
  "@boost//:multi_index" -> "@boost//:foreach"
  "@boost//:multi_index" -> "@boost//:serialization"
  "@boost//:multi_index" -> "@boost//:static_assert"
  "@boost//:multi_index" -> "@boost//:tuple"
  "@boost//:multi_index" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:multi_index" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:libs/multi_index/include/boost/multi_index/key_extractors.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/ord_index_args.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/bad_archive_exception.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/any_container_view.hpp\n@boost//:libs/multi_index/include/boost/multi_index/global_fun.hpp\n@boost//:libs/multi_index/include/boost/multi_index/detail/ord_index_ops.hpp\n...and 80 more items"
  "@boost//:crc"
  "@boost//:crc" -> "@boost//:windows_x86_64"
  "@boost//:crc" -> "@boost//:libs/crc/include/boost/crc.hpp"
  "@boost//:crc" -> "@platforms//os:windows"
  "@boost//:crc" -> "@boost//:array"
  "@boost//:crc" -> "@boost//:config"
  "@boost//:crc" -> "@boost//:cstdint"
  "@boost//:crc" -> "@boost//:integer"
  "@boost//:crc" -> "@boost//:limits"
  "@boost//:crc" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:crc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/crc/include/boost/crc.hpp"
  "@boost//:conversion"
  "@boost//:conversion" -> "@boost//:windows_x86_64"
  "@boost//:conversion" -> "@platforms//os:windows"
  "@boost//:conversion" -> "@boost//:libs/conversion/include/boost/polymorphic_pointer_cast.hpp\n@boost//:libs/conversion/include/boost/implicit_cast.hpp\n@boost//:libs/conversion/include/boost/polymorphic_cast.hpp"
  "@boost//:conversion" -> "@boost//:libs/lexical_cast/include/boost/lexical_cast/bad_lexical_cast.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast.hpp"
  "@boost//:conversion" -> "@boost//:libs/numeric/conversion/include/boost/cast.hpp"
  "@boost//:conversion" -> "@boost//:assert"
  "@boost//:conversion" -> "@boost//:config"
  "@boost//:conversion" -> "@boost//:fusion"
  "@boost//:conversion" -> "@boost//:throw_exception"
  "@boost//:conversion" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:conversion" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/conversion/include/boost/polymorphic_pointer_cast.hpp\n@boost//:libs/conversion/include/boost/implicit_cast.hpp\n@boost//:libs/conversion/include/boost/polymorphic_cast.hpp"
  "@boost//:context"
  "@boost//:context" -> "@boost//:linux_aarch64"
  "@boost//:context" -> "@boost//:android_aarch64"
  "@boost//:context" -> "@boost//:linux_arm"
  "@boost//:context" -> "@boost//:android_arm"
  "@boost//:context" -> "@boost//:linux_ppc"
  "@boost//:context" -> "@boost//:linux_x86_64"
  "@boost//:context" -> "@boost//:windows_x86_64"
  "@boost//:context" -> "@boost//:libs/context/src/asm/ontop_arm_aapcs_elf_gas.S\n@boost//:libs/context/include/boost/context/posix/protected_fixedsize_stack.hpp\n@boost//:libs/context/include/boost/context/continuation.hpp\n@boost//:libs/context/include/boost/context/fixedsize_stack.hpp\n@boost//:libs/context/include/boost/context/detail/config.hpp\n@boost//:libs/context/include/boost/context/detail/prefetch.hpp\n@boost//:libs/context/src/asm/jump_arm_aapcs_elf_gas.S\n...and 38 more items"
  [label="@@boost//:linux_arm\n@@boost//:android_arm@@boost//:linux_ppc@@boost//:linux_x86_64@@boost//:android_aarch64\n@@boost//:linux_aarch64@@boost//:windows_x86_64@@platforms//os:android\n@@platforms//os:ios\n@@platforms//os:watchos..."];
  "@boost//:context" -> "@platforms//os:osx"
  "@boost//:context" -> "@platforms//os:ios"
  "@boost//:context" -> "@platforms//os:watchos\n@platforms//os:tvos"
  "@boost//:context" -> "@platforms//os:linux"
  "@boost//:context" -> "@platforms//os:android"
  "@boost//:context" -> "@platforms//os:windows"
  "@boost//:context" -> "@boost//:apple_ctx_asm_sources"
  [label="@@platforms//os:ios\n@@platforms//os:watchos\n@@platforms//os:osx..."];
  "@boost//:context" -> "@boost//:libs/context/src/asm/make_x86_64_ms_pe_masm.S"
  [label="@@boost//:windows_x86_64"];
  "@boost//:context" -> "@boost//:libs/context/src/asm/jump_x86_64_ms_pe_masm.S"
  [label="@@boost//:windows_x86_64"];
  "@boost//:context" -> "@boost//:libs/context/src/asm/ontop_x86_64_ms_pe_masm.S"
  [label="@@boost//:windows_x86_64"];
  "@boost//:context" -> "@boost//:assert"
  "@boost//:context" -> "@boost//:config"
  "@boost//:context" -> "@boost//:cstdint"
  "@boost//:context" -> "@boost//:detail"
  "@boost//:context" -> "@boost//:intrusive_ptr"
  "@boost//:context" -> "@boost//:mp11"
  "@boost//:context" -> "@boost//:pool"
  "@boost//:context" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:context" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:pool"
  "@boost//:pool" -> "@boost//:windows_x86_64"
  "@boost//:pool" -> "@platforms//os:windows"
  "@boost//:pool" -> "@boost//:libs/pool/include/boost/pool/simple_segregated_storage.hpp\n@boost//:libs/pool/include/boost/pool/detail/for.m4\n@boost//:libs/pool/include/boost/pool/pool_alloc.hpp\n@boost//:libs/pool/include/boost/pool/singleton_pool.hpp\n@boost//:libs/pool/include/boost/pool/pool.hpp\n@boost//:libs/pool/include/boost/pool/detail/pool_construct.sh\n@boost//:libs/pool/include/boost/pool/detail/mutex.hpp\n@boost//:libs/pool/include/boost/pool/detail/pool_construct_simple.m4\n...and 9 more items"
  "@boost//:pool" -> "@boost//:integer"
  "@boost//:pool" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:pool" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/pool/include/boost/pool/simple_segregated_storage.hpp\n@boost//:libs/pool/include/boost/pool/detail/for.m4\n@boost//:libs/pool/include/boost/pool/pool_alloc.hpp\n@boost//:libs/pool/include/boost/pool/singleton_pool.hpp\n@boost//:libs/pool/include/boost/pool/pool.hpp\n@boost//:libs/pool/include/boost/pool/detail/pool_construct.sh\n@boost//:libs/pool/include/boost/pool/detail/mutex.hpp\n@boost//:libs/pool/include/boost/pool/detail/pool_construct_simple.m4\n...and 9 more items"
  "@boost//:intrusive_ptr"
  "@boost//:intrusive_ptr" -> "@boost//:smart_ptr"
  "@boost//:libs/context/src/asm/ontop_x86_64_ms_pe_masm.S"
  "@boost//:libs/context/src/asm/ontop_x86_64_ms_pe_masm.S" -> "@boost//:rename_ontop"
  "@boost//:libs/context/src/asm/jump_x86_64_ms_pe_masm.S"
  "@boost//:libs/context/src/asm/jump_x86_64_ms_pe_masm.S" -> "@boost//:rename_jump"
  "@boost//:libs/context/src/asm/make_x86_64_ms_pe_masm.S"
  "@boost//:libs/context/src/asm/make_x86_64_ms_pe_masm.S" -> "@boost//:rename_make"
  "@boost//:rename_make"
  "@boost//:rename_make" -> "@boost//:libs/context/src/asm/make_x86_64_ms_pe_masm.asm"
  "@boost//:rename_make" -> "@bazel_tools//src/conditions:host_windows"
  "@boost//:libs/context/src/asm/make_x86_64_ms_pe_masm.asm"
  "@boost//:apple_ctx_asm_sources"
  "@boost//:apple_ctx_asm_sources" -> "@boost//:libs/context/src/asm/jump_x86_64_sysv_macho_gas.S\n@boost//:libs/context/src/asm/jump_arm_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/ontop_arm_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/make_arm_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/make_x86_64_sysv_macho_gas.S\n@boost//:libs/context/src/asm/jump_arm64_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/ontop_x86_64_sysv_macho_gas.S\n@boost//:libs/context/src/asm/ontop_arm64_aapcs_macho_gas.S\n...and 1 more items"
  [label="@@platforms//cpu:x86_64@@platforms//cpu:arm@@platforms//cpu:aarch64"];
  "@boost//:apple_ctx_asm_sources" -> "@platforms//cpu:aarch64"
  "@boost//:apple_ctx_asm_sources" -> "@platforms//cpu:arm"
  "@boost//:apple_ctx_asm_sources" -> "@platforms//cpu:x86_64"
  "@boost//:libs/context/src/asm/jump_x86_64_sysv_macho_gas.S\n@boost//:libs/context/src/asm/jump_arm_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/ontop_arm_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/make_arm_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/make_x86_64_sysv_macho_gas.S\n@boost//:libs/context/src/asm/jump_arm64_aapcs_macho_gas.S\n@boost//:libs/context/src/asm/ontop_x86_64_sysv_macho_gas.S\n@boost//:libs/context/src/asm/ontop_arm64_aapcs_macho_gas.S\n...and 1 more items"
  "@boost//:libs/context/src/asm/ontop_arm_aapcs_elf_gas.S\n@boost//:libs/context/include/boost/context/posix/protected_fixedsize_stack.hpp\n@boost//:libs/context/include/boost/context/continuation.hpp\n@boost//:libs/context/include/boost/context/fixedsize_stack.hpp\n@boost//:libs/context/include/boost/context/detail/config.hpp\n@boost//:libs/context/include/boost/context/detail/prefetch.hpp\n@boost//:libs/context/src/asm/jump_arm_aapcs_elf_gas.S\n...and 38 more items"
  "@boost//:linux_x86_64"
  "@boost//:linux_x86_64" -> "@platforms//os:linux"
  "@boost//:linux_x86_64" -> "@platforms//cpu:x86_64"
  "@boost//:linux_ppc"
  "@boost//:linux_ppc" -> "@platforms//os:linux"
  "@boost//:linux_ppc" -> "@platforms//cpu:ppc"
  "@platforms//cpu:ppc"
  "@platforms//cpu:ppc" -> "@platforms//cpu:cpu"
  "@boost//:android_arm"
  "@boost//:android_arm" -> "@platforms//os:android"
  "@boost//:android_arm" -> "@platforms//cpu:arm"
  "@boost//:linux_arm"
  "@boost//:linux_arm" -> "@platforms//os:linux"
  "@boost//:linux_arm" -> "@platforms//cpu:arm"
  "@platforms//cpu:arm"
  "@platforms//cpu:arm" -> "@platforms//cpu:aarch32"
  "@platforms//cpu:aarch32"
  "@platforms//cpu:aarch32" -> "@platforms//cpu:cpu"
  "@boost//:android_aarch64"
  "@boost//:android_aarch64" -> "@platforms//os:android"
  "@boost//:android_aarch64" -> "@platforms//cpu:aarch64"
  "@boost//:linux_aarch64"
  "@boost//:linux_aarch64" -> "@platforms//os:linux"
  "@boost//:linux_aarch64" -> "@platforms//cpu:aarch64"
  "@boost//:algorithm"
  "@boost//:algorithm" -> "@boost//:windows_x86_64"
  "@boost//:algorithm" -> "@boost//:libs/algorithm/include/boost/algorithm/cxx11/one_of.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/classification.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/sequence_traits.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/trim_all.hpp\n@boost//:libs/algorithm/include/boost/algorithm/find_backward.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/predicate_facade.hpp\n...and 81 more items"
  "@boost//:algorithm" -> "@platforms//os:windows"
  "@boost//:algorithm" -> "@boost//:function"
  "@boost//:algorithm" -> "@boost//:iterator"
  "@boost//:algorithm" -> "@boost//:range"
  "@boost//:algorithm" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:algorithm" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:libs/algorithm/include/boost/algorithm/cxx11/one_of.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/classification.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/sequence_traits.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/trim_all.hpp\n@boost//:libs/algorithm/include/boost/algorithm/find_backward.hpp\n@boost//:libs/algorithm/include/boost/algorithm/string/predicate_facade.hpp\n...and 81 more items"
  "@folly//:folly-config_h"
  "@folly//:folly-config_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@folly//:folly/memcpy.S"
  "@folly//:folly/hash/detail/Crc32CombineDetail.cpp\n@folly//:folly/external/fast-crc32/avx512_crc32c_v8s3x4.cpp\n@folly//:folly/hash/detail/ChecksumDetail.cpp\n@folly//:folly/external/fast-crc32/sse_crc32c_v8s3x3.cpp\n@folly//:folly/hash/detail/Crc32cDetail.cpp"
  "@folly//:folly/detail/base64_detail/Base64_SSE4_2.cpp"
  "@folly//:folly/crypto/detail/MathOperation_Simple.cpp\n@folly//:folly/crypto/detail/MathOperation_SSE2.cpp"
  "@folly//:folly/crypto/detail/MathOperation_AVX2.cpp"
  "@folly//:folly/debugging/exception_tracer/SmartExceptionTracer.cpp\n@folly//:folly/debugging/exception_tracer/ExceptionTracerLib.cpp\n@folly//:folly/executors/ScheduledExecutor.h\n@folly//:folly/observer/CoreCachedObserver.h\n@folly//:folly/container/MapUtil.h\n@folly//:folly/net/detail/SocketFileDescriptorMap.cpp\n@folly//:folly/experimental/observer/SimpleObservable.h\n@folly//:folly/IPAddressV6.h\n@folly//:folly/Executor.cpp\n@folly//:folly/channels/Transform-inl.h\n...and 1394 more items"
  "@folly//:linux_aarch64"
  "@folly//:linux_aarch64" -> "@platforms//os:linux"
  "@folly//:linux_aarch64" -> "@platforms//cpu:aarch64"
  "@libevent//:evconfig-private_h"
  "@libevent//:evconfig-private_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@boost//:rename_ontop"
  "@boost//:rename_ontop" -> "@boost//:libs/context/src/asm/ontop_x86_64_ms_pe_masm.asm"
  "@boost//:rename_ontop" -> "@bazel_tools//src/conditions:host_windows"
  "@boost//:libs/context/src/asm/ontop_x86_64_ms_pe_masm.asm"
  "@boost//:rename_jump"
  "@boost//:rename_jump" -> "@bazel_tools//src/conditions:host_windows"
  "@boost//:rename_jump" -> "@boost//:libs/context/src/asm/jump_x86_64_ms_pe_masm.asm"
  "@boost//:libs/context/src/asm/jump_x86_64_ms_pe_masm.asm"
  "@folly//:linux_x86_64"
  "@folly//:linux_x86_64" -> "@platforms//os:linux"
  "@folly//:linux_x86_64" -> "@platforms//cpu:x86_64"
  "@libiberty//:linux_aarch64"
  "@libiberty//:linux_aarch64" -> "@platforms//cpu:aarch64"
  "@libiberty//:linux_aarch64" -> "@platforms//os:linux"
  "@boost//:filesystem"
  "@boost//:filesystem" -> "@boost//:windows_x86_64"
  "@boost//:filesystem" -> "@platforms//os:linux"
  "@boost//:filesystem" -> "@boost//:libs/filesystem/src/platform_config.hpp\n@boost//:libs/filesystem/src/utf8_codecvt_facet.cpp\n@boost//:libs/filesystem/include/boost/filesystem/fstream.hpp\n@boost//:libs/filesystem/src/exception.cpp\n@boost//:libs/filesystem/include/boost/filesystem/path_traits.hpp\n@boost//:libs/filesystem/include/boost/filesystem/string_file.hpp\n@boost//:libs/filesystem/include/boost/filesystem/detail/header.hpp\n@boost//:libs/filesystem/include/boost/filesystem/operations.hpp\n...and 26 more items"
  "@boost//:filesystem" -> "@platforms//os:windows"
  "@boost//:filesystem" -> "@boost//:assert"
  "@boost//:filesystem" -> "@boost//:atomic"
  "@boost//:filesystem" -> "@boost//:config"
  "@boost//:filesystem" -> "@boost//:core"
  "@boost//:filesystem" -> "@boost//:cstdint"
  "@boost//:filesystem" -> "@boost//:detail"
  "@boost//:filesystem" -> "@boost//:functional"
  "@boost//:filesystem" -> "@boost//:io"
  "@boost//:filesystem" -> "@boost//:iterator"
  "@boost//:filesystem" -> "@boost//:predef"
  "@boost//:filesystem" -> "@boost//:range"
  "@boost//:filesystem" -> "@boost//:scoped_array"
  "@boost//:filesystem" -> "@boost//:smart_ptr"
  "@boost//:filesystem" -> "@boost//:static_assert"
  "@boost//:filesystem" -> "@boost//:system"
  "@boost//:filesystem" -> "@boost//:throw_exception"
  "@boost//:filesystem" -> "@boost//:type_traits"
  "@boost//:filesystem" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:filesystem" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/filesystem/src/platform_config.hpp\n@boost//:libs/filesystem/src/utf8_codecvt_facet.cpp\n@boost//:libs/filesystem/include/boost/filesystem/fstream.hpp\n@boost//:libs/filesystem/src/exception.cpp\n@boost//:libs/filesystem/include/boost/filesystem/path_traits.hpp\n@boost//:libs/filesystem/include/boost/filesystem/string_file.hpp\n@boost//:libs/filesystem/include/boost/filesystem/detail/header.hpp\n@boost//:libs/filesystem/include/boost/filesystem/operations.hpp\n...and 26 more items"
  "@boost//:libs/beast/include/boost/beast/_experimental/test/impl/error.ipp\n@boost//:libs/beast/include/boost/beast/_experimental/test/impl/error.hpp\n@boost//:libs/beast/include/boost/beast/http/field.hpp\n@boost//:libs/beast/include/boost/beast/http/detail/rfc7230.hpp\n@boost//:libs/beast/include/boost/beast/_experimental/http/icy_stream.hpp\n@boost//:libs/beast/include/boost/beast/core/impl/buffers_adaptor.hpp\n@boost//:libs/beast/include/boost/beast/core/flat_stream.hpp\n...and 237 more items"
  "@libunwind//:unwind-coredump"
  "@libunwind//:unwind-coredump" -> "@libunwind//:linux_x86_64"
  "@libunwind//:unwind-coredump" -> "@libunwind//:linux_aarch64"
  "@libunwind//:unwind-coredump" -> "@libunwind//:src/mi/init.c"
  "@libunwind//:unwind-coredump" -> "@libunwind//:src/coredump/_UCD_accessors.c\n@libunwind//:src/coredump/_UCD_access_reg_linux.c\n@libunwind//:src/coredump/_UPT_elf.c\n@libunwind//:src/coredump/_UPT_put_unwind_info.c\n@libunwind//:src/coredump/_UCD_create.c\n@libunwind//:src/coredump/_UPT_access_fpreg.c\n@libunwind//:src/coredump/_UCD_get_mapinfo_linux.c\n@libunwind//:src/coredump/_UPT_get_dyn_info_list_addr.c\n@libunwind//:src/coredump/_UCD_get_elf_filename.c\n@libunwind//:src/coredump/_UCD_destroy.c\n...and 8 more items"
  "@libunwind//:unwind-coredump" -> "@libunwind//:unwind-elf64"
  "@libunwind//:unwind-coredump" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:unwind-coredump" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:unwind-elf64"
  "@libunwind//:unwind-elf64" -> "@libunwind//:linux_x86_64"
  "@libunwind//:unwind-elf64" -> "@libunwind//:linux_aarch64"
  "@libunwind//:unwind-elf64" -> "@libunwind//:include/libunwind-dynamic.h\n@libunwind//:include/libunwind-aarch64.h\n@libunwind//:include/libunwind-x86_64.h\n@libunwind//:include/unwind.h\n@libunwind//:include/libunwind-ptrace.h\n@libunwind//:src/elf64.c\n@libunwind//:include/libunwind-coredump.h"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:unwind-elf64" -> "@libunwind//:src/mi/init.c"
  "@libunwind//:unwind-elf64" -> "@libunwind//:libunwind-common_h"
  "@libunwind//:unwind-elf64" -> "@libunwind//:libunwind_h"
  "@libunwind//:unwind-elf64" -> "@libunwind//:invisible_header"
  "@libunwind//:unwind-elf64" -> "@xz//:xz"
  "@libunwind//:unwind-elf64" -> "@zlib//:zlib"
  "@libunwind//:unwind-elf64" -> "@zstd//:zstd"
  "@libunwind//:unwind-elf64" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:unwind-elf64" -> "@bazel_tools//tools/def_parser:def_parser"
  "@xz//:xz"
  "@xz//:xz" -> "@xz//:src/xz/hardware.h\n@xz//:src/xz/suffix.c\n@xz//:src/xz/private.h\n@xz//:src/xz/mytime.c\n@xz//:src/common/tuklib_open_stdxxx.c\n@xz//:src/xz/sandbox.h\n@xz//:src/xz/args.h\n@xz//:src/xz/file_io.h\n@xz//:src/xz/coder.h\n@xz//:src/xz/util.h\n@xz//:src/xz/message.h\n@xz//:src/xz/mytime.h\n@xz//:src/xz/suffix.h\n@xz//:src/xz/args.c\n@xz//:src/xz/coder.c\n@xz//:src/xz/signals.h\n@xz//:src/xz/signals.c\n@xz//:src/xz/sandbox.c\n@xz//:src/xz/options.h\n...and 13 more items"
  "@xz//:xz" -> "@xz//:src/liblzma/api/lzma/version.h"
  "@xz//:xz" -> "@xz//:lzma"
  "@xz//:xz" -> "@bazel_tools//tools/cpp:malloc"
  "@xz//:xz" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@xz//:xz" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@xz//:xz" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@xz//:xz" -> "@bazel_tools//tools/def_parser:def_parser"
  "@xz//:src/xz/hardware.h\n@xz//:src/xz/suffix.c\n@xz//:src/xz/private.h\n@xz//:src/xz/mytime.c\n@xz//:src/common/tuklib_open_stdxxx.c\n@xz//:src/xz/sandbox.h\n@xz//:src/xz/args.h\n@xz//:src/xz/file_io.h\n@xz//:src/xz/coder.h\n@xz//:src/xz/util.h\n@xz//:src/xz/message.h\n@xz//:src/xz/mytime.h\n@xz//:src/xz/suffix.h\n@xz//:src/xz/args.c\n@xz//:src/xz/coder.c\n@xz//:src/xz/signals.h\n@xz//:src/xz/signals.c\n@xz//:src/xz/sandbox.c\n@xz//:src/xz/options.h\n...and 13 more items"
  "@libunwind//:invisible_header"
  "@libunwind//:invisible_header" -> "@libunwind//:linux_x86_64"
  "@libunwind//:invisible_header" -> "@libunwind//:linux_aarch64"
  "@libunwind//:invisible_header" -> "@libunwind//:src/setjmp/setjmp_i.h\n@libunwind//:src/ptrace/_UPT_internal.h\n@libunwind//:include/remote.h\n@libunwind//:src/elfxx.h\n@libunwind//:include/tdep-aarch64/libunwind_i.h\n@libunwind//:include/tdep-x86_64/dwarf-config.h\n@libunwind//:include/tdep-x86_64/jmpbuf.h\n@libunwind//:src/x86_64/Gos-freebsd.c\n@libunwind//:include/tdep/dwarf-config.h\n@libunwind//:include/dwarf-eh.h\n@libunwind//:src/unwind/unwind-internal.h\n@libunwind//:include/dwarf.h\n...and 19 more items"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:invisible_header" -> "@libunwind//:config_h"
  "@libunwind//:invisible_header" -> "@libunwind//:tdep_libunwind_i_h"
  "@libunwind//:invisible_header" -> "@libunwind//:src/dwarf/Gparser.c\n@libunwind//:src/dwarf/Gpe.c\n@libunwind//:src/dwarf/Gget_proc_info_in_range.c\n@libunwind//:src/dwarf/Gfde.c\n@libunwind//:src/dwarf/Gfind_proc_info-lsb.c\n@libunwind//:src/dwarf/Gexpr.c\n@libunwind//:src/dwarf/Gfind_unwind_table.c"
  "@libunwind//:invisible_header" -> "@libunwind//:src/aarch64/Gstep.c\n@libunwind//:src/mi/Gset_caching_policy.c\n@libunwind//:src/x86_64/Ginit.c\n@libunwind//:src/aarch64/Gis_signal_frame.c\n@libunwind//:src/x86_64/Gos-linux.c\n@libunwind//:src/aarch64/Gos-linux.c\n@libunwind//:src/aarch64/Gapply_reg_state.c\n@libunwind//:src/mi/Gget_elf_filename.c\n@libunwind//:src/x86_64/Gregs.c\n@libunwind//:src/aarch64/Ginit_local.c\n@libunwind//:src/aarch64/Gcreate_addr_space.c\n@libunwind//:src/aarch64/Gget_save_loc.c\n...and 39 more items"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:invisible_header" -> "@libunwind//:src/aarch64/ucontext_i.h\n@libunwind//:src/x86_64/ucontext_i.h"
  [label="@@libunwind//:linux_aarch64@@libunwind//:linux_x86_64"];
  "@libunwind//:invisible_header" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libunwind//:invisible_header" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libunwind//:src/aarch64/ucontext_i.h\n@libunwind//:src/x86_64/ucontext_i.h"
  "@libunwind//:src/aarch64/Gstep.c\n@libunwind//:src/mi/Gset_caching_policy.c\n@libunwind//:src/x86_64/Ginit.c\n@libunwind//:src/aarch64/Gis_signal_frame.c\n@libunwind//:src/x86_64/Gos-linux.c\n@libunwind//:src/aarch64/Gos-linux.c\n@libunwind//:src/aarch64/Gapply_reg_state.c\n@libunwind//:src/mi/Gget_elf_filename.c\n@libunwind//:src/x86_64/Gregs.c\n@libunwind//:src/aarch64/Ginit_local.c\n@libunwind//:src/aarch64/Gcreate_addr_space.c\n@libunwind//:src/aarch64/Gget_save_loc.c\n...and 39 more items"
  "@libunwind//:src/dwarf/Gparser.c\n@libunwind//:src/dwarf/Gpe.c\n@libunwind//:src/dwarf/Gget_proc_info_in_range.c\n@libunwind//:src/dwarf/Gfde.c\n@libunwind//:src/dwarf/Gfind_proc_info-lsb.c\n@libunwind//:src/dwarf/Gexpr.c\n@libunwind//:src/dwarf/Gfind_unwind_table.c"
  "@libunwind//:tdep_libunwind_i_h"
  "@libunwind//:tdep_libunwind_i_h" -> "@libunwind//:linux_x86_64"
  "@libunwind//:tdep_libunwind_i_h" -> "@libunwind//:linux_aarch64"
  "@libunwind//:tdep_libunwind_i_h" -> "@libunwind//:include/tdep/libunwind_i.h.in"
  "@libunwind//:include/tdep/libunwind_i.h.in"
  "@libunwind//:config_h"
  "@libunwind//:config_h" -> "@libunwind//:linux_x86_64"
  "@libunwind//:config_h" -> "@libunwind//:linux_aarch64"
  "@libunwind//:config_h" -> "@libunwind//:config_h_in"
  "@libunwind//:config_h_in"
  "@libunwind//:config_h_in" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@libunwind//:src/setjmp/setjmp_i.h\n@libunwind//:src/ptrace/_UPT_internal.h\n@libunwind//:include/remote.h\n@libunwind//:src/elfxx.h\n@libunwind//:include/tdep-aarch64/libunwind_i.h\n@libunwind//:include/tdep-x86_64/dwarf-config.h\n@libunwind//:include/tdep-x86_64/jmpbuf.h\n@libunwind//:src/x86_64/Gos-freebsd.c\n@libunwind//:include/tdep/dwarf-config.h\n@libunwind//:include/dwarf-eh.h\n@libunwind//:src/unwind/unwind-internal.h\n@libunwind//:include/dwarf.h\n...and 19 more items"
  "@libunwind//:libunwind_h"
  "@libunwind//:libunwind_h" -> "@libunwind//:linux_x86_64"
  "@libunwind//:libunwind_h" -> "@libunwind//:linux_aarch64"
  "@libunwind//:libunwind_h" -> "@libunwind//:include/libunwind.h.in"
  "@libunwind//:libunwind-common_h"
  "@libunwind//:libunwind-common_h" -> "@libunwind//:include/libunwind-common.h.in"
  "@libunwind//:include/libunwind-common.h.in"
  "@libunwind//:include/libunwind-dynamic.h\n@libunwind//:include/libunwind-aarch64.h\n@libunwind//:include/libunwind-x86_64.h\n@libunwind//:include/unwind.h\n@libunwind//:include/libunwind-ptrace.h\n@libunwind//:src/elf64.c\n@libunwind//:include/libunwind-coredump.h"
  "@libunwind//:src/coredump/_UCD_accessors.c\n@libunwind//:src/coredump/_UCD_access_reg_linux.c\n@libunwind//:src/coredump/_UPT_elf.c\n@libunwind//:src/coredump/_UPT_put_unwind_info.c\n@libunwind//:src/coredump/_UCD_create.c\n@libunwind//:src/coredump/_UPT_access_fpreg.c\n@libunwind//:src/coredump/_UCD_get_mapinfo_linux.c\n@libunwind//:src/coredump/_UPT_get_dyn_info_list_addr.c\n@libunwind//:src/coredump/_UCD_get_elf_filename.c\n@libunwind//:src/coredump/_UCD_destroy.c\n...and 8 more items"
  "@libunwind//:src/mi/init.c"
  "@libunwind//:linux_aarch64"
  "@libunwind//:linux_aarch64" -> "@platforms//cpu:aarch64"
  "@libunwind//:linux_aarch64" -> "@platforms//os:linux"
  "@libunwind//:linux_x86_64"
  "@libunwind//:linux_x86_64" -> "@platforms//os:linux"
  "@libunwind//:linux_x86_64" -> "@platforms//cpu:x86_64"
  "@boost//:serialization"
  "@boost//:serialization" -> "@boost//:windows_x86_64"
  "@boost//:serialization" -> "@platforms//os:windows"
  "@boost//:serialization" -> "@boost//:libs/serialization/src/polymorphic_text_oarchive.cpp\n@boost//:libs/serialization/include/boost/archive/impl/xml_woarchive_impl.ipp\n@boost//:libs/serialization/include/boost/serialization/boost_array.hpp\n@boost//:libs/serialization/include/boost/serialization/weak_ptr.hpp\n@boost//:libs/serialization/include/boost/archive/detail/oserializer.hpp\n@boost//:libs/serialization/src/archive_exception.cpp\n...and 235 more items"
  "@boost//:serialization" -> "@boost//:archive"
  "@boost//:serialization" -> "@boost//:array"
  "@boost//:serialization" -> "@boost//:assert"
  "@boost//:serialization" -> "@boost//:call_traits"
  "@boost//:serialization" -> "@boost//:config"
  "@boost//:serialization" -> "@boost//:core"
  "@boost//:serialization" -> "@boost//:cstdint"
  "@boost//:serialization" -> "@boost//:detail"
  "@boost//:serialization" -> "@boost//:function"
  "@boost//:serialization" -> "@boost//:integer"
  "@boost//:serialization" -> "@boost//:io"
  "@boost//:serialization" -> "@boost//:limits"
  "@boost//:serialization" -> "@boost//:mpl"
  "@boost//:serialization" -> "@boost//:noncopyable"
  "@boost//:serialization" -> "@boost//:operators"
  "@boost//:serialization" -> "@boost//:preprocessor"
  "@boost//:serialization" -> "@boost//:spirit"
  "@boost//:serialization" -> "@boost//:static_assert"
  "@boost//:serialization" -> "@boost//:type_traits"
  "@boost//:serialization" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:serialization" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:armcrypto"
  "@libsodium//:armcrypto" -> "@libsodium//:windows"
  "@libsodium//:armcrypto" -> "@platforms//cpu:aarch64"
  "@libsodium//:armcrypto" -> "@libsodium//:src/libsodium/crypto_aead/aegis256/aegis256_armcrypto.c\n@libsodium//:src/libsodium/crypto_aead/aegis128l/aegis128l_armcrypto.c\n@libsodium//:src/libsodium/crypto_aead/aes256gcm/armcrypto/aead_aes256gcm_armcrypto.c"
  "@libsodium//:armcrypto" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:armcrypto" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:armcrypto" -> "@libsodium//:common"
  "@libsodium//:armcrypto" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:armcrypto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:common"
  "@libsodium//:common" -> "@libsodium//:windows"
  "@libsodium//:common" -> "@platforms//cpu:aarch64"
  "@libsodium//:common" -> "@libsodium//:src/libsodium/crypto_aead/aegis128l/aead_aegis128l.c\n@libsodium//:src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c\n@libsodium//:src/libsodium/crypto_verify/verify.c\n@libsodium//:src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c\n@libsodium//:src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c\n@libsodium//:src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S\n...and 95 more items"
  "@libsodium//:common" -> "@libsodium//:src/libsodium/crypto_aead/aegis256/aegis256_armcrypto.c\n@libsodium//:src/libsodium/crypto_aead/aegis128l/aegis128l_armcrypto.c\n@libsodium//:src/libsodium/crypto_aead/aes256gcm/armcrypto/aead_aes256gcm_armcrypto.c"
  "@libsodium//:common" -> "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:common" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:common" -> "@libsodium//:utils"
  "@libsodium//:common" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:common" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:utils"
  "@libsodium//:utils" -> "@libsodium//:windows"
  "@libsodium//:utils" -> "@platforms//cpu:aarch64"
  "@libsodium//:utils" -> "@libsodium//:src/libsodium/sodium/version.c\n@libsodium//:src/libsodium/sodium/utils.c"
  "@libsodium//:utils" -> "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:utils" -> "@libsodium//:version_h"
  "@libsodium//:utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@libsodium//:utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@libsodium//:version_h"
  "@libsodium//:version_h" -> "@libsodium//:src/libsodium/include/sodium/version.h.in"
  "@libsodium//:src/libsodium/include/sodium/version.h.in"
  "@libsodium//:src/libsodium/sodium/version.c\n@libsodium//:src/libsodium/sodium/utils.c"
  "@libsodium//:src/libsodium/crypto_aead/aegis128l/aead_aegis128l.c\n@libsodium//:src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c\n@libsodium//:src/libsodium/crypto_verify/verify.c\n@libsodium//:src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c\n@libsodium//:src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c\n@libsodium//:src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S\n...and 95 more items"
  "@libsodium//:src/libsodium/include/sodium/export.h\n@libsodium//:src/libsodium/include/sodium/crypto_onetimeauth.h\n@libsodium//:src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h\n@libsodium//:src/libsodium/include/sodium/crypto_stream_salsa2012.h\n@libsodium//:src/libsodium/include/sodium/crypto_shorthash_siphash24.h\n@libsodium//:src/libsodium/include/sodium/crypto_sign.h\n@libsodium//:src/libsodium/include/sodium/crypto_hash_sha256.h\n...and 68 more items"
  "@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h\n@libsodium//:src/libsodium/crypto_stream/salsa20/stream_salsa20.h\n@libsodium//:src/libsodium/crypto_pwhash/argon2/blake2b-long.h\n@libsodium//:src/libsodium/crypto_sign/ed25519/ref10/sign_ed25519_ref10.h\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h\n@libsodium//:src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h\n...and 63 more items"
  "@libsodium//:src/libsodium/crypto_aead/aegis256/aegis256_armcrypto.c\n@libsodium//:src/libsodium/crypto_aead/aegis128l/aegis128l_armcrypto.c\n@libsodium//:src/libsodium/crypto_aead/aes256gcm/armcrypto/aead_aes256gcm_armcrypto.c"
  "@libsodium//:windows"
  "@libsodium//:windows" -> "@platforms//os:windows"
  "@libsodium//:windows" -> "@platforms//cpu:x86_64"
  "//src/server:version_info"
  "//src/server:version_info" -> "//src/server:version_info_h"
  "//src/server:version_info" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/server:version_info" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/server:version_info_h"
  "//src/server:version_info_h" -> "//bazel:gen_local_config_git"
  "//src/server:version_info_h" -> "@local_config_git//:gen/spec.json\n@local_config_git//:gen/head\n@local_config_git//:gen/branch_ref"
  "@local_config_git//:gen/spec.json\n@local_config_git//:gen/head\n@local_config_git//:gen/branch_ref"
  "//bazel:gen_local_config_git"
  "//bazel:gen_local_config_git" -> "@bazel_tools//tools/python:toolchain_type\n@bazel_tools//tools/python:python_bootstrap_template.txt\n//bazel:gen_local_config_git.py"
  "//bazel:gen_local_config_git" -> "@bazel_tools//tools/zip:zipper"
  "//bazel:gen_local_config_git" -> "@bazel_tools//tools/test:collect_cc_coverage"
  "//bazel:gen_local_config_git" -> "@bazel_tools//tools/launcher:launcher"
  "//bazel:gen_local_config_git" -> "@bazel_tools//tools/launcher:launcher_maker"
  "@bazel_tools//tools/launcher:launcher_maker"
  "@bazel_tools//tools/launcher:launcher_maker" -> "@bazel_tools//tools/launcher:launcher_maker_windows"
  [label="@@bazel_tools//src/conditions:host_windows"];
  "@bazel_tools//tools/launcher:launcher_maker" -> "@bazel_tools//src/tools/launcher:launcher_maker"
  [label="//conditions:default"];
  "@bazel_tools//tools/launcher:launcher_maker" -> "@bazel_tools//src/conditions:host_windows"
  "@bazel_tools//tools/launcher:launcher_maker_windows"
  "@bazel_tools//tools/launcher:launcher_maker_windows" -> "@bazel_tools//tools/launcher:launcher_maker.exe"
  [label="//conditions:default"];
  "@bazel_tools//tools/launcher:launcher_maker_windows" -> "@bazel_tools//src/conditions:remote"
  "@bazel_tools//tools/launcher:launcher_maker_windows" -> "@bazel_tools//src/tools/launcher:launcher_maker"
  [label="@@bazel_tools//src/conditions:remote"];
  "@bazel_tools//src/tools/launcher:launcher_maker"
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//src/tools/launcher:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//src/tools/launcher:launcher_maker.cc"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//src/main/cpp/util:filesystem"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//tools/cpp:malloc"
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@bazel_tools//src/tools/launcher:launcher_maker" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/tools/launcher:launcher_maker.cc"
  "@bazel_tools//tools/launcher:launcher_maker.exe"
  "@bazel_tools//tools/launcher:launcher"
  "@bazel_tools//tools/launcher:launcher" -> "@bazel_tools//tools/launcher:launcher_windows"
  [label="@@bazel_tools//src/conditions:host_windows"];
  "@bazel_tools//tools/launcher:launcher" -> "@bazel_tools//src/conditions:host_windows"
  "@bazel_tools//tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher:launcher"
  [label="//conditions:default"];
  "@bazel_tools//tools/launcher:launcher_windows"
  "@bazel_tools//tools/launcher:launcher_windows" -> "@bazel_tools//tools/launcher:launcher.exe"
  [label="//conditions:default"];
  "@bazel_tools//tools/launcher:launcher_windows" -> "@bazel_tools//src/conditions:remote"
  "@bazel_tools//tools/launcher:launcher_windows" -> "@bazel_tools//src/tools/launcher:launcher"
  [label="@@bazel_tools//src/conditions:remote"];
  "@bazel_tools//src/tools/launcher:launcher"
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher:launcher_main.cc"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher:bash_launcher"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher:java_launcher"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher:launcher_base"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher:python_launcher"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//tools/cpp:malloc"
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher/util:data_parser"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher" -> "@bazel_tools//src/tools/launcher/util:util"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:python_launcher"
  "@bazel_tools//src/tools/launcher:python_launcher" -> "@bazel_tools//src/tools/launcher:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher:python_launcher" -> "@bazel_tools//src/tools/launcher:python_launcher.h\n@bazel_tools//src/tools/launcher:python_launcher.cc"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:python_launcher" -> "@bazel_tools//src/tools/launcher:launcher_base"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:python_launcher" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/tools/launcher:python_launcher" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher:python_launcher" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher:python_launcher" -> "@bazel_tools//src/main/native/windows:lib-process"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:python_launcher.h\n@bazel_tools//src/tools/launcher:python_launcher.cc"
  "@bazel_tools//src/tools/launcher:java_launcher"
  "@bazel_tools//src/tools/launcher:java_launcher" -> "@bazel_tools//src/tools/launcher:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher:java_launcher" -> "@bazel_tools//src/tools/launcher:java_launcher.cc\n@bazel_tools//src/tools/launcher:java_launcher.h"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:java_launcher" -> "@bazel_tools//src/tools/launcher:launcher_base"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:java_launcher" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher:java_launcher" -> "@bazel_tools//src/main/native/windows:lib-process"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:java_launcher" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher:java_launcher" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/native/windows:lib-process"
  "@bazel_tools//src/main/native/windows:lib-process" -> "@bazel_tools//src/main/native/windows:process.cc\n@bazel_tools//src/main/native/windows:process.h"
  "@bazel_tools//src/main/native/windows:lib-process" -> "@bazel_tools//src/main/native/windows:lib-file"
  "@bazel_tools//src/main/native/windows:lib-process" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/native/windows:lib-process" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/native/windows:process.cc\n@bazel_tools//src/main/native/windows:process.h"
  "@bazel_tools//src/tools/launcher:java_launcher.cc\n@bazel_tools//src/tools/launcher:java_launcher.h"
  "@bazel_tools//src/tools/launcher:bash_launcher"
  "@bazel_tools//src/tools/launcher:bash_launcher" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher:bash_launcher" -> "@bazel_tools//src/tools/launcher:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher:bash_launcher" -> "@bazel_tools//src/tools/launcher:bash_launcher.h\n@bazel_tools//src/tools/launcher:bash_launcher.cc"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:bash_launcher" -> "@bazel_tools//src/tools/launcher:launcher_base"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:bash_launcher" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher:bash_launcher" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/tools/launcher:launcher_base"
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//src/tools/launcher:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//src/tools/launcher:launcher.h\n@bazel_tools//src/tools/launcher:launcher.cc"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//src/main/cpp/util:filesystem"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//src/tools/launcher/util:util"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//src/tools/launcher/util:data_parser"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher:launcher_base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/tools/launcher/util:data_parser"
  "@bazel_tools//src/tools/launcher/util:data_parser" -> "@bazel_tools//src/tools/launcher/util:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher/util:data_parser" -> "@bazel_tools//src/tools/launcher/util:data_parser.h\n@bazel_tools//src/tools/launcher/util:data_parser.cc"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher/util:data_parser" -> "@bazel_tools//src/tools/launcher/util:util"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher/util:data_parser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/tools/launcher/util:data_parser" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher/util:data_parser" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher/util:data_parser.h\n@bazel_tools//src/tools/launcher/util:data_parser.cc"
  "@bazel_tools//src/tools/launcher/util:util"
  "@bazel_tools//src/tools/launcher/util:util" -> "@bazel_tools//src/tools/launcher/util:dummy.cc"
  [label="//conditions:default"];
  "@bazel_tools//src/tools/launcher/util:util" -> "@bazel_tools//src/tools/launcher/util:launcher_util.cc\n@bazel_tools//src/tools/launcher/util:launcher_util.h"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher/util:util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/tools/launcher/util:util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/tools/launcher/util:util" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/tools/launcher/util:util" -> "@bazel_tools//src/main/cpp/util:filesystem"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/tools/launcher/util:launcher_util.cc\n@bazel_tools//src/tools/launcher/util:launcher_util.h"
  "@bazel_tools//src/tools/launcher/util:dummy.cc"
  "@bazel_tools//src/tools/launcher:launcher.h\n@bazel_tools//src/tools/launcher:launcher.cc"
  "@bazel_tools//src/tools/launcher:bash_launcher.h\n@bazel_tools//src/tools/launcher:bash_launcher.cc"
  "@bazel_tools//src/tools/launcher:launcher_main.cc"
  "@bazel_tools//src/tools/launcher:dummy.cc"
  "@bazel_tools//tools/launcher:launcher.exe"
  "@bazel_tools//tools/test:collect_cc_coverage"
  "@bazel_tools//tools/test:collect_cc_coverage" -> "@bazel_tools//tools/test:collect_cc_coverage.sh"
  "@bazel_tools//tools/test:collect_cc_coverage.sh"
  "@bazel_tools//tools/zip:zipper"
  "@bazel_tools//tools/zip:zipper" -> "@bazel_tools//tools/zip:zipper/zipper"
  [label="//conditions:default"];
  "@bazel_tools//tools/zip:zipper" -> "@bazel_tools//third_party/ijar:zipper"
  [label="@@bazel_tools//src/conditions:remote"];
  "@bazel_tools//tools/zip:zipper" -> "@bazel_tools//src/conditions:remote"
  "@bazel_tools//third_party/ijar:zipper"
  "@bazel_tools//third_party/ijar:zipper" -> "@bazel_tools//third_party/ijar:zip_main.cc"
  "@bazel_tools//third_party/ijar:zipper" -> "@bazel_tools//third_party/ijar:zip"
  "@bazel_tools//third_party/ijar:zipper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//third_party/ijar:zipper" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@bazel_tools//third_party/ijar:zipper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//third_party/ijar:zipper" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@bazel_tools//third_party/ijar:zipper" -> "@bazel_tools//tools/cpp:malloc"
  "@bazel_tools//third_party/ijar:zip"
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//third_party/ijar:zip.cc\n@bazel_tools//third_party/ijar:mapped_file_unix.cc\n@bazel_tools//third_party/ijar:mapped_file_windows.cc\n@bazel_tools//third_party/ijar:mapped_file.h\n@bazel_tools//third_party/ijar:zip.h"
  [label="//conditions:default@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//third_party/ijar:common.h"
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//third_party/ijar:platform_utils"
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//third_party/ijar:zlib_client"
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//src/main/cpp/util:strings"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//src/main/cpp/util:logging"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//src/main/cpp/util:filesystem"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//third_party/ijar:zip" -> "@bazel_tools//src/main/cpp/util:errors"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//third_party/ijar:zlib_client"
  "@bazel_tools//third_party/ijar:zlib_client" -> "@bazel_tools//third_party/ijar:zlib_client.cc\n@bazel_tools//third_party/ijar:zlib_client.h"
  "@bazel_tools//third_party/ijar:zlib_client" -> "@bazel_tools//third_party/ijar:common.h"
  "@bazel_tools//third_party/ijar:zlib_client" -> "@bazel_tools//third_party/zlib:zlib"
  "@bazel_tools//third_party/ijar:zlib_client" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//third_party/ijar:zlib_client" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//third_party/zlib:zlib"
  "@bazel_tools//third_party/zlib:zlib" -> "@bazel_tools//third_party/zlib:license"
  "@bazel_tools//third_party/zlib:zlib" -> "@bazel_tools//third_party/zlib:inflate.h\n@bazel_tools//third_party/zlib:inffixed.h\n@bazel_tools//third_party/zlib:adler32.c\n@bazel_tools//third_party/zlib:inftrees.c\n@bazel_tools//third_party/zlib:inftrees.h\n@bazel_tools//third_party/zlib:inffast.c\n@bazel_tools//third_party/zlib:deflate.h\n@bazel_tools//third_party/zlib:gzwrite.c\n@bazel_tools//third_party/zlib:zconf.h\n@bazel_tools//third_party/zlib:gzclose.c\n@bazel_tools//third_party/zlib:zutil.c\n...and 15 more items"
  "@bazel_tools//third_party/zlib:zlib" -> "@platforms//os:windows"
  "@bazel_tools//third_party/zlib:zlib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//third_party/zlib:zlib" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//third_party/zlib:inflate.h\n@bazel_tools//third_party/zlib:inffixed.h\n@bazel_tools//third_party/zlib:adler32.c\n@bazel_tools//third_party/zlib:inftrees.c\n@bazel_tools//third_party/zlib:inftrees.h\n@bazel_tools//third_party/zlib:inffast.c\n@bazel_tools//third_party/zlib:deflate.h\n@bazel_tools//third_party/zlib:gzwrite.c\n@bazel_tools//third_party/zlib:zconf.h\n@bazel_tools//third_party/zlib:gzclose.c\n@bazel_tools//third_party/zlib:zutil.c\n...and 15 more items"
  "@bazel_tools//third_party/zlib:license"
  "@bazel_tools//third_party/zlib:license" -> "@bazel_tools//third_party/zlib:LICENSE\n@rules_license//licenses/spdx:0BSD"
  "@bazel_tools//third_party/zlib:LICENSE\n@rules_license//licenses/spdx:0BSD"
  "@bazel_tools//third_party/ijar:zlib_client.cc\n@bazel_tools//third_party/ijar:zlib_client.h"
  "@bazel_tools//third_party/ijar:platform_utils"
  "@bazel_tools//third_party/ijar:platform_utils" -> "@bazel_tools//third_party/ijar:platform_utils.h\n@bazel_tools//third_party/ijar:platform_utils.cc"
  "@bazel_tools//third_party/ijar:platform_utils" -> "@bazel_tools//third_party/ijar:common.h"
  "@bazel_tools//third_party/ijar:platform_utils" -> "@bazel_tools//src/main/cpp/util:errors"
  "@bazel_tools//third_party/ijar:platform_utils" -> "@bazel_tools//src/main/cpp/util:filesystem"
  "@bazel_tools//third_party/ijar:platform_utils" -> "@bazel_tools//src/main/cpp/util:logging"
  "@bazel_tools//third_party/ijar:platform_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//third_party/ijar:platform_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/cpp/util:filesystem"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/main/cpp/util:ijar"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/main/cpp/util:path.h\n@bazel_tools//src/main/cpp/util:path_windows.cc\n@bazel_tools//src/main/cpp/util:path.cc\n@bazel_tools//src/main/cpp/util:file_posix.cc\n@bazel_tools//src/main/cpp/util:file_platform.h\n@bazel_tools//src/main/cpp/util:file_windows.cc\n@bazel_tools//src/main/cpp/util:file.h\n@bazel_tools//src/main/cpp/util:file.cc\n@bazel_tools//src/main/cpp/util:path_platform.h\n@bazel_tools//src/main/cpp/util:path_posix.cc"
  [label="@@bazel_tools//src/conditions:windows//conditions:default"];
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/main/cpp/util:blaze_exit_code"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/main/cpp/util:errors"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/main/cpp/util:logging"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/main/cpp/util:strings"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/cpp/util:filesystem" -> "@bazel_tools//src/main/native/windows:lib-file"
  [label="@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/main/native/windows:lib-file"
  "@bazel_tools//src/main/native/windows:lib-file" -> "@bazel_tools//src/main/native/windows:util.cc\n@bazel_tools//src/main/native/windows:file.cc\n@bazel_tools//src/main/native/windows:file.h\n@bazel_tools//src/main/native/windows:util.h"
  "@bazel_tools//src/main/native/windows:lib-file" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/native/windows:lib-file" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/native/windows:util.cc\n@bazel_tools//src/main/native/windows:file.cc\n@bazel_tools//src/main/native/windows:file.h\n@bazel_tools//src/main/native/windows:util.h"
  "@bazel_tools//src/main/cpp/util:path.h\n@bazel_tools//src/main/cpp/util:path_windows.cc\n@bazel_tools//src/main/cpp/util:path.cc\n@bazel_tools//src/main/cpp/util:file_posix.cc\n@bazel_tools//src/main/cpp/util:file_platform.h\n@bazel_tools//src/main/cpp/util:file_windows.cc\n@bazel_tools//src/main/cpp/util:file.h\n@bazel_tools//src/main/cpp/util:file.cc\n@bazel_tools//src/main/cpp/util:path_platform.h\n@bazel_tools//src/main/cpp/util:path_posix.cc"
  "@bazel_tools//third_party/ijar:platform_utils.h\n@bazel_tools//third_party/ijar:platform_utils.cc"
  "@bazel_tools//third_party/ijar:common.h"
  "@bazel_tools//third_party/ijar:zip.cc\n@bazel_tools//third_party/ijar:mapped_file_unix.cc\n@bazel_tools//third_party/ijar:mapped_file_windows.cc\n@bazel_tools//third_party/ijar:mapped_file.h\n@bazel_tools//third_party/ijar:zip.h"
  "@bazel_tools//third_party/ijar:zip_main.cc"
  "@bazel_tools//tools/zip:zipper/zipper"
  "@bazel_tools//tools/python:toolchain_type\n@bazel_tools//tools/python:python_bootstrap_template.txt\n//bazel:gen_local_config_git.py"
  "@libsodium//:src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c\n@libsodium//:src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c\n@libsodium//:src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c"
  "@libaio//:linux_aarch64"
  "@libaio//:linux_aarch64" -> "@platforms//os:linux"
  "@libaio//:linux_aarch64" -> "@platforms//cpu:aarch64"
  "@boost//:libs/serialization/src/polymorphic_text_oarchive.cpp\n@boost//:libs/serialization/include/boost/archive/impl/xml_woarchive_impl.ipp\n@boost//:libs/serialization/include/boost/serialization/boost_array.hpp\n@boost//:libs/serialization/include/boost/serialization/weak_ptr.hpp\n@boost//:libs/serialization/include/boost/archive/detail/oserializer.hpp\n@boost//:libs/serialization/src/archive_exception.cpp\n...and 235 more items"
  "@com_google_absl//absl/flags:usage_internal"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:internal/usage.h\n@com_google_absl//absl/flags:internal/usage.cc"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:commandlineflag"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:config"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:flag"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:flag_internal"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:path_util"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:private_handle_accessor"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:program_name"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/flags:reflection"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:usage_internal" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/flags:usage_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:usage_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:internal/usage.h\n@com_google_absl//absl/flags:internal/usage.cc"
  "//src/proto:config_proto"
  "//src/proto:config_proto" -> "//src/proto:config.proto"
  "//src/proto:config_proto" -> "@bazel_tools//tools/proto:protoc"
  "//src/proto:config.proto"
  "//src/async_grpc:async_grpc"
  "//src/async_grpc:async_grpc" -> "//src/async_grpc:common/time.h\n//src/async_grpc:retry.h\n//src/async_grpc:rpc_handler.h\n//src/async_grpc:event_queue_thread.cc\n//src/async_grpc:rpc.h\n//src/async_grpc:common/port.h\n//src/async_grpc:span.h\n//src/async_grpc:execution_context.h\n//src/async_grpc:client.h\n//src/async_grpc:completion_queue_pool.cc\n//src/async_grpc:rpc_service_method_traits.h\n//src/async_grpc:rpc_handler_interface.h\n//src/async_grpc:completion_queue_pool.h\n...and 18 more items"
  "//src/async_grpc:async_grpc" -> "//src/async_grpc:cc_protos"
  "//src/async_grpc:async_grpc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/async_grpc:async_grpc" -> "@bazel_tools//tools/def_parser:def_parser"
  "//src/async_grpc:async_grpc" -> "@com_github_glog_glog//:glog"
  "//src/async_grpc:async_grpc" -> "@com_google_protobuf//:cc_wkt_protos"
  "//src/async_grpc:async_grpc" -> "@com_github_grpc_grpc//:grpc++"
  "@com_github_grpc_grpc//:grpc++"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:grpc_no_xds"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:grpc_no_binder"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:include/grpcpp/support/stub_options.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/call_op_set_interface.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpcpp/server_builder.h\n@com_github_grpc_grpc//:include/grpcpp/support/async_stream.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/async_unary_call.h\n@com_github_grpc_grpc//:include/grpc++/resource_quota.h\n...and 181 more items"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:include/grpcpp/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/support/status.h\n@com_github_grpc_grpc//:include/grpcpp/impl/status.h\n@com_github_grpc_grpc//:include/grpcpp/support/status.h"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:src/cpp/client/secure_credentials.h"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:src/cpp/common/secure_auth_context.h"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:src/cpp/server/secure_server_credentials.h"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:grpc++_base"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:grpc++_xds_client"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:grpc++_xds_server"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc++" -> "@com_github_grpc_grpc//:grpc++_binder"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc++" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc++" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++" -> "@com_google_absl//absl/strings:cord"
  "@com_github_grpc_grpc//:grpc++" -> "@com_google_absl//absl/log:absl_log"
  "@com_github_grpc_grpc//:grpc++" -> "@com_google_absl//absl/log:absl_check"
  "@com_github_grpc_grpc//:grpc++" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc++" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc++_binder"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:grpc_no_binder"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:ext/transport/binder/transport/binder_transport.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/client/channel_create_impl.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/client/channel_create.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/wire_format/transaction.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/utils/transport_stream_receiver_impl.cc\n...and 36 more items"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:grpc"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:grpc++_base"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//:server"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/memory:memory"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:transport_fwd"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:subchannel_connector"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:notification"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc++_binder" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:ext/transport/binder/transport/binder_transport.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/client/channel_create_impl.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/client/channel_create.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/wire_format/transaction.cc\n@com_github_grpc_grpc//src/core:ext/transport/binder/utils/transport_stream_receiver_impl.cc\n...and 36 more items"
  "@com_github_grpc_grpc//:grpc++_xds_server"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:include/grpcpp/xds_server_builder.h\n@com_github_grpc_grpc//:src/cpp/server/xds_server_builder.cc\n@com_github_grpc_grpc//:src/cpp/server/xds_server_credentials.cc"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:src/cpp/server/secure_server_credentials.h"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:grpc"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//:grpc++_base"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_github_grpc_grpc//src/core:xds_enabled_server"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++_xds_server" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:xds_enabled_server"
  "@com_github_grpc_grpc//src/core:xds_enabled_server" -> "@com_github_grpc_grpc//src/core:xds/grpc/xds_enabled_server.h"
  "@com_github_grpc_grpc//src/core:xds_enabled_server" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:xds_enabled_server" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:xds_enabled_server" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:xds_enabled_server" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:xds/grpc/xds_enabled_server.h"
  "@com_github_grpc_grpc//:include/grpcpp/xds_server_builder.h\n@com_github_grpc_grpc//:src/cpp/server/xds_server_builder.cc\n@com_github_grpc_grpc//:src/cpp/server/xds_server_credentials.cc"
  "@com_github_grpc_grpc//:grpc++_xds_client"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:src/cpp/client/xds_credentials.cc"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:src/cpp/client/secure_credentials.h"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:grpc"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:grpc++_base"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++_xds_client" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:src/cpp/client/xds_credentials.cc"
  "@com_github_grpc_grpc//:grpc++_base"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:src/cpp/server/server_context.cc\n@com_github_grpc_grpc//:src/cpp/client/call_credentials.cc\n@com_github_grpc_grpc//:src/cpp/server/async_generic_service.cc\n@com_github_grpc_grpc//:src/cpp/server/channel_argument_option.cc\n@com_github_grpc_grpc//:src/cpp/server/health/default_health_check_service.h\n@com_github_grpc_grpc//:src/cpp/server/external_connection_acceptor_impl.h\n@com_github_grpc_grpc//:src/cpp/server/server_credentials.cc\n...and 44 more items"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:include/grpcpp/support/stub_options.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/call_op_set_interface.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpcpp/server_builder.h\n@com_github_grpc_grpc//:include/grpcpp/support/async_stream.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/async_unary_call.h\n@com_github_grpc_grpc//:include/grpc++/resource_quota.h\n...and 181 more items"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:include/grpcpp/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/support/status.h\n@com_github_grpc_grpc//:include/grpcpp/impl/status.h\n@com_github_grpc_grpc//:include/grpcpp/support/status.h"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:src/cpp/client/secure_credentials.h"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:src/cpp/common/secure_auth_context.h"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:src/cpp/server/secure_server_credentials.h"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:channel_stack_builder"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc++_codegen_proto"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_health_upb"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpcpp_call_metric_recorder"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:grpcpp_status"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:resource_quota_api"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//:server"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:grpc_audit_logging"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:grpc_crl_provider"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:grpc_transport_inproc"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:socket_mutator"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:thread_quota"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/log:absl_check"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/log:absl_log"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/memory:memory"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_github_grpc_grpc//third_party:protobuf_headers"
  "@com_github_grpc_grpc//:grpc++_base" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:grpc++_base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++_base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//:include/grpcpp/ext/server_metric_recorder.h\n@com_github_grpc_grpc//:src/cpp/server/backend_metric_recorder.h\n@com_github_grpc_grpc//:src/cpp/server/backend_metric_recorder.cc"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//:grpc++_public_hdrs"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//:grpcpp_call_metric_recorder"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpcpp_backend_metric_recorder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@com_github_grpc_grpc//:include/grpcpp/ext/call_metric_recorder.h"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@com_github_grpc_grpc//:grpc++_public_hdrs"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpcpp_call_metric_recorder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:include/grpcpp/ext/call_metric_recorder.h"
  "@com_github_grpc_grpc//:include/grpcpp/ext/server_metric_recorder.h\n@com_github_grpc_grpc//:src/cpp/server/backend_metric_recorder.h\n@com_github_grpc_grpc//:src/cpp/server/backend_metric_recorder.cc"
  "@com_github_grpc_grpc//:grpc++_codegen_proto"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//:include/grpcpp/impl/proto_utils.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/proto_utils.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/proto_buffer_writer.h\n@com_github_grpc_grpc//:include/grpc++/impl/codegen/proto_utils.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/proto_buffer_reader.h"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//:grpc++_config_proto"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//:grpc++_public_hdrs"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//:grpcpp_status"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//third_party:protobuf"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_github_grpc_grpc//third_party:protobuf_headers"
  "@com_github_grpc_grpc//:grpc++_codegen_proto" -> "@com_google_absl//absl/strings:cord"
  "@com_github_grpc_grpc//:grpcpp_status"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@com_github_grpc_grpc//:src/cpp/util/status.cc"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@com_github_grpc_grpc//:include/grpcpp/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/support/status.h\n@com_github_grpc_grpc//:include/grpcpp/impl/status.h\n@com_github_grpc_grpc//:include/grpcpp/support/status.h"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@com_github_grpc_grpc//:grpc++_public_hdrs"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpcpp_status" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:src/cpp/util/status.cc"
  "@com_github_grpc_grpc//:grpc++_public_hdrs"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//:include/grpcpp/support/stub_options.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/call_op_set_interface.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpcpp/server_builder.h\n@com_github_grpc_grpc//:include/grpcpp/support/async_stream.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/async_unary_call.h\n@com_github_grpc_grpc//:include/grpc++/resource_quota.h\n...and 181 more items"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//:include/grpcpp/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/support/status.h\n@com_github_grpc_grpc//:include/grpcpp/impl/status.h\n@com_github_grpc_grpc//:include/grpcpp/support/status.h"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_google_absl//absl/log:absl_check"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_google_absl//absl/log:absl_log"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_google_absl//absl/strings:cord"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//third_party:protobuf_headers"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@com_github_grpc_grpc//third_party:protobuf"
  "@com_github_grpc_grpc//:grpc++_public_hdrs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc++_config_proto"
  "@com_github_grpc_grpc//:grpc++_config_proto" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc++_config_proto" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc++_config_proto" -> "@com_github_grpc_grpc//:include/grpc++/impl/codegen/config_protobuf.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/config_protobuf.h"
  "@com_github_grpc_grpc//:grpc++_config_proto" -> "@com_github_grpc_grpc//third_party:protobuf_headers"
  "@com_github_grpc_grpc//:grpc++_config_proto" -> "@com_github_grpc_grpc//third_party:protobuf"
  "@com_github_grpc_grpc//:grpc++_config_proto" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc++_config_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//third_party:protobuf"
  "@com_github_grpc_grpc//third_party:protobuf" -> "@com_google_protobuf//:protobuf"
  "@com_github_grpc_grpc//third_party:protobuf_headers"
  "@com_github_grpc_grpc//third_party:protobuf_headers" -> "@com_google_protobuf//:protobuf_headers"
  "@com_google_protobuf//:protobuf_headers"
  "@com_google_protobuf//:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:protobuf_headers"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:implicit_weak_message.h\n@com_google_protobuf//src/google/protobuf:repeated_field.h\n@com_google_protobuf//src/google/protobuf:generated_message_util.h\n@com_google_protobuf//src/google/protobuf:generated_enum_util.h\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_decl.h\n@com_google_protobuf//src/google/protobuf:inlined_string_field.h\n@com_google_protobuf//src/google/protobuf:arenastring.h\n...and 18 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:empty.pb.h\n@com_google_protobuf//src/google/protobuf:test_textproto.h\n@com_google_protobuf//src/google/protobuf:internal_visibility_for_testing.h\n@com_google_protobuf//src/google/protobuf:test_util2.h\n@com_google_protobuf//src/google/protobuf:field_mask.pb.h\n@com_google_protobuf//src/google/protobuf:type.pb.h\n@com_google_protobuf//src/google/protobuf:test_util_lite.h\n@com_google_protobuf//src/google/protobuf:map_lite_test_util.h\n...and 23 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:serial_arena.h\n@com_google_protobuf//src/google/protobuf:thread_safe_arena.h\n@com_google_protobuf//src/google/protobuf:arenaz_sampler.h\n@com_google_protobuf//src/google/protobuf:arena.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:arena_align.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:arena_allocation_policy.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:arena_cleanup.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:unknown_field_set.h\n@com_google_protobuf//src/google/protobuf:message.h\n@com_google_protobuf//src/google/protobuf:reflection_ops.h\n@com_google_protobuf//src/google/protobuf:metadata.h\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_gen.h\n@com_google_protobuf//src/google/protobuf:reflection_internal.h\n@com_google_protobuf//src/google/protobuf:descriptor_visitor.h\n...and 21 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:descriptor_legacy.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:internal_visibility.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:port.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:port_undef.inc\n@com_google_protobuf//src/google/protobuf:port_def.inc"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:string_block.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@com_google_protobuf//src/google/protobuf:varint_shuffle.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:protobuf_headers" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:empty.pb.h\n@com_google_protobuf//src/google/protobuf:test_textproto.h\n@com_google_protobuf//src/google/protobuf:internal_visibility_for_testing.h\n@com_google_protobuf//src/google/protobuf:test_util2.h\n@com_google_protobuf//src/google/protobuf:field_mask.pb.h\n@com_google_protobuf//src/google/protobuf:type.pb.h\n@com_google_protobuf//src/google/protobuf:test_util_lite.h\n@com_google_protobuf//src/google/protobuf:map_lite_test_util.h\n...and 23 more items"
  "@com_github_grpc_grpc//:include/grpc++/impl/codegen/config_protobuf.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/config_protobuf.h"
  "@com_github_grpc_grpc//:include/grpcpp/impl/proto_utils.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/proto_utils.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/proto_buffer_writer.h\n@com_github_grpc_grpc//:include/grpc++/impl/codegen/proto_utils.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/proto_buffer_reader.h"
  "@com_github_grpc_grpc//:grpc"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_no_xds"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:include/grpc/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/connectivity_state.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/slice.h\n@com_github_grpc_grpc//:include/grpc/passive_listener.h\n@com_github_grpc_grpc//:include/grpc/impl/compression_types.h\n@com_github_grpc_grpc//:include/grpc/status.h\n...and 18 more items"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:plugin_registry/grpc_plugin_registry.cc\n@com_github_grpc_grpc//src/core:plugin_registry/grpc_plugin_registry_extra.cc\n@com_github_grpc_grpc//src/core:lib/surface/init.cc"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:channel_stack_builder"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_alts_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_common"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_http_filters"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_jwt_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:http_connect_handshaker"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:server"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:client_channel_backup_poller"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:endpoint_info_handshaker"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:forkable"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_authorization_base"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_iam_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_ssl_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_tls_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_insecure_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:http_proxy_mapper"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:server_call_tracer_filter"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:tcp_connect_handshaker"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_resolver_xds"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_resolver_c2p"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:channel_creds_registry_init"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_local_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_google_default_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_external_account_credentials"
  "@com_github_grpc_grpc//:grpc" -> "@com_github_grpc_grpc//src/core:grpc_fake_credentials"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/security_connector/local/local_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/local/local_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/local/local_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/local/local_security_connector.h"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:tsi_local_credentials"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_local_credentials" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/channel_creds_registry_init.cc"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:channel_creds_registry"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:grpc_fake_credentials"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:grpc_google_default_credentials"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:grpc_tls_credentials"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:channel_creds_registry_init" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/google_default/google_default_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/google_default/credentials_generic.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/google_default/google_default_credentials.cc"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb.h"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:grpc_external_account_credentials"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:grpc_ssl_credentials"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:grpc_jwt_credentials"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:grpc_alts_credentials"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:grpc_google_default_credentials" -> "@com_github_grpc_grpc//:alts_util"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/external/url_external_account_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/external/url_external_account_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/external/file_external_account_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/external/aws_request_signer.h\n...and 6 more items"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//third_party:libcrypto"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_external_account_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/external/url_external_account_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/external/url_external_account_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/external/file_external_account_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/external/aws_request_signer.h\n...and 6 more items"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/google_default/google_default_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/google_default/credentials_generic.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/google_default/google_default_credentials.cc"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/channel_creds_registry_init.cc"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:server/xds_server_config_fetcher.cc"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:grpc_server_config_selector"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:grpc_tls_credentials"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:server"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_xds_server_config_fetcher" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//src/core:server/xds_channel_stack_modifier.cc\n@com_github_grpc_grpc//src/core:server/xds_channel_stack_modifier.h"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//:channel_stack_builder"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_xds_channel_stack_modifier" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:server/xds_channel_stack_modifier.cc\n@com_github_grpc_grpc//src/core:server/xds_channel_stack_modifier.h"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:server/server_config_selector_filter.h\n@com_github_grpc_grpc//src/core:server/server_config_selector_filter.cc"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:event_engine_context"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:grpc_server_config_selector"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:server/server_config_selector_filter.h\n@com_github_grpc_grpc//src/core:server/server_config_selector_filter.cc"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//src/core:server/server_config_selector.h"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_server_config_selector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:server/server_config_selector.h"
  "@com_github_grpc_grpc//src/core:server/xds_server_config_fetcher.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:resolver/google_c2p/google_c2p_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:gcp_metadata_query"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:alts_util"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_c2p" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//src/core:util/gcp_metadata_query.h\n@com_github_grpc_grpc//src/core:util/gcp_metadata_query.cc"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:gcp_metadata_query" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:util/gcp_metadata_query.h\n@com_github_grpc_grpc//src/core:util/gcp_metadata_query.cc"
  "@com_github_grpc_grpc//src/core:resolver/google_c2p/google_c2p_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:resolver/xds/xds_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:config_selector"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:xds_dependency_manager"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//src/core:xxhash_inline"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//third_party:re2"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:resolver/xds/xds_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:load_balancing/ring_hash/ring_hash.cc\n@com_github_grpc_grpc//src/core:load_balancing/ring_hash/ring_hash.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//src/core:xxhash_inline"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_ring_hash" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:xxhash_inline"
  "@com_github_grpc_grpc//src/core:xxhash_inline" -> "@com_github_grpc_grpc//src/core:lib/gprpp/xxhash_inline.h"
  "@com_github_grpc_grpc//src/core:xxhash_inline" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:xxhash_inline" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:xxhash_inline" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:xxhash_inline" -> "@com_github_grpc_grpc//third_party/xxhash:xxhash"
  "@com_github_grpc_grpc//src/core:xxhash_inline" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:xxhash_inline" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//third_party/xxhash:xxhash"
  "@com_github_grpc_grpc//third_party/xxhash:xxhash" -> "@com_github_grpc_grpc//third_party/xxhash:xxhash.h"
  "@com_github_grpc_grpc//third_party/xxhash:xxhash" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//third_party/xxhash:xxhash" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//third_party/xxhash:xxhash.h"
  "@com_github_grpc_grpc//src/core:lib/gprpp/xxhash_inline.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_wrr_locality.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_wrr_locality" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_wrr_locality.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_override_host.cc\n@com_github_grpc_grpc//src/core:load_balancing/xds/xds_override_host.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//src/core:xds_dependency_manager"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_override_host" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_override_host.cc\n@com_github_grpc_grpc//src/core:load_balancing/xds/xds_override_host.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_cluster_impl.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//src/core:xds_dependency_manager"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_impl" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_cluster_impl.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_cluster_manager.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_xds_cluster_manager" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_cluster_manager.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:load_balancing/xds/cds.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//src/core:xds_dependency_manager"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_cds" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//src/core:resolver/xds/xds_dependency_manager.h\n@com_github_grpc_grpc//src/core:resolver/xds/xds_dependency_manager.cc"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//:grpc_resolver_fake"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:xds_dependency_manager" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:resolver/xds/xds_dependency_manager.h\n@com_github_grpc_grpc//src/core:resolver/xds/xds_dependency_manager.cc"
  "@com_github_grpc_grpc//src/core:grpc_xds_client"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:xds/grpc/xds_health_status.cc\n@com_github_grpc_grpc//src/core:xds/grpc/certificate_provider_store.cc\n@com_github_grpc_grpc//src/core:xds/grpc/file_watcher_certificate_provider_factory.h\n@com_github_grpc_grpc//src/core:xds/grpc/xds_route_config.cc\n@com_github_grpc_grpc//src/core:xds/grpc/xds_lb_policy_registry.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/xds/xds_credentials.cc\n...and 36 more items"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:certificate_provider_factory"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:certificate_provider_registry"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:channel_creds_registry"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_admin_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_core_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_listener_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_route_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_service_status_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_type_http_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:envoy_type_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:google_rpc_status_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_audit_logging"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_fake_credentials"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_matchers"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_rbac_filter"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_tls_credentials"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:json_util"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:protobuf_any_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:protobuf_duration_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:protobuf_struct_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:rls_config_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:rls_config_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:status_conversion"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:upb_utils"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:xds_type_upb"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//src/core:xds_type_upbdefs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_protobuf//upb:message"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_protobuf//upb:reflection"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//third_party:re2"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_protobuf//upb:json"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_protobuf//upb:text"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:tsi_ssl_credentials"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/memory:memory"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/functional:bind_front"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_xds_client" -> "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//:xds_client"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_admin_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_config_core_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_config_endpoint_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_service_discovery_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_service_load_stats_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_service_status_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:envoy_service_status_upbdefs"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:google_rpc_status_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:protobuf_any_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:protobuf_duration_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:protobuf_struct_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:xds/xds_client/xds_client_stats.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_api.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_metrics.h\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_api.h\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_client.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_bootstrap.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_resource_type.h\n...and 6 more items"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:protobuf_timestamp_upb"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//:xds_client" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:xds_client" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_protobuf//upb:reflection"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_protobuf//upb:json"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:per_cpu"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:upb_utils"
  "@com_github_grpc_grpc//:xds_client" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/memory:memory"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_protobuf//upb:text"
  "@com_github_grpc_grpc//:xds_client" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:xds/xds_client/xds_client_stats.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_api.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_metrics.h\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_api.h\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_client.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_bootstrap.cc\n@com_github_grpc_grpc//src/core:xds/xds_client/xds_resource_type.h\n...and 6 more items"
  "@com_github_grpc_grpc//:protobuf_struct_upb"
  "@com_github_grpc_grpc//:protobuf_struct_upb" -> "@com_google_protobuf//:struct_proto"
  "@com_github_grpc_grpc//:protobuf_struct_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:protobuf_struct_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:protobuf_struct_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:protobuf_struct_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:protobuf_struct_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:envoy_service_status_upbdefs"
  "@com_github_grpc_grpc//:envoy_service_status_upbdefs" -> "@envoy_api//envoy/service/status/v3:pkg"
  "@com_github_grpc_grpc//:envoy_service_status_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_service_status_upb"
  "@com_github_grpc_grpc//:envoy_service_status_upb" -> "@envoy_api//envoy/service/status/v3:pkg"
  "@com_github_grpc_grpc//:envoy_service_status_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_service_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:envoy_service_status_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_service_status_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_service_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs" -> "@envoy_api//envoy/service/load_stats/v3:pkg"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upb"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upb" -> "@envoy_api//envoy/service/load_stats/v3:pkg"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs"
  "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs" -> "@envoy_api//envoy/service/discovery/v3:pkg"
  "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_service_discovery_upb"
  "@com_github_grpc_grpc//:envoy_service_discovery_upb" -> "@envoy_api//envoy/service/discovery/v3:pkg"
  "@com_github_grpc_grpc//:envoy_service_discovery_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_service_discovery_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:envoy_service_discovery_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_service_discovery_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_service_discovery_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_config_endpoint_upb"
  "@com_github_grpc_grpc//:envoy_config_endpoint_upb" -> "@envoy_api//envoy/config/endpoint/v3:pkg"
  "@com_github_grpc_grpc//:envoy_config_endpoint_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_config_core_upb"
  "@com_github_grpc_grpc//:envoy_config_core_upb" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@com_github_grpc_grpc//:envoy_config_core_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_config_core_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:envoy_config_core_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_config_core_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_config_core_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:envoy_admin_upb"
  "@com_github_grpc_grpc//:envoy_admin_upb" -> "@envoy_api//envoy/admin/v3:pkg"
  "@com_github_grpc_grpc//:envoy_admin_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:envoy_admin_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:envoy_admin_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:envoy_admin_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:envoy_admin_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_google_protobuf//upb:text"
  "@com_google_protobuf//upb:text" -> "@com_google_protobuf//upb/text:text"
  "@com_google_protobuf//upb/text:text"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb/text:encode.c\n@com_google_protobuf//upb/text:encode.h"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//third_party/utf8_range:utf8_range"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/text:text" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/text:text" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb/message:types"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:reflection"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:wire_reader"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb/lex:lex"
  "@com_google_protobuf//upb/text:text" -> "@com_google_protobuf//upb:eps_copy_input_stream"
  "@com_google_protobuf//upb/text:encode.c\n@com_google_protobuf//upb/text:encode.h"
  "@com_google_protobuf//upb:json"
  "@com_google_protobuf//upb:json" -> "@com_google_protobuf//upb/json:json"
  "@com_google_protobuf//upb/json:json"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb/json:encode.h\n@com_google_protobuf//upb/json:decode.c\n@com_google_protobuf//upb/json:encode.c\n@com_google_protobuf//upb/json:decode.h"
  "@com_google_protobuf//upb/json:json" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/json:json" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb/lex:lex"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:reflection"
  "@com_google_protobuf//upb/json:json" -> "@com_google_protobuf//upb:wire"
  "@com_google_protobuf//upb/lex:lex"
  "@com_google_protobuf//upb/lex:lex" -> "@com_google_protobuf//upb/lex:round_trip.h\n@com_google_protobuf//upb/lex:atoi.h\n@com_google_protobuf//upb/lex:unicode.h\n@com_google_protobuf//upb/lex:atoi.c\n@com_google_protobuf//upb/lex:round_trip.c\n@com_google_protobuf//upb/lex:strtod.c\n@com_google_protobuf//upb/lex:unicode.c\n@com_google_protobuf//upb/lex:strtod.h"
  "@com_google_protobuf//upb/lex:lex" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/lex:lex" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/lex:lex" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/lex:lex" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/lex:lex" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/lex:round_trip.h\n@com_google_protobuf//upb/lex:atoi.h\n@com_google_protobuf//upb/lex:unicode.h\n@com_google_protobuf//upb/lex:atoi.c\n@com_google_protobuf//upb/lex:round_trip.c\n@com_google_protobuf//upb/lex:strtod.c\n@com_google_protobuf//upb/lex:unicode.c\n@com_google_protobuf//upb/lex:strtod.h"
  "@com_google_protobuf//upb/json:encode.h\n@com_google_protobuf//upb/json:decode.c\n@com_google_protobuf//upb/json:encode.c\n@com_google_protobuf//upb/json:decode.h"
  "@com_github_grpc_grpc//src/core:xds_type_upbdefs"
  "@com_github_grpc_grpc//src/core:xds_type_upbdefs" -> "@com_github_cncf_xds//xds/type/v3:pkg"
  "@com_github_grpc_grpc//src/core:xds_type_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:xds_type_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:xds_type_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:xds_type_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:xds_type_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:xds_type_upb"
  "@com_github_grpc_grpc//src/core:xds_type_upb" -> "@com_github_cncf_xds//xds/type/v3:pkg"
  "@com_github_grpc_grpc//src/core:xds_type_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:xds_type_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:xds_type_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:xds_type_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:xds_type_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:upb_utils"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@com_github_grpc_grpc//src/core:xds/grpc/upb_utils.h"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:upb_utils" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:xds/grpc/upb_utils.h"
  "@com_github_grpc_grpc//src/core:rls_config_upbdefs"
  "@com_github_grpc_grpc//src/core:rls_config_upbdefs" -> "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config_proto_descriptor"
  "@com_github_grpc_grpc//src/core:rls_config_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:rls_config_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:rls_config_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:rls_config_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:rls_config_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:rls_config_upb"
  "@com_github_grpc_grpc//src/core:rls_config_upb" -> "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config_proto_descriptor"
  "@com_github_grpc_grpc//src/core:rls_config_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:rls_config_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:rls_config_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:rls_config_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:rls_config_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config_proto_descriptor"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config_proto_descriptor" -> "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config.proto"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config_proto_descriptor" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config_proto_descriptor" -> "@com_google_protobuf//:duration_proto"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_config.proto"
  "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb"
  "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:protobuf_wrappers_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb"
  "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:protobuf_timestamp_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs" -> "@com_google_protobuf//:struct_proto"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upb"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upb" -> "@com_google_protobuf//:struct_proto"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:protobuf_struct_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_duration_upb"
  "@com_github_grpc_grpc//src/core:protobuf_duration_upb" -> "@com_google_protobuf//:duration_proto"
  "@com_github_grpc_grpc//src/core:protobuf_duration_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_duration_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_duration_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:protobuf_duration_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:protobuf_duration_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_any_upb"
  "@com_github_grpc_grpc//src/core:protobuf_any_upb" -> "@com_google_protobuf//:any_proto"
  "@com_github_grpc_grpc//src/core:protobuf_any_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_any_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:protobuf_any_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:protobuf_any_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:protobuf_any_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:json_util"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:util/json/json_util.h\n@com_github_grpc_grpc//src/core:util/json/json_util.cc"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:json_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:json_util" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:util/json/json_util.h\n@com_github_grpc_grpc//src/core:util/json/json_util.cc"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_service_config_parser.cc\n@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_service_config_parser.h"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_stateful_session_filter" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@com_github_grpc_grpc//src/core:resolver/xds/xds_resolver_attributes.h"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_xds_attributes" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:resolver/xds/xds_resolver_attributes.h"
  "@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_service_config_parser.cc\n@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/stateful_session/stateful_session_service_config_parser.h"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_service_config_parser.h\n@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_service_config_parser.cc"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:grpc_audit_logging"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:grpc_authorization_base"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:grpc_matchers"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:grpc_rbac_engine"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_rbac_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//src/core:lib/security/authorization/matchers.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/rbac_policy.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/matchers.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/rbac_policy.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/grpc_authorization_engine.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/grpc_authorization_engine.h"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//src/core:grpc_audit_logging"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//src/core:grpc_authorization_base"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//src/core:grpc_matchers"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_rbac_engine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/security/authorization/matchers.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/rbac_policy.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/matchers.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/rbac_policy.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/grpc_authorization_engine.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/grpc_authorization_engine.h"
  "@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_service_config_parser.h\n@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/rbac/rbac_service_config_parser.cc"
  "@com_github_grpc_grpc//src/core:grpc_matchers"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_github_grpc_grpc//src/core:lib/matchers/matchers.h\n@com_github_grpc_grpc//src/core:lib/matchers/matchers.cc"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_github_grpc_grpc//third_party:re2"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_matchers" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//third_party:re2"
  "@com_github_grpc_grpc//third_party:re2" -> "@com_googlesource_code_re2//:re2"
  "@com_googlesource_code_re2//:re2"
  "@com_googlesource_code_re2//:re2" -> "@com_googlesource_code_re2//:re2/prefilter.h\n@com_googlesource_code_re2//:re2/parse.cc\n@com_googlesource_code_re2//:re2/nfa.cc\n@com_googlesource_code_re2//:re2/prefilter_tree.h\n@com_googlesource_code_re2//:re2/prog.cc\n@com_googlesource_code_re2//:re2/stringpiece.h\n@com_googlesource_code_re2//:re2/set.cc\n@com_googlesource_code_re2//:util/strutil.h\n@com_googlesource_code_re2//:re2/onepass.cc\n@com_googlesource_code_re2//:re2/mimics_pcre.cc\n...and 29 more items"
  "@com_googlesource_code_re2//:re2" -> "@platforms//os:macos"
  "@com_googlesource_code_re2//:re2" -> "@platforms//cpu:wasm32"
  "@com_googlesource_code_re2//:re2" -> "@platforms//cpu:wasm64"
  "@com_googlesource_code_re2//:re2" -> "@platforms//os:emscripten\n@platforms//os:wasi"
  "@com_googlesource_code_re2//:re2" -> "@platforms//os:windows"
  "@com_googlesource_code_re2//:re2" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_googlesource_code_re2//:re2" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/types:span"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/types:optional"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/strings:str_format"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/strings:strings"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/log:absl_log"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/log:absl_check"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/hash:hash"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/container:fixed_array"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/base:core_headers"
  "@com_googlesource_code_re2//:re2" -> "@com_google_absl//absl/base:base"
  "@platforms//os:emscripten\n@platforms//os:wasi"
  "@platforms//os:emscripten\n@platforms//os:wasi" -> "@platforms//os:os"
  "@com_googlesource_code_re2//:re2/prefilter.h\n@com_googlesource_code_re2//:re2/parse.cc\n@com_googlesource_code_re2//:re2/nfa.cc\n@com_googlesource_code_re2//:re2/prefilter_tree.h\n@com_googlesource_code_re2//:re2/prog.cc\n@com_googlesource_code_re2//:re2/stringpiece.h\n@com_googlesource_code_re2//:re2/set.cc\n@com_googlesource_code_re2//:util/strutil.h\n@com_googlesource_code_re2//:re2/onepass.cc\n@com_googlesource_code_re2//:re2/mimics_pcre.cc\n...and 29 more items"
  "@com_github_grpc_grpc//src/core:lib/matchers/matchers.h\n@com_github_grpc_grpc//src/core:lib/matchers/matchers.cc"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_github_grpc_grpc//src/core:lib/security/authorization/stdout_logger.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/stdout_logger.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/audit_logging.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/audit_logging.h"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_audit_logging" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/security/authorization/stdout_logger.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/stdout_logger.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/audit_logging.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/audit_logging.h"
  "@com_github_grpc_grpc//src/core:google_rpc_status_upb"
  "@com_github_grpc_grpc//src/core:google_rpc_status_upb" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_grpc_grpc//src/core:google_rpc_status_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:google_rpc_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:google_rpc_status_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:google_rpc_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:google_rpc_status_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_type_upb"
  "@com_github_grpc_grpc//src/core:envoy_type_upb" -> "@envoy_api//envoy/type/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_type_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_type_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_type_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb"
  "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_matcher_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_type_http_upb"
  "@com_github_grpc_grpc//src/core:envoy_type_http_upb" -> "@envoy_api//envoy/type/http/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_type_http_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_http_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_type_http_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_type_http_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_type_http_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs" -> "@envoy_api//envoy/service/status/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upb"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upb" -> "@envoy_api//envoy/service/status/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_status_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@envoy_api//envoy/service/status/v3:pkg"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@envoy_api//envoy/service/status/v3:csds.proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/service/status/v3:pkg" -> "@envoy_api//envoy/admin/v3:pkg"
  "@envoy_api//envoy/service/status/v3:csds.proto"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs" -> "@envoy_api//envoy/service/load_stats/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb" -> "@envoy_api//envoy/service/load_stats/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_service_load_stats_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@envoy_api//envoy/service/load_stats/v3:pkg"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@envoy_api//envoy/service/load_stats/v3:lrs.proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@envoy_api//envoy/config/endpoint/v3:pkg"
  "@envoy_api//envoy/service/load_stats/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/service/load_stats/v3:lrs.proto"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs" -> "@envoy_api//envoy/service/discovery/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb" -> "@envoy_api//envoy/service/discovery/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_service_discovery_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@envoy_api//envoy/service/discovery/v3:pkg"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@envoy_api//envoy/service/discovery/v3:discovery.proto\n@envoy_api//envoy/service/discovery/v3:ads.proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/service/discovery/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/service/discovery/v3:discovery.proto\n@envoy_api//envoy/service/discovery/v3:ads.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs" -> "@envoy_api//envoy/extensions/upstreams/http/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb" -> "@envoy_api//envoy/extensions/upstreams/http/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_upstreams_http_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@envoy_api//envoy/extensions/upstreams/http/v3:http_protocol_options.proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg"
  "@envoy_api//envoy/extensions/upstreams/http/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs" -> "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb" -> "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_transport_sockets_tls_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb" -> "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_wrr_locality_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:wrr_locality.proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@envoy_api//envoy/config/cluster/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/wrr_locality/v3:wrr_locality.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb" -> "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_ring_hash_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:ring_hash.proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:common.proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/common/v3:common.proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/ring_hash/v3:ring_hash.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb" -> "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_pick_first_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pick_first.proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/pick_first/v3:pick_first.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb" -> "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_load_balancing_policies_client_side_weighted_round_robin_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:client_side_weighted_round_robin.proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/load_balancing_policies/client_side_weighted_round_robin/v3:client_side_weighted_round_robin.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs" -> "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb" -> "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_http_stateful_session_cookie_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:cookie.proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:pkg" -> "@envoy_api//envoy/type/http/v3:pkg"
  "@envoy_api//envoy/extensions/http/stateful_session/cookie/v3:cookie.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs" -> "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb" -> "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_network_http_connection_manager_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs" -> "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb" -> "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_stateful_session_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:stateful_session.proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/filters/http/stateful_session/v3:stateful_session.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs" -> "@envoy_api//envoy/extensions/filters/http/router/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb" -> "@envoy_api//envoy/extensions/filters/http/router/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_router_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@envoy_api//envoy/extensions/filters/http/router/v3:router.proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@envoy_api//envoy/config/accesslog/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:http_connection_manager.proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/config/accesslog/v3:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/config/trace/v3:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/type/http/v3:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:pkg" -> "@envoy_api//envoy/type/tracing/v3:pkg"
  "@envoy_api//envoy/type/http/v3:pkg"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@envoy_api//envoy/type/http/v3:cookie.proto\n@envoy_api//envoy/type/http/v3:path_transformation.proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/type/http/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/type/http/v3:cookie.proto\n@envoy_api//envoy/type/http/v3:path_transformation.proto"
  "@envoy_api//envoy/extensions/filters/network/http_connection_manager/v3:http_connection_manager.proto"
  "@envoy_api//envoy/extensions/filters/http/router/v3:router.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs" -> "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb" -> "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_rbac_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@envoy_api//envoy/extensions/filters/http/rbac/v3:rbac.proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@envoy_api//envoy/config/rbac/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_github_cncf_xds//xds/type/matcher/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/filters/http/rbac/v3:rbac.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs" -> "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb" -> "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_http_fault_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@envoy_api//envoy/extensions/filters/http/fault/v3:fault.proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:pkg" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@envoy_api//envoy/extensions/filters/http/fault/v3:fault.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb" -> "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_filters_common_fault_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@envoy_api//envoy/extensions/filters/common/fault/v3:fault.proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/filters/common/fault/v3:fault.proto"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs" -> "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb" -> "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_extensions_clusters_aggregate_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@envoy_api//envoy/extensions/clusters/aggregate/v3:cluster.proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/clusters/aggregate/v3:cluster.proto"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upb"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upb" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_route_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb"
  "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb" -> "@envoy_api//envoy/config/rbac/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_rbac_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/config/rbac/v3:pkg"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@envoy_api//envoy/config/rbac/v3:rbac.proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/rbac/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/rbac/v3:rbac.proto"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs" -> "@envoy_api//envoy/config/listener/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upb"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upb" -> "@envoy_api//envoy/config/listener/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_listener_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs" -> "@envoy_api//envoy/config/endpoint/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb" -> "@envoy_api//envoy/config/endpoint/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_endpoint_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_core_upb"
  "@com_github_grpc_grpc//src/core:envoy_config_core_upb" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_core_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_core_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_core_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_core_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_core_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs" -> "@envoy_api//envoy/config/cluster/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upbdefs" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_toolchain" -> "@com_google_protobuf//upb:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb/reflection:internal/def_pool.h"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb/reflection:internal"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/reflection:generated_reflection_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:port_inc"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs" -> "@bazel_tools//tools/cpp:malloc"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb_generator:protoc-gen-upbdefs.cc"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb_generator:common"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb_generator:file_layout"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb_generator:plugin"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb:descriptor_upb_proto"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb:reflection"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@com_google_protobuf//upb/util:def_to_proto"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs_lib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/util:def_to_proto"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@com_google_protobuf//upb/util:def_to_proto.c\n@com_google_protobuf//upb/util:def_to_proto.h"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@com_google_protobuf//upb/reflection:internal"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@com_google_protobuf//upb:reflection"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@com_google_protobuf//upb:descriptor_upb_proto"
  "@com_google_protobuf//upb/util:def_to_proto" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/util:def_to_proto.c\n@com_google_protobuf//upb/util:def_to_proto.h"
  "@com_google_protobuf//upb:reflection"
  "@com_google_protobuf//upb:reflection" -> "@com_google_protobuf//upb/reflection:reflection"
  "@com_google_protobuf//upb:descriptor_upb_proto"
  "@com_google_protobuf//upb:descriptor_upb_proto" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto"
  "@com_google_protobuf//upb_generator:plugin"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_protobuf//upb_generator:plugin.h"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_protobuf//upb_generator:plugin_upb_proto"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_protobuf//upb:friend_generators"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto"
  "@com_google_protobuf//upb_generator:plugin" -> "@com_google_protobuf//upb/reflection:reflection"
  "@com_google_protobuf//upb_generator:plugin" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:plugin" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_upb_proto"
  "@com_google_protobuf//upb_generator:plugin_upb_proto" -> "@com_google_protobuf//upb:friends"
  "@com_google_protobuf//upb_generator:plugin_upb_proto" -> "@com_google_protobuf//:compiler_plugin_proto"
  "@com_google_protobuf//upb_generator:plugin_upb_proto" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_google_protobuf//upb_generator:plugin_upb_proto" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_google_protobuf//upb_generator:plugin_upb_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_upb_proto" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_google_protobuf//upb_generator:plugin_upb_proto" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_google_protobuf//upb_generator:file_layout"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb_generator:file_layout.cc\n@com_google_protobuf//upb_generator:file_layout.h"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb_generator:common"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb/reflection:reflection"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto"
  "@com_google_protobuf//upb_generator:file_layout" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:file_layout" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:file_layout" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb_generator:common"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_protobuf//upb_generator:common.h\n@com_google_protobuf//upb_generator:common.cc"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_protobuf//upb_generator:mangle"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_protobuf//upb:friend_generators"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:common" -> "@com_google_protobuf//upb/reflection:reflection"
  "@com_google_protobuf//upb_generator:common" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:common" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:reflection"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb/reflection:message.h\n@com_google_protobuf//upb/reflection:message.hpp\n@com_google_protobuf//upb/reflection:def.hpp"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb/reflection:internal"
  "@com_google_protobuf//upb/reflection:reflection" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:reflection" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/reflection:reflection" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/reflection:internal"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/reflection:internal/method_def.h\n@com_google_protobuf//upb/reflection:internal/enum_reserved_range.h\n@com_google_protobuf//upb/reflection:message_def.h\n@com_google_protobuf//upb/reflection:internal/service_def.h\n@com_google_protobuf//upb/reflection:extension_range.c\n@com_google_protobuf//upb/reflection:common.h\n@com_google_protobuf//upb/reflection:oneof_def.c\n@com_google_protobuf//upb/reflection:internal/strdup2.c\n...and 38 more items"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/reflection:message.h\n@com_google_protobuf//upb/reflection:message.hpp\n@com_google_protobuf//upb/reflection:def.hpp"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/reflection:internal/def_pool.h"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto"
  "@com_google_protobuf//upb/reflection:internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/mini_descriptor:internal"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:wire"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:message_copy"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/reflection:internal" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto" -> "@com_google_protobuf//:descriptor_proto"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_google_protobuf//upb:friend_generators"
  "@com_google_protobuf//upb_generator:protoc-gen-upbdefs.cc"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb" -> "@envoy_api//envoy/config/cluster/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_config_cluster_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_admin_upb"
  "@com_github_grpc_grpc//src/core:envoy_admin_upb" -> "@envoy_api//envoy/admin/v3:pkg"
  "@com_github_grpc_grpc//src/core:envoy_admin_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:envoy_admin_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_admin_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:envoy_admin_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:envoy_admin_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@envoy_api//envoy/admin/v3:pkg"
  "@envoy_api//envoy/admin/v3:pkg" -> "@envoy_api//envoy/admin/v3:tap.proto\n@envoy_api//envoy/admin/v3:init_dump.proto\n@envoy_api//envoy/admin/v3:metrics.proto\n@envoy_api//envoy/admin/v3:mutex_stats.proto\n@envoy_api//envoy/admin/v3:config_dump.proto\n@envoy_api//envoy/admin/v3:server_info.proto\n@envoy_api//envoy/admin/v3:listeners.proto\n@envoy_api//envoy/admin/v3:config_dump_shared.proto\n@envoy_api//envoy/admin/v3:clusters.proto\n@envoy_api//envoy/admin/v3:memory.proto\n@envoy_api//envoy/admin/v3:certs.proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@envoy_api//envoy/config/bootstrap/v3:pkg"
  "@envoy_api//envoy/admin/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/admin/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/admin/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/admin/v3:pkg" -> "@envoy_api//envoy/config/tap/v3:pkg"
  "@envoy_api//envoy/admin/v3:pkg" -> "@envoy_api//envoy/config/cluster/v3:pkg"
  "@envoy_api//envoy/admin/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/tap/v3:pkg"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@envoy_api//envoy/config/tap/v3:common.proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@envoy_api//envoy/config/common/matcher/v3:pkg"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@envoy_api//envoy/config/tap/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/common/matcher/v3:pkg"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@envoy_api//envoy/config/common/matcher/v3:matcher.proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@envoy_api//envoy/config/common/matcher/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/common/matcher/v3:matcher.proto"
  "@envoy_api//envoy/config/tap/v3:common.proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/bootstrap/v3:bootstrap.proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/accesslog/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/cluster/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/listener/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/metrics/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/overload/v3:pkg"
  "@envoy_api//envoy/config/bootstrap/v3:pkg" -> "@envoy_api//envoy/config/trace/v3:pkg"
  "@envoy_api//envoy/config/trace/v3:pkg"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@envoy_api//envoy/config/trace/v3:lightstep.proto\n@envoy_api//envoy/config/trace/v3:datadog.proto\n@envoy_api//envoy/config/trace/v3:zipkin.proto\n@envoy_api//envoy/config/trace/v3:http_tracer.proto\n@envoy_api//envoy/config/trace/v3:dynamic_ot.proto\n@envoy_api//envoy/config/trace/v3:service.proto\n@envoy_api//envoy/config/trace/v3:opencensus.proto\n@envoy_api//envoy/config/trace/v3:xray.proto\n@envoy_api//envoy/config/trace/v3:trace.proto\n...and 2 more items"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@opencensus_proto//opencensus/proto/trace/v1:trace_config_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/trace/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@opencensus_proto//opencensus/proto/trace/v1:trace_config_proto"
  "@opencensus_proto//opencensus/proto/trace/v1:trace_config_proto" -> "@opencensus_proto//opencensus/proto/trace/v1:trace_config.proto"
  "@opencensus_proto//opencensus/proto/trace/v1:trace_config_proto" -> "@bazel_tools//tools/proto:protoc"
  "@opencensus_proto//opencensus/proto/trace/v1:trace_config.proto"
  "@envoy_api//envoy/config/trace/v3:lightstep.proto\n@envoy_api//envoy/config/trace/v3:datadog.proto\n@envoy_api//envoy/config/trace/v3:zipkin.proto\n@envoy_api//envoy/config/trace/v3:http_tracer.proto\n@envoy_api//envoy/config/trace/v3:dynamic_ot.proto\n@envoy_api//envoy/config/trace/v3:service.proto\n@envoy_api//envoy/config/trace/v3:opencensus.proto\n@envoy_api//envoy/config/trace/v3:xray.proto\n@envoy_api//envoy/config/trace/v3:trace.proto\n...and 2 more items"
  "@envoy_api//envoy/config/overload/v3:pkg"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@envoy_api//envoy/config/overload/v3:overload.proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/overload/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/overload/v3:overload.proto"
  "@envoy_api//envoy/config/metrics/v3:pkg"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@envoy_api//envoy/config/metrics/v3:stats.proto\n@envoy_api//envoy/config/metrics/v3:metrics_service.proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/config/metrics/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/metrics/v3:stats.proto\n@envoy_api//envoy/config/metrics/v3:metrics_service.proto"
  "@envoy_api//envoy/config/listener/v3:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@envoy_api//envoy/config/listener/v3:api_listener.proto\n@envoy_api//envoy/config/listener/v3:quic_config.proto\n@envoy_api//envoy/config/listener/v3:udp_listener_config.proto\n@envoy_api//envoy/config/listener/v3:listener_components.proto\n@envoy_api//envoy/config/listener/v3:listener.proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_github_cncf_xds//xds/type/matcher/v3:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@envoy_api//envoy/config/accesslog/v3:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@envoy_api//envoy/config/listener/v3:pkg" -> "@com_github_cncf_xds//xds/core/v3:pkg"
  "@envoy_api//envoy/config/listener/v3:api_listener.proto\n@envoy_api//envoy/config/listener/v3:quic_config.proto\n@envoy_api//envoy/config/listener/v3:udp_listener_config.proto\n@envoy_api//envoy/config/listener/v3:listener_components.proto\n@envoy_api//envoy/config/listener/v3:listener.proto"
  "@envoy_api//envoy/config/cluster/v3:pkg"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@envoy_api//envoy/config/cluster/v3:outlier_detection.proto\n@envoy_api//envoy/config/cluster/v3:cluster.proto\n@envoy_api//envoy/config/cluster/v3:filter.proto\n@envoy_api//envoy/config/cluster/v3:circuit_breaker.proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@envoy_api//envoy/config/endpoint/v3:pkg"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@envoy_api//envoy/type/metadata/v3:pkg"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_github_cncf_xds//xds/core/v3:pkg"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/cluster/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/endpoint/v3:pkg"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@envoy_api//envoy/config/endpoint/v3:endpoint_components.proto\n@envoy_api//envoy/config/endpoint/v3:endpoint.proto\n@envoy_api//envoy/config/endpoint/v3:load_report.proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/endpoint/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/endpoint/v3:endpoint_components.proto\n@envoy_api//envoy/config/endpoint/v3:endpoint.proto\n@envoy_api//envoy/config/endpoint/v3:load_report.proto"
  "@envoy_api//envoy/config/cluster/v3:outlier_detection.proto\n@envoy_api//envoy/config/cluster/v3:cluster.proto\n@envoy_api//envoy/config/cluster/v3:filter.proto\n@envoy_api//envoy/config/cluster/v3:circuit_breaker.proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@envoy_api//envoy/config/accesslog/v3:accesslog.proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@envoy_api//envoy/config/route/v3:pkg"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@envoy_api//envoy/data/accesslog/v3:pkg"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/accesslog/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/data/accesslog/v3:pkg"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@envoy_api//envoy/data/accesslog/v3:accesslog.proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/data/accesslog/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/data/accesslog/v3:accesslog.proto"
  "@envoy_api//envoy/config/route/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@envoy_api//envoy/config/route/v3:scoped_route.proto\n@envoy_api//envoy/config/route/v3:route.proto\n@envoy_api//envoy/config/route/v3:route_components.proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@envoy_api//envoy/type/metadata/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@envoy_api//envoy/type/tracing/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_github_cncf_xds//xds/type/matcher/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/route/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_github_cncf_xds//xds/type/matcher/v3:regex.proto\n@com_github_cncf_xds//xds/type/matcher/v3:string.proto\n@com_github_cncf_xds//xds/type/matcher/v3:ip.proto\n@com_github_cncf_xds//xds/type/matcher/v3:cel.proto\n@com_github_cncf_xds//xds/type/matcher/v3:http_inputs.proto\n@com_github_cncf_xds//xds/type/matcher/v3:matcher.proto\n@com_github_cncf_xds//xds/type/matcher/v3:range.proto\n@com_github_cncf_xds//xds/type/matcher/v3:domain.proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_github_cncf_xds//xds/type/v3:pkg"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@com_github_cncf_xds//xds/type/matcher/v3:pkg" -> "@com_github_cncf_xds//xds/core/v3:pkg"
  "@com_github_cncf_xds//xds/type/v3:pkg"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_github_cncf_xds//xds/type/v3:cel.proto\n@com_github_cncf_xds//xds/type/v3:typed_struct.proto\n@com_github_cncf_xds//xds/type/v3:range.proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@cel-spec//proto/cel/expr:syntax_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto"
  "@com_github_cncf_xds//xds/type/v3:pkg" -> "@cel-spec//proto/cel/expr:checked_proto"
  "@cel-spec//proto/cel/expr:checked_proto"
  "@cel-spec//proto/cel/expr:checked_proto" -> "@cel-spec//proto/cel/expr:checked.proto"
  "@cel-spec//proto/cel/expr:checked_proto" -> "@cel-spec//proto/cel/expr:syntax_proto"
  "@cel-spec//proto/cel/expr:checked_proto" -> "@bazel_tools//tools/proto:protoc"
  "@cel-spec//proto/cel/expr:checked_proto" -> "@com_google_protobuf//:struct_proto"
  "@cel-spec//proto/cel/expr:checked_proto" -> "@com_google_protobuf//:empty_proto"
  "@cel-spec//proto/cel/expr:checked.proto"
  "@cel-spec//proto/cel/expr:syntax_proto"
  "@cel-spec//proto/cel/expr:syntax_proto" -> "@cel-spec//proto/cel/expr:syntax.proto"
  "@cel-spec//proto/cel/expr:syntax_proto" -> "@bazel_tools//tools/proto:protoc"
  "@cel-spec//proto/cel/expr:syntax_proto" -> "@com_google_protobuf//:timestamp_proto"
  "@cel-spec//proto/cel/expr:syntax_proto" -> "@com_google_protobuf//:struct_proto"
  "@cel-spec//proto/cel/expr:syntax_proto" -> "@com_google_protobuf//:duration_proto"
  "@cel-spec//proto/cel/expr:syntax.proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto" -> "@com_google_googleapis//google/api/expr/v1alpha1:checked.proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto" -> "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto" -> "@com_google_protobuf//:struct_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:checked_proto" -> "@com_google_protobuf//:empty_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto" -> "@com_google_googleapis//google/api/expr/v1alpha1:syntax.proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto" -> "@com_google_protobuf//:timestamp_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto" -> "@com_google_protobuf//:struct_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:syntax_proto" -> "@com_google_protobuf//:duration_proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:syntax.proto"
  "@com_google_googleapis//google/api/expr/v1alpha1:checked.proto"
  "@com_github_cncf_xds//xds/type/v3:cel.proto\n@com_github_cncf_xds//xds/type/v3:typed_struct.proto\n@com_github_cncf_xds//xds/type/v3:range.proto"
  "@com_github_cncf_xds//xds/type/matcher/v3:regex.proto\n@com_github_cncf_xds//xds/type/matcher/v3:string.proto\n@com_github_cncf_xds//xds/type/matcher/v3:ip.proto\n@com_github_cncf_xds//xds/type/matcher/v3:cel.proto\n@com_github_cncf_xds//xds/type/matcher/v3:http_inputs.proto\n@com_github_cncf_xds//xds/type/matcher/v3:matcher.proto\n@com_github_cncf_xds//xds/type/matcher/v3:range.proto\n@com_github_cncf_xds//xds/type/matcher/v3:domain.proto"
  "@envoy_api//envoy/type/tracing/v3:pkg"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@envoy_api//envoy/type/tracing/v3:custom_tag.proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/type/tracing/v3:pkg" -> "@envoy_api//envoy/type/metadata/v3:pkg"
  "@envoy_api//envoy/type/tracing/v3:custom_tag.proto"
  "@envoy_api//envoy/type/metadata/v3:pkg"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@envoy_api//envoy/type/metadata/v3:metadata.proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/type/metadata/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/type/metadata/v3:metadata.proto"
  "@envoy_api//envoy/config/route/v3:scoped_route.proto\n@envoy_api//envoy/config/route/v3:route.proto\n@envoy_api//envoy/config/route/v3:route_components.proto"
  "@envoy_api//envoy/config/accesslog/v3:accesslog.proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@envoy_api//envoy/extensions/transport_sockets/tls/v3:tls.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:secret.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:cert.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:tls_spiffe_validator_config.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:common.proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/core/v3:pkg"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@envoy_api//envoy/config/core/v3:backoff.proto\n@envoy_api//envoy/config/core/v3:event_service_config.proto\n@envoy_api//envoy/config/core/v3:health_check.proto\n@envoy_api//envoy/config/core/v3:protocol.proto\n@envoy_api//envoy/config/core/v3:resolver.proto\n@envoy_api//envoy/config/core/v3:extension.proto\n@envoy_api//envoy/config/core/v3:udp_socket_config.proto\n@envoy_api//envoy/config/core/v3:substitution_format_string.proto\n@envoy_api//envoy/config/core/v3:http_uri.proto\n...and 8 more items"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_github_cncf_xds//xds/core/v3:pkg"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/config/core/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/config/core/v3:backoff.proto\n@envoy_api//envoy/config/core/v3:event_service_config.proto\n@envoy_api//envoy/config/core/v3:health_check.proto\n@envoy_api//envoy/config/core/v3:protocol.proto\n@envoy_api//envoy/config/core/v3:resolver.proto\n@envoy_api//envoy/config/core/v3:extension.proto\n@envoy_api//envoy/config/core/v3:udp_socket_config.proto\n@envoy_api//envoy/config/core/v3:substitution_format_string.proto\n@envoy_api//envoy/config/core/v3:http_uri.proto\n...and 8 more items"
  "@envoy_api//envoy/type/matcher/v3:pkg"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@envoy_api//envoy/type/matcher/v3:string.proto\n@envoy_api//envoy/type/matcher/v3:status_code_input.proto\n@envoy_api//envoy/type/matcher/v3:value.proto\n@envoy_api//envoy/type/matcher/v3:number.proto\n@envoy_api//envoy/type/matcher/v3:regex.proto\n@envoy_api//envoy/type/matcher/v3:path.proto\n@envoy_api//envoy/type/matcher/v3:metadata.proto\n@envoy_api//envoy/type/matcher/v3:filter_state.proto\n@envoy_api//envoy/type/matcher/v3:http_inputs.proto\n...and 2 more items"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_github_cncf_xds//xds/core/v3:pkg"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/type/matcher/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_github_cncf_xds//xds/core/v3:authority.proto\n@com_github_cncf_xds//xds/core/v3:extension.proto\n@com_github_cncf_xds//xds/core/v3:context_params.proto\n@com_github_cncf_xds//xds/core/v3:resource_locator.proto\n@com_github_cncf_xds//xds/core/v3:resource.proto\n@com_github_cncf_xds//xds/core/v3:cidr.proto\n@com_github_cncf_xds//xds/core/v3:resource_name.proto\n@com_github_cncf_xds//xds/core/v3:collection_entry.proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@com_github_cncf_xds//xds/core/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//xds/core/v3:authority.proto\n@com_github_cncf_xds//xds/core/v3:extension.proto\n@com_github_cncf_xds//xds/core/v3:context_params.proto\n@com_github_cncf_xds//xds/core/v3:resource_locator.proto\n@com_github_cncf_xds//xds/core/v3:resource.proto\n@com_github_cncf_xds//xds/core/v3:cidr.proto\n@com_github_cncf_xds//xds/core/v3:resource_name.proto\n@com_github_cncf_xds//xds/core/v3:collection_entry.proto"
  "@envoy_api//envoy/annotations:pkg"
  "@envoy_api//envoy/annotations:pkg" -> "@envoy_api//envoy/annotations:resource.proto\n@envoy_api//envoy/annotations:deprecation.proto"
  "@envoy_api//envoy/annotations:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/annotations:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@envoy_api//envoy/annotations:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/annotations:resource.proto\n@envoy_api//envoy/annotations:deprecation.proto"
  "@envoy_api//envoy/type/matcher/v3:string.proto\n@envoy_api//envoy/type/matcher/v3:status_code_input.proto\n@envoy_api//envoy/type/matcher/v3:value.proto\n@envoy_api//envoy/type/matcher/v3:number.proto\n@envoy_api//envoy/type/matcher/v3:regex.proto\n@envoy_api//envoy/type/matcher/v3:path.proto\n@envoy_api//envoy/type/matcher/v3:metadata.proto\n@envoy_api//envoy/type/matcher/v3:filter_state.proto\n@envoy_api//envoy/type/matcher/v3:http_inputs.proto\n...and 2 more items"
  "@envoy_api//envoy/extensions/transport_sockets/tls/v3:tls.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:secret.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:cert.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:tls_spiffe_validator_config.proto\n@envoy_api//envoy/extensions/transport_sockets/tls/v3:common.proto"
  "@envoy_api//envoy/type/v3:pkg"
  "@envoy_api//envoy/type/v3:pkg" -> "@envoy_api//envoy/type/v3:range.proto\n@envoy_api//envoy/type/v3:hash_policy.proto\n@envoy_api//envoy/type/v3:ratelimit_unit.proto\n@envoy_api//envoy/type/v3:http_status.proto\n@envoy_api//envoy/type/v3:percent.proto\n@envoy_api//envoy/type/v3:semantic_version.proto\n@envoy_api//envoy/type/v3:ratelimit_strategy.proto\n@envoy_api//envoy/type/v3:http.proto\n@envoy_api//envoy/type/v3:token_bucket.proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_googleapis//google/api:annotations_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_googleapis//google/api:httpbody_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_github_cncf_xds//udpa/annotations:pkg"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@envoy_api//envoy/type/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_github_cncf_xds//xds/annotations/v3:versioning.proto\n@com_github_cncf_xds//xds/annotations/v3:status.proto\n@com_github_cncf_xds//xds/annotations/v3:security.proto\n@com_github_cncf_xds//xds/annotations/v3:sensitive.proto\n@com_github_cncf_xds//xds/annotations/v3:migrate.proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//xds/annotations/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@com_github_cncf_xds//xds/annotations/v3:versioning.proto\n@com_github_cncf_xds//xds/annotations/v3:status.proto\n@com_github_cncf_xds//xds/annotations/v3:security.proto\n@com_github_cncf_xds//xds/annotations/v3:sensitive.proto\n@com_github_cncf_xds//xds/annotations/v3:migrate.proto"
  "@envoy_api//envoy/type/v3:range.proto\n@envoy_api//envoy/type/v3:hash_policy.proto\n@envoy_api//envoy/type/v3:ratelimit_unit.proto\n@envoy_api//envoy/type/v3:http_status.proto\n@envoy_api//envoy/type/v3:percent.proto\n@envoy_api//envoy/type/v3:semantic_version.proto\n@envoy_api//envoy/type/v3:ratelimit_strategy.proto\n@envoy_api//envoy/type/v3:http.proto\n@envoy_api//envoy/type/v3:token_bucket.proto"
  "@com_github_cncf_xds//udpa/annotations:pkg"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_github_cncf_xds//udpa/annotations:migrate.proto\n@com_github_cncf_xds//udpa/annotations:sensitive.proto\n@com_github_cncf_xds//udpa/annotations:versioning.proto\n@com_github_cncf_xds//udpa/annotations:security.proto\n@com_github_cncf_xds//udpa/annotations:status.proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_protobuf//:empty_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//udpa/annotations:pkg" -> "@com_google_protobuf//:any_proto"
  "@com_github_cncf_xds//udpa/annotations:migrate.proto\n@com_github_cncf_xds//udpa/annotations:sensitive.proto\n@com_github_cncf_xds//udpa/annotations:versioning.proto\n@com_github_cncf_xds//udpa/annotations:security.proto\n@com_github_cncf_xds//udpa/annotations:status.proto"
  "@com_google_googleapis//google/api:httpbody_proto"
  "@com_google_googleapis//google/api:httpbody_proto" -> "@com_google_googleapis//google/api:httpbody.proto"
  "@com_google_googleapis//google/api:httpbody_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_googleapis//google/api:httpbody_proto" -> "@com_google_protobuf//:any_proto"
  "@com_google_googleapis//google/api:httpbody.proto"
  "@com_google_googleapis//google/api:annotations_proto"
  "@com_google_googleapis//google/api:annotations_proto" -> "@com_google_googleapis//google/api:annotations.proto"
  "@com_google_googleapis//google/api:annotations_proto" -> "@com_google_googleapis//google/api:http_proto"
  "@com_google_googleapis//google/api:annotations_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_googleapis//google/api:annotations_proto" -> "@com_google_protobuf//:descriptor_proto"
  "@com_google_googleapis//google/api:annotations.proto"
  "@envoy_api//envoy/config/bootstrap/v3:bootstrap.proto"
  "@envoy_api//envoy/admin/v3:tap.proto\n@envoy_api//envoy/admin/v3:init_dump.proto\n@envoy_api//envoy/admin/v3:metrics.proto\n@envoy_api//envoy/admin/v3:mutex_stats.proto\n@envoy_api//envoy/admin/v3:config_dump.proto\n@envoy_api//envoy/admin/v3:server_info.proto\n@envoy_api//envoy/admin/v3:listeners.proto\n@envoy_api//envoy/admin/v3:config_dump_shared.proto\n@envoy_api//envoy/admin/v3:clusters.proto\n@envoy_api//envoy/admin/v3:memory.proto\n@envoy_api//envoy/admin/v3:certs.proto"
  "@com_github_grpc_grpc//src/core:xds/grpc/xds_health_status.cc\n@com_github_grpc_grpc//src/core:xds/grpc/certificate_provider_store.cc\n@com_github_grpc_grpc//src/core:xds/grpc/file_watcher_certificate_provider_factory.h\n@com_github_grpc_grpc//src/core:xds/grpc/xds_route_config.cc\n@com_github_grpc_grpc//src/core:xds/grpc/xds_lb_policy_registry.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/xds/xds_credentials.cc\n...and 36 more items"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args" -> "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_channel_args.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_xds_channel_args" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:load_balancing/xds/xds_channel_args.h"
  "@com_github_grpc_grpc//src/core:load_balancing/xds/cds.cc"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:service_config/service_config_channel_arg_filter.cc"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:grpc_message_size_filter"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:service_config_channel_arg_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:service_config/service_config_channel_arg_filter.cc"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:server/server_call_tracer_filter.h\n@com_github_grpc_grpc//src/core:server/server_call_tracer_filter.cc"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:call_finalization"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:cancel_callback"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:server_call_tracer_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:server/server_call_tracer_filter.h\n@com_github_grpc_grpc//src/core:server/server_call_tracer_filter.cc"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//src/core:handshaker/http_connect/http_proxy_mapper.cc\n@com_github_grpc_grpc//src/core:handshaker/http_connect/http_proxy_mapper.h"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//src/core:proxy_mapper"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:http_proxy_mapper" -> "@com_github_grpc_grpc//:http_connect_handshaker"
  "@com_github_grpc_grpc//src/core:handshaker/http_connect/http_proxy_mapper.cc\n@com_github_grpc_grpc//src/core:handshaker/http_connect/http_proxy_mapper.h"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/tls/tls_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_certificate_match.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_certificate_provider.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_certificate_provider.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_credentials_options.cc\n...and 8 more items"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//third_party:libcrypto"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/functional:bind_front"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:tsi_ssl_session_cache"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:tsi_ssl_credentials"
  "@com_github_grpc_grpc//src/core:grpc_tls_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/tls/tls_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_certificate_match.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_certificate_provider.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_certificate_provider.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_credentials_options.cc\n...and 8 more items"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/oauth2/oauth2_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/oauth2/oauth2_credentials.cc"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_oauth2_credentials" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/oauth2/oauth2_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/oauth2/oauth2_credentials.cc"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/ssl/ssl_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl/ssl_security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl/ssl_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/ssl/ssl_credentials.cc"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:tsi_ssl_session_cache"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//src/core:grpc_ssl_credentials" -> "@com_github_grpc_grpc//:tsi_ssl_credentials"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/ssl/ssl_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl/ssl_security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl/ssl_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/ssl/ssl_credentials.cc"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/iam/iam_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/iam/iam_credentials.h"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_iam_credentials" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/iam/iam_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/iam/iam_credentials.h"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:lib/security/authorization/authorization_policy_provider.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/authorization_policy_provider_vtable.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/evaluate_args.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/grpc_server_authz_filter.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/authorization_engine.h\n...and 2 more items"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:endpoint_info_handshaker"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_authorization_base" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:lib/security/authorization/authorization_policy_provider.h\n@com_github_grpc_grpc//src/core:lib/security/authorization/authorization_policy_provider_vtable.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/evaluate_args.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/grpc_server_authz_filter.cc\n@com_github_grpc_grpc//src/core:lib/security/authorization/authorization_engine.h\n...and 2 more items"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker/endpoint_info/endpoint_info_handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/endpoint_info/endpoint_info_handshaker.cc"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker_factory"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:endpoint_info_handshaker" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:handshaker/endpoint_info/endpoint_info_handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/endpoint_info/endpoint_info_handshaker.cc"
  "@com_github_grpc_grpc//:http_connect_handshaker"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker/http_connect/http_connect_handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/http_connect/http_connect_handshaker.cc"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker_factory"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:http_connect_handshaker" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:handshaker/http_connect/http_connect_handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/http_connect/http_connect_handshaker.cc"
  "@com_github_grpc_grpc//:grpc_jwt_credentials"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_verifier.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_verifier.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/json_token.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/json_token.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_credentials.cc"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//third_party:libcrypto"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:tsi_ssl_types"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_jwt_credentials" -> "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//src/core:util/http_client/httpcli_ssl_credentials.h\n@com_github_grpc_grpc//src/core:util/http_client/httpcli_security_connector.cc"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:tsi_ssl_credentials"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:httpcli_ssl_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:tsi_ssl_credentials"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:tsi/ssl_transport_security_utils.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl_utils.h\n@com_github_grpc_grpc//src/core:tsi/ssl/key_logging/ssl_key_logging.h\n@com_github_grpc_grpc//src/core:tsi/ssl/key_logging/ssl_key_logging.cc\n@com_github_grpc_grpc//src/core:tsi/ssl_transport_security.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl_utils.cc\n...and 2 more items"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//:tsi_ssl_session_cache"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//third_party:libcrypto"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:tsi_ssl_types"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:grpc_crl_provider"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:tsi_ssl_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_crl_provider.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_crl_provider.h"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//src/core:directory_reader"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//third_party:libcrypto"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_crl_provider" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:directory_reader"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_github_grpc_grpc//src/core:lib/gprpp/directory_reader.h\n@com_github_grpc_grpc//src/core:lib/gprpp/posix/directory_reader.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/windows/directory_reader.cc"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:directory_reader" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/gprpp/directory_reader.h\n@com_github_grpc_grpc//src/core:lib/gprpp/posix/directory_reader.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/windows/directory_reader.cc"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_crl_provider.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/tls/grpc_tls_crl_provider.h"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/alpn/alpn.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/alpn/alpn.h"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_alpn" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/alpn/alpn.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/alpn/alpn.h"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//:cpp_impl_of"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_boringssl.cc\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_cache.cc\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_cache.h\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session.h\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_openssl.cc"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_google_absl//absl/memory:memory"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:tsi_ssl_session_cache" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_boringssl.cc\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_cache.cc\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_cache.h\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session.h\n@com_github_grpc_grpc//src/core:tsi/ssl/session_cache/ssl_session_openssl.cc"
  "@com_github_grpc_grpc//src/core:tsi/ssl_transport_security_utils.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl_utils.h\n@com_github_grpc_grpc//src/core:tsi/ssl/key_logging/ssl_key_logging.h\n@com_github_grpc_grpc//src/core:tsi/ssl/key_logging/ssl_key_logging.cc\n@com_github_grpc_grpc//src/core:tsi/ssl_transport_security.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/ssl_utils.cc\n...and 2 more items"
  "@com_github_grpc_grpc//src/core:util/http_client/httpcli_ssl_credentials.h\n@com_github_grpc_grpc//src/core:util/http_client/httpcli_security_connector.cc"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types" -> "@com_github_grpc_grpc//src/core:tsi/ssl_types.h"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types" -> "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//src/core:tsi_ssl_types" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:tsi/ssl_types.h"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_verifier.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_verifier.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/json_token.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/json_token.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/jwt/jwt_credentials.cc"
  "@com_github_grpc_grpc//:grpc_http_filters"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:ext/filters/http/client/http_client_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/http/message_compress/compression_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/http/server/http_server_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/http/server/http_server_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/http/http_filters_plugin.cc\n@com_github_grpc_grpc//src/core:ext/filters/http/message_compress/compression_filter.h\n...and 1 more items"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:compression"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:grpc_message_size_filter"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:latch"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:percent_encoding"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:status_conversion"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:race"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:prioritized_race"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:grpc_http_filters" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:ext/filters/http/client/http_client_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/http/message_compress/compression_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/http/server/http_server_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/http/server/http_server_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/http/http_filters_plugin.cc\n@com_github_grpc_grpc//src/core:ext/filters/http/message_compress/compression_filter.h\n...and 1 more items"
  "@com_github_grpc_grpc//:grpc_credentials_util"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/tls/tls_utils.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/load_system_roots.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/load_system_roots_supported.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/load_system_roots_supported.h\n@com_github_grpc_grpc//src/core:lib/security/util/json_util.cc\n...and 4 more items"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_credentials_util" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/tls/tls_utils.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/load_system_roots.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/load_system_roots_supported.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/load_system_roots_supported.h\n@com_github_grpc_grpc//src/core:lib/security/util/json_util.cc\n...and 4 more items"
  "@com_github_grpc_grpc//:grpc_common"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//:grpc_no_rls"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//:census"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//:grpc_resolver_dns_ares"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_client_authority_filter"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_message_size_filter"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_resolver_binder"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//:grpc_resolver_fake"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_transport_inproc"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin"
  "@com_github_grpc_grpc//:grpc_common" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_common" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_common" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:load_balancing/rls/rls.h\n@com_github_grpc_grpc//src/core:load_balancing/rls/rls.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:grpc_fake_credentials"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:uuid_v4"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:rls_upb"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_rls" -> "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//:rls_upb"
  "@com_github_grpc_grpc//:rls_upb" -> "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_proto_descriptor"
  "@com_github_grpc_grpc//:rls_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:rls_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:rls_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:rls_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:rls_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_proto_descriptor"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_proto_descriptor" -> "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls.proto"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls_proto_descriptor" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_grpc_grpc//src/proto/grpc/lookup/v1:rls.proto"
  "@com_github_grpc_grpc//src/core:uuid_v4"
  "@com_github_grpc_grpc//src/core:uuid_v4" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:uuid_v4" -> "@com_github_grpc_grpc//src/core:lib/gprpp/uuid_v4.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/uuid_v4.h"
  "@com_github_grpc_grpc//src/core:uuid_v4" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:uuid_v4" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:uuid_v4" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:uuid_v4" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:uuid_v4" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/uuid_v4.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/uuid_v4.h"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/fake/fake_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/fake/fake_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/fake/fake_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/fake/fake_security_connector.h"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb.h"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:tsi_fake_credentials"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_fake_credentials" -> "@com_github_grpc_grpc//:resource_quota_api"
  "@com_github_grpc_grpc//:tsi_fake_credentials"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_github_grpc_grpc//src/core:tsi/fake_transport_security.h\n@com_github_grpc_grpc//src/core:tsi/fake_transport_security.cc"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:tsi_fake_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:tsi/fake_transport_security.h\n@com_github_grpc_grpc//src/core:tsi/fake_transport_security.cc"
  "@com_github_grpc_grpc//src/core:load_balancing/rls/rls.h\n@com_github_grpc_grpc//src/core:load_balancing/rls/rls.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//src/core:resolver/dns/dns_resolver_plugin.h\n@com_github_grpc_grpc//src/core:resolver/dns/dns_resolver_plugin.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//:grpc_resolver_dns_ares"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_plugin" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:resolver/dns/event_engine/event_engine_client_channel_resolver.h\n@com_github_grpc_grpc//src/core:resolver/dns/event_engine/event_engine_client_channel_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:polling_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:service_config_helper"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_event_engine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:resolver/dns/event_engine/event_engine_client_channel_resolver.h\n@com_github_grpc_grpc//src/core:resolver/dns/event_engine/event_engine_client_channel_resolver.cc"
  "@com_github_grpc_grpc//src/core:resolver/dns/dns_resolver_plugin.h\n@com_github_grpc_grpc//src/core:resolver/dns/dns_resolver_plugin.cc"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_service_config_parser.h\n@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_service_config_parser.cc\n@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_filter.cc"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:sleep"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_fault_injection_filter" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_service_config_parser.h\n@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_service_config_parser.cc\n@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/fault_injection/fault_injection_filter.cc"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/server/chttp2_server.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/server/chttp2_server.h"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:channel_args_endpoint_config"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:connection_quota"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:event_engine_extensions"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:event_engine_query_extensions"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:grpc_insecure_credentials"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:chttp2_legacy_frame"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:grpc_transport_chttp2"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:server"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_server" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/server/chttp2_server.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/server/chttp2_server.h"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:ext/transport/inproc/legacy_inproc_transport.h\n@com_github_grpc_grpc//src/core:ext/transport/inproc/inproc_transport.h\n@com_github_grpc_grpc//src/core:ext/transport/inproc/legacy_inproc_transport.cc\n@com_github_grpc_grpc//src/core:ext/transport/inproc/inproc_transport.cc"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:server"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_transport_inproc" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:server"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:call_combiner"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:cpp_impl_of"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:server/server.cc\n@com_github_grpc_grpc//src/core:server/server.h"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:legacy_channel"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:interception_chain"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:server" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:server" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:seq"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:random_early_detection"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:try_join"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:cancel_callback"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//:server" -> "@com_github_grpc_grpc//src/core:server_interface"
  "@com_github_grpc_grpc//:server" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:try_join"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//src/core:lib/promise/try_join.h"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//src/core:join_state"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//src/core:try_join" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:try_join" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:try_join" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:server/server.cc\n@com_github_grpc_grpc//src/core:server/server.h"
  "@com_github_grpc_grpc//src/core:ext/transport/inproc/legacy_inproc_transport.h\n@com_github_grpc_grpc//src/core:ext/transport/inproc/inproc_transport.h\n@com_github_grpc_grpc//src/core:ext/transport/inproc/legacy_inproc_transport.cc\n@com_github_grpc_grpc//src/core:ext/transport/inproc/inproc_transport.cc"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/client/chttp2_connector.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/client/chttp2_connector.cc"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:channel_args_endpoint_config"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:grpc_insecure_credentials"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:subchannel_connector"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:tcp_connect_handshaker"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:grpc_transport_chttp2"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_transport_chttp2_client_connector" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:grpc_transport_chttp2"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_goaway.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/chttp2_transport.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_data.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_rst_stream.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_window_update.cc\n...and 15 more items"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:chttp2_context_list_entry"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:chttp2_legacy_frame"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:chttp2_varint"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:hpack_encoder"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:hpack_parser"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:hpack_parser_table"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:iomgr_buffer_list"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//:tcp_tracer"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/strings:cord"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/random:distributions"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/random:bit_gen_ref"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:write_size_policy"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:bdp_estimator"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:status_conversion"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:random_early_detection"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:ping_rate_policy"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:bitset"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:chttp2_flow_control"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:event_engine_extensions"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:event_engine_query_extensions"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:http2_errors"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:http2_settings"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:ping_callbacks"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:metadata_info"
  "@com_github_grpc_grpc//:grpc_transport_chttp2" -> "@com_github_grpc_grpc//src/core:ping_abuse_policy"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_abuse_policy.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_abuse_policy.h"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ping_abuse_policy" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_abuse_policy.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_abuse_policy.h"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/max_concurrent_streams_policy.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/max_concurrent_streams_policy.cc"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:max_concurrent_streams_policy" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/max_concurrent_streams_policy.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/max_concurrent_streams_policy.cc"
  "@com_github_grpc_grpc//src/core:ping_callbacks"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_callbacks.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_callbacks.h"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/random:distributions"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/random:bit_gen_ref"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:ping_callbacks" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_callbacks.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_callbacks.h"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/flow_control.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/flow_control.cc"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//src/core:bdp_estimator"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//src/core:http2_settings"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:chttp2_flow_control" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:http2_settings"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/http2_settings.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/http2_settings.h"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_github_grpc_grpc//src/core:http2_errors"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_github_grpc_grpc//:chttp2_frame"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:http2_settings" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:chttp2_frame"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame.cc"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:chttp2_frame" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame.cc"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/http2_settings.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/http2_settings.h"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/flow_control.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/flow_control.cc"
  "@com_github_grpc_grpc//src/core:ping_rate_policy"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_rate_policy.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_rate_policy.h"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:ping_rate_policy" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_rate_policy.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/ping_rate_policy.h"
  "@com_github_grpc_grpc//src/core:bdp_estimator"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_github_grpc_grpc//src/core:lib/transport/bdp_estimator.cc\n@com_github_grpc_grpc//src/core:lib/transport/bdp_estimator.h"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:bdp_estimator" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/transport/bdp_estimator.cc\n@com_github_grpc_grpc//src/core:lib/transport/bdp_estimator.h"
  "@com_github_grpc_grpc//src/core:write_size_policy"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/write_size_policy.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/write_size_policy.cc"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:write_size_policy" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/write_size_policy.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/write_size_policy.cc"
  "@com_github_grpc_grpc//:httpcli"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:util/http_client/httpcli.h\n@com_github_grpc_grpc//src/core:util/http_client/format_request.h\n@com_github_grpc_grpc//src/core:util/http_client/parser.cc\n@com_github_grpc_grpc//src/core:util/http_client/parser.h\n@com_github_grpc_grpc//src/core:util/http_client/format_request.cc\n@com_github_grpc_grpc//src/core:util/http_client/httpcli.cc"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:resource_quota_api"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:tcp_connect_handshaker"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/functional:bind_front"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:httpcli" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:httpcli" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:httpcli" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:httpcli" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:util/http_client/httpcli.h\n@com_github_grpc_grpc//src/core:util/http_client/format_request.h\n@com_github_grpc_grpc//src/core:util/http_client/parser.cc\n@com_github_grpc_grpc//src/core:util/http_client/parser.h\n@com_github_grpc_grpc//src/core:util/http_client/format_request.cc\n@com_github_grpc_grpc//src/core:util/http_client/httpcli.cc"
  "@com_github_grpc_grpc//:hpack_parser"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser.cc"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:chttp2_legacy_frame"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:hpack_parse_result"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:hpack_parser_table"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:decode_huff"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:hpack_constants"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:metadata_info"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:parsed_metadata"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:random_early_detection"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/random:bit_gen_ref"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//:hpack_parser" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//:hpack_parser" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:hpack_parser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:random_early_detection"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@com_github_grpc_grpc//src/core:lib/backoff/random_early_detection.h\n@com_github_grpc_grpc//src/core:lib/backoff/random_early_detection.cc"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@com_google_absl//absl/random:distributions"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@com_google_absl//absl/random:bit_gen_ref"
  "@com_github_grpc_grpc//src/core:random_early_detection" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_google_absl//absl/random:bit_gen_ref"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl/random:bit_gen_ref.h"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl/random:random"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl/random/internal:distribution_caller"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl/random/internal:fast_uniform_bits"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl/base:fast_type_id"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/random:bit_gen_ref" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random:bit_gen_ref.h"
  "@com_github_grpc_grpc//src/core:lib/backoff/random_early_detection.h\n@com_github_grpc_grpc//src/core:lib/backoff/random_early_detection.cc"
  "@com_github_grpc_grpc//src/core:metadata_info"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//src/core:lib/transport/metadata_info.h\n@com_github_grpc_grpc//src/core:lib/transport/metadata_info.cc"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//src/core:hpack_constants"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:metadata_info" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/transport/metadata_info.h\n@com_github_grpc_grpc//src/core:lib/transport/metadata_info.cc"
  "@com_github_grpc_grpc//src/core:decode_huff"
  "@com_github_grpc_grpc//src/core:decode_huff" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/decode_huff.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/decode_huff.h"
  "@com_github_grpc_grpc//src/core:decode_huff" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:decode_huff" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:decode_huff" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:decode_huff" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:decode_huff" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/decode_huff.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/decode_huff.h"
  "@com_github_grpc_grpc//:hpack_parser_table"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser_table.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser_table.h"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//:hpack_parse_result"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//src/core:hpack_constants"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//src/core:parsed_metadata"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:hpack_parser_table" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser_table.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser_table.h"
  "@com_github_grpc_grpc//:hpack_parse_result"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parse_result.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parse_result.cc"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//src/core:hpack_constants"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:hpack_parse_result" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parse_result.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parse_result.cc"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_parser.cc"
  "@com_github_grpc_grpc//:chttp2_context_list_entry"
  "@com_github_grpc_grpc//:chttp2_context_list_entry" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:chttp2_context_list_entry" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:chttp2_context_list_entry" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/context_list_entry.h"
  "@com_github_grpc_grpc//:chttp2_context_list_entry" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:chttp2_context_list_entry" -> "@com_github_grpc_grpc//:tcp_tracer"
  "@com_github_grpc_grpc//:chttp2_context_list_entry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:chttp2_context_list_entry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/context_list_entry.h"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_goaway.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/chttp2_transport.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_data.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_rst_stream.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/frame_window_update.cc\n...and 15 more items"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker/tcp_connect/tcp_connect_handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/tcp_connect/tcp_connect_handshaker.cc"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:channel_args_endpoint_config"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker_factory"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:tcp_connect_handshaker" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:handshaker/tcp_connect/tcp_connect_handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/tcp_connect/tcp_connect_handshaker.cc"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/security_connector/insecure/insecure_security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/insecure/insecure_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/insecure/insecure_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/insecure/insecure_credentials.cc"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:tsi_local_credentials"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_insecure_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_github_grpc_grpc//src/core:tsi/local_transport_security.cc\n@com_github_grpc_grpc//src/core:tsi/local_transport_security.h"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:tsi_local_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:tsi/local_transport_security.cc\n@com_github_grpc_grpc//src/core:tsi/local_transport_security.h"
  "@com_github_grpc_grpc//src/core:lib/security/security_connector/insecure/insecure_security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/insecure/insecure_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/insecure/insecure_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/insecure/insecure_credentials.cc"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/client/chttp2_connector.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/client/chttp2_connector.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//src/core:resolver/sockaddr/sockaddr_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_sockaddr" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:resolver/sockaddr/sockaddr_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//src/core:resolver/dns/native/dns_resolver.h\n@com_github_grpc_grpc//src/core:resolver/dns/native/dns_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//src/core:polling_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_google_absl//absl/functional:bind_front"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_dns_native" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_google_absl//absl/functional:bind_front"
  "@com_google_absl//absl/functional:bind_front" -> "@com_google_absl//absl/functional:bind_front.h\n@com_google_absl//absl/functional:internal/front_binder.h"
  "@com_google_absl//absl/functional:bind_front" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/functional:bind_front" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/functional:bind_front" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/functional:bind_front" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/functional:bind_front" -> "@com_google_absl//absl/container:compressed_tuple"
  "@com_google_absl//absl/functional:bind_front" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/functional:bind_front" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/functional:bind_front" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/functional:bind_front.h\n@com_google_absl//absl/functional:internal/front_binder.h"
  "@com_github_grpc_grpc//src/core:resolver/dns/native/dns_resolver.h\n@com_github_grpc_grpc//src/core:resolver/dns/native/dns_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//src/core:resolver/binder/binder_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_resolver_binder" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:resolver/binder/binder_resolver.cc"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:ext/filters/message_size/message_size_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/message_size/message_size_filter.h"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:latch"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:race"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_message_size_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:ext/filters/message_size/message_size_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/message_size/message_size_filter.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:load_balancing/weighted_round_robin/weighted_round_robin.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:lb_endpoint_list"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:static_stride_scheduler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:oob_backend_metric"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_round_robin" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:oob_backend_metric"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:load_balancing/oob_backend_metric.h\n@com_github_grpc_grpc//src/core:load_balancing/oob_backend_metric_internal.h\n@com_github_grpc_grpc//src/core:load_balancing/oob_backend_metric.cc"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:protobuf_duration_upb"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:xds_orca_service_upb"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//:xds_orca_upb"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:backend_metric_parser"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:oob_backend_metric" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//:xds_orca_service_upb"
  "@com_github_grpc_grpc//:xds_orca_service_upb" -> "@com_github_cncf_xds//xds/service/orca/v3:pkg"
  "@com_github_grpc_grpc//:xds_orca_service_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:xds_orca_service_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:xds_orca_service_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:xds_orca_service_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:xds_orca_service_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_github_cncf_xds//xds/service/orca/v3:orca.proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_github_cncf_xds//xds/data/orca/v3:pkg"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//xds/service/orca/v3:orca.proto"
  "@com_github_grpc_grpc//src/core:load_balancing/oob_backend_metric.h\n@com_github_grpc_grpc//src/core:load_balancing/oob_backend_metric_internal.h\n@com_github_grpc_grpc//src/core:load_balancing/oob_backend_metric.cc"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_github_grpc_grpc//src/core:load_balancing/weighted_round_robin/static_stride_scheduler.h\n@com_github_grpc_grpc//src/core:load_balancing/weighted_round_robin/static_stride_scheduler.cc"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:static_stride_scheduler" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:load_balancing/weighted_round_robin/static_stride_scheduler.h\n@com_github_grpc_grpc//src/core:load_balancing/weighted_round_robin/static_stride_scheduler.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:load_balancing/weighted_target/weighted_target.h\n@com_github_grpc_grpc//src/core:load_balancing/weighted_target/weighted_target.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_weighted_target" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:load_balancing/weighted_target/weighted_target.h\n@com_github_grpc_grpc//src/core:load_balancing/weighted_target/weighted_target.cc"
  "@com_github_grpc_grpc//src/core:load_balancing/weighted_round_robin/weighted_round_robin.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//src/core:load_balancing/round_robin/round_robin.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//src/core:lb_endpoint_list"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_round_robin" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:load_balancing/endpoint_list.cc\n@com_github_grpc_grpc//src/core:load_balancing/endpoint_list.h"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:lb_endpoint_list" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:load_balancing/endpoint_list.cc\n@com_github_grpc_grpc//src/core:load_balancing/endpoint_list.h"
  "@com_github_grpc_grpc//src/core:load_balancing/round_robin/round_robin.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:load_balancing/priority/priority.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_priority" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//src/core:load_balancing/address_filtering.h\n@com_github_grpc_grpc//src/core:load_balancing/address_filtering.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_address_filtering" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:load_balancing/address_filtering.h\n@com_github_grpc_grpc//src/core:load_balancing/address_filtering.cc"
  "@com_github_grpc_grpc//src/core:load_balancing/priority/priority.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:load_balancing/pick_first/pick_first.cc\n@com_github_grpc_grpc//src/core:load_balancing/pick_first/pick_first.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:health_check_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_google_absl//absl/algorithm:container"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_pick_first" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:load_balancing/pick_first/pick_first.cc\n@com_github_grpc_grpc//src/core:load_balancing/pick_first/pick_first.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:load_balancing/outlier_detection/outlier_detection.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:health_check_client"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_outlier_detection" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:health_check_client"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:load_balancing/health_check_client.h\n@com_github_grpc_grpc//src/core:load_balancing/health_check_client.cc\n@com_github_grpc_grpc//src/core:load_balancing/health_check_client_internal.h"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:grpc_health_upb"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:health_check_client" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_health_upb"
  "@com_github_grpc_grpc//:grpc_health_upb" -> "@com_github_grpc_grpc//src/proto/grpc/health/v1:health_proto_descriptor"
  "@com_github_grpc_grpc//:grpc_health_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_health_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:grpc_health_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:grpc_health_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:grpc_health_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//src/proto/grpc/health/v1:health_proto_descriptor"
  "@com_github_grpc_grpc//src/proto/grpc/health/v1:health_proto_descriptor" -> "@com_github_grpc_grpc//src/proto/grpc/health/v1:health.proto"
  "@com_github_grpc_grpc//src/proto/grpc/health/v1:health_proto_descriptor" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_grpc_grpc//src/proto/grpc/health/v1:health.proto"
  "@com_github_grpc_grpc//src/core:load_balancing/health_check_client.h\n@com_github_grpc_grpc//src/core:load_balancing/health_check_client.cc\n@com_github_grpc_grpc//src/core:load_balancing/health_check_client_internal.h"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//src/core:load_balancing/outlier_detection/outlier_detection.h"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_outlier_detection_header" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:load_balancing/outlier_detection/outlier_detection.h"
  "@com_github_grpc_grpc//src/core:load_balancing/outlier_detection/outlier_detection.cc"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:load_balancing/grpclb/load_balancer_api.h\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/client_load_reporting_filter.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_client_stats.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/load_balancer_api.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_client_stats.h\n...and 1 more items"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb.h"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_lb_upb"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:protobuf_duration_upb"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:protobuf_timestamp_upb"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:grpc_resolver_fake"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:grpc_lb_policy_grpclb" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:grpc_resolver_fake"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//src/core:resolver/fake/fake_resolver.h\n@com_github_grpc_grpc//src/core:resolver/fake/fake_resolver.cc"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//src/core:notification"
  "@com_github_grpc_grpc//:grpc_resolver_fake" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:resolver/fake/fake_resolver.h\n@com_github_grpc_grpc//src/core:resolver/fake/fake_resolver.cc"
  "@com_github_grpc_grpc//:protobuf_timestamp_upb"
  "@com_github_grpc_grpc//:protobuf_timestamp_upb" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_grpc_grpc//:protobuf_timestamp_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:protobuf_timestamp_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:protobuf_timestamp_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:protobuf_timestamp_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:protobuf_timestamp_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:protobuf_duration_upb"
  "@com_github_grpc_grpc//:protobuf_duration_upb" -> "@com_google_protobuf//:duration_proto"
  "@com_github_grpc_grpc//:protobuf_duration_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:protobuf_duration_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:protobuf_duration_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:protobuf_duration_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:protobuf_duration_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:grpc_lb_upb"
  "@com_github_grpc_grpc//:grpc_lb_upb" -> "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer_proto_descriptor"
  "@com_github_grpc_grpc//:grpc_lb_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:grpc_lb_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:grpc_lb_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_lb_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:grpc_lb_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer_proto_descriptor"
  "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer_proto_descriptor" -> "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer.proto"
  "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer_proto_descriptor" -> "@com_google_protobuf//:duration_proto"
  "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer_proto_descriptor" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer_proto_descriptor" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_grpc_grpc//src/proto/grpc/lb/v1:load_balancer.proto"
  "@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb.h"
  "@com_github_grpc_grpc//src/core:load_balancing/grpclb/load_balancer_api.h\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/client_load_reporting_filter.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_client_stats.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/load_balancer_api.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_client_stats.h\n...and 1 more items"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//src/core:ext/filters/http/client_authority_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/http/client_authority_filter.cc"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_client_authority_filter" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ext/filters/http/client_authority_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/http/client_authority_filter.cc"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_wrapper.h\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/dns_resolver_ares.h\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_wrapper_posix.cc\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_ev_driver.h\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_wrapper_windows.cc\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc\n...and 3 more items"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:polling_resolver"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:service_config_helper"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//third_party/address_sorting:address_sorting"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//third_party:cares"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:grpc_resolver_dns_ares" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:service_config_helper"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//src/core:resolver/dns/event_engine/service_config_helper.h\n@com_github_grpc_grpc//src/core:resolver/dns/event_engine/service_config_helper.cc"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:service_config_helper" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:resolver/dns/event_engine/service_config_helper.h\n@com_github_grpc_grpc//src/core:resolver/dns/event_engine/service_config_helper.cc"
  "@com_github_grpc_grpc//src/core:polling_resolver"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//src/core:resolver/polling_resolver.cc\n@com_github_grpc_grpc//src/core:resolver/polling_resolver.h"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:polling_resolver" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:resolver/polling_resolver.cc\n@com_github_grpc_grpc//src/core:resolver/polling_resolver.h"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_balancer_addresses.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_balancer_addresses.h"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_grpclb_balancer_addresses" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_balancer_addresses.cc\n@com_github_grpc_grpc//src/core:load_balancing/grpclb/grpclb_balancer_addresses.h"
  "@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_wrapper.h\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/dns_resolver_ares.h\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_wrapper_posix.cc\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_ev_driver.h\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_wrapper_windows.cc\n@com_github_grpc_grpc//src/core:resolver/dns/c_ares/grpc_ares_ev_driver_windows.cc\n...and 3 more items"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:ext/filters/backend_metrics/backend_metric_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/backend_metrics/backend_metric_filter.cc"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:xds_orca_upb"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:xds_orca_upb"
  "@com_github_grpc_grpc//:xds_orca_upb" -> "@com_github_cncf_xds//xds/data/orca/v3:pkg"
  "@com_github_grpc_grpc//:xds_orca_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:xds_orca_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:xds_orca_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:xds_orca_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:xds_orca_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider" -> "@com_github_grpc_grpc//src/core:ext/filters/backend_metrics/backend_metric_provider.h"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_provider" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ext/filters/backend_metrics/backend_metric_provider.h"
  "@com_github_grpc_grpc//src/core:ext/filters/backend_metrics/backend_metric_filter.h\n@com_github_grpc_grpc//src/core:ext/filters/backend_metrics/backend_metric_filter.cc"
  "@com_github_grpc_grpc//:census"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:include/grpc/census.h\n@com_github_grpc_grpc//src/core:ext/filters/census/grpc_context.cc"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:census" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:census" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:census" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:include/grpc/census.h\n@com_github_grpc_grpc//src/core:ext/filters/census/grpc_context.cc"
  "@com_github_grpc_grpc//:grpc_no_rls"
  "@com_github_grpc_grpc//:grpc_no_rls" -> "@com_github_grpc_grpc//:grpc_no_rls_flag"
  [label="@@com_github_grpc_grpc//:grpc_no_rls_flag"];
  "@com_github_grpc_grpc//:grpc_no_rls" -> "@com_github_grpc_grpc//:grpc_no_rls_2"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_no_rls_2"
  "@com_github_grpc_grpc//:grpc_no_rls_2" -> "@com_github_grpc_grpc//:android"
  [label="@@com_github_grpc_grpc//:android"];
  "@com_github_grpc_grpc//:grpc_no_rls_2" -> "@com_github_grpc_grpc//:ios"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_no_rls_flag"
  "@com_github_grpc_grpc//:grpc_no_rls_flag" -> "@com_github_grpc_grpc//:disable_grpc_rls"
  "@com_github_grpc_grpc//:disable_grpc_rls"
  "@com_github_grpc_grpc//:grpc_alts_credentials"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:lib/security/security_connector/alts/alts_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/alts/alts_security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/alts_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/alts_credentials.h"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:alts_util"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:tsi_alts_credentials"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc_alts_credentials" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:tsi_alts_credentials"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_tsi_utils.h\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_tsi_handshaker.h\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_handshaker_client.cc\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_tsi_utils.cc\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_shared_resource.cc\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_handshaker_client.h\n...and 3 more items"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:alts_upb"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:alts_util"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:tsi_alts_frame_protector"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:tsi_alts_credentials" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//src/core:tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc\n@com_github_grpc_grpc//src/core:tsi/alts/crypt/gsec.cc\n@com_github_grpc_grpc//src/core:tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc\n@com_github_grpc_grpc//src/core:tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h\n@com_github_grpc_grpc//src/core:tsi/alts/crypt/gsec.h\n...and 21 more items"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//third_party:libcrypto"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:tsi_alts_frame_protector" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//third_party:libssl"
  "@com_github_grpc_grpc//third_party:libssl" -> "@openssl//:ssl"
  "@openssl//:ssl"
  "@openssl//:ssl" -> "@openssl//:openssl"
  "@com_github_grpc_grpc//third_party:libcrypto"
  "@com_github_grpc_grpc//third_party:libcrypto" -> "@openssl//:crypto"
  "@openssl//:crypto"
  "@openssl//:crypto" -> "@openssl//:openssl"
  "@openssl//:openssl"
  "@openssl//:openssl" -> "@openssl//:clang\n@openssl//:msvc"
  "@openssl//:openssl" -> "@openssl//:openssl_msvc"
  [label="@@openssl//:msvc"];
  "@openssl//:openssl" -> "@openssl//:openssl_default"
  [label="@@openssl//:clang\n//conditions:default"];
  "@openssl//:openssl_default"
  "@openssl//:openssl_default" -> "@rules_perl//:current_toolchain"
  "@openssl//:openssl_default" -> "@brotli//:brotlicommon"
  "@openssl//:openssl_default" -> "@brotli//:brotlidec"
  "@openssl//:openssl_default" -> "@brotli//:brotlienc"
  "@openssl//:openssl_default" -> "@zlib//:z"
  "@openssl//:openssl_default" -> "@platforms//cpu:aarch64"
  "@openssl//:openssl_default" -> "@zstd//:zstd"
  "@openssl//:openssl_default" -> "@openssl//:all_srcs"
  "@openssl//:openssl_default" -> "@platforms//os:android"
  "@openssl//:openssl_default" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@openssl//:openssl_default" -> "@platforms//os:linux"
  "@openssl//:openssl_default" -> "@rules_foreign_cc//foreign_cc/private/framework:platform_info"
  "@openssl//:openssl_default" -> "@platforms//cpu:x86_64"
  "@rules_perl//:current_toolchain"
  "@rules_perl//:current_toolchain" -> "@rules_perl//perl:current_toolchain"
  "@rules_perl//perl:current_toolchain"
  "@openssl//:openssl_msvc"
  "@openssl//:openssl_msvc" -> "@openssl//:openssl_msvc_"
  "@openssl//:openssl_msvc" -> "@bazel_tools//tools/allowlists/function_transition_allowlist:function_transition_allowlist"
  "@bazel_tools//tools/allowlists/function_transition_allowlist:function_transition_allowlist"
  "@openssl//:openssl_msvc_"
  "@openssl//:openssl_msvc_" -> "@nasm//:nasm"
  "@openssl//:openssl_msvc_" -> "@perl//:perl"
  "@openssl//:openssl_msvc_" -> "@brotli//:brotlicommon"
  "@openssl//:openssl_msvc_" -> "@brotli//:brotlidec"
  "@openssl//:openssl_msvc_" -> "@brotli//:brotlienc"
  "@openssl//:openssl_msvc_" -> "@zlib//:zlib"
  "@openssl//:openssl_msvc_" -> "@zstd//:zstd"
  "@openssl//:openssl_msvc_" -> "@openssl//:all_srcs"
  "@openssl//:openssl_msvc_" -> "@platforms//cpu:aarch64"
  "@openssl//:openssl_msvc_" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@openssl//:openssl_msvc_" -> "@platforms//os:android"
  "@openssl//:openssl_msvc_" -> "@rules_foreign_cc//foreign_cc/private/framework:platform_info"
  "@openssl//:openssl_msvc_" -> "@platforms//cpu:x86_64"
  "@openssl//:openssl_msvc_" -> "@platforms//os:linux"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:freebsd"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:ios"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:linux"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:macos"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:windows"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:openbsd"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:none"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:watchos\n@platforms//os:tvos"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:qnx"
  "@rules_foreign_cc//foreign_cc/private/framework:platform_info" -> "@platforms//os:android"
  "@platforms//os:qnx"
  "@platforms//os:qnx" -> "@platforms//os:os"
  "@platforms//os:none"
  "@platforms//os:none" -> "@platforms//os:os"
  "@platforms//os:openbsd"
  "@platforms//os:openbsd" -> "@platforms//os:os"
  "@openssl//:all_srcs"
  "@openssl//:all_srcs" -> "@openssl//:providers/implementations/macs/blake2b_mac.c\n@openssl//:providers/common/include/prov/der_digests.h.in\n@openssl//:crypto/perlasm/README.md\n@openssl//:doc/internal/man3/ossl_cmp_print_log.pod\n@openssl//:test/testutil/fake_random.c\n@openssl//:test/certs/badalt10-key.pem\n@openssl//:crypto/x509/v3_pku.c\n@openssl//:crypto/provider_local.h\n@openssl//:crypto/ec/curve448/point_448.h\n@openssl//:test/recipes/30-test_evp_pkey_provided/EC.priv.pem\n...and 5248 more items"
  "@openssl//:providers/implementations/macs/blake2b_mac.c\n@openssl//:providers/common/include/prov/der_digests.h.in\n@openssl//:crypto/perlasm/README.md\n@openssl//:doc/internal/man3/ossl_cmp_print_log.pod\n@openssl//:test/testutil/fake_random.c\n@openssl//:test/certs/badalt10-key.pem\n@openssl//:crypto/x509/v3_pku.c\n@openssl//:crypto/provider_local.h\n@openssl//:crypto/ec/curve448/point_448.h\n@openssl//:test/recipes/30-test_evp_pkey_provided/EC.priv.pem\n...and 5248 more items"
  "@brotli//:brotlienc"
  "@brotli//:brotlienc" -> "@brotli//:msvc\n@brotli//:clang-cl"
  "@brotli//:brotlienc" -> "@brotli//:enc_sources"
  "@brotli//:brotlienc" -> "@brotli//:enc_headers"
  "@brotli//:brotlienc" -> "@brotli//:brotlicommon"
  "@brotli//:brotlienc" -> "@bazel_tools//tools/def_parser:def_parser"
  "@brotli//:brotlienc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@brotli//:enc_headers"
  "@brotli//:enc_headers" -> "@brotli//:c/enc/block_encoder_inc.h\n@brotli//:c/enc/find_match_length.h\n@brotli//:c/enc/dictionary_hash.h\n@brotli//:c/enc/utf8_util.h\n@brotli//:c/enc/compound_dictionary.h\n@brotli//:c/enc/hash_longest_match_quickly_inc.h\n@brotli//:c/enc/quality.h\n@brotli//:c/enc/entropy_encode.h\n@brotli//:c/enc/bit_cost_inc.h\n@brotli//:c/enc/histogram.h\n@brotli//:c/enc/backward_references.h\n@brotli//:c/enc/fast_log.h\n@brotli//:c/enc/backward_references_hq.h\n...and 31 more items"
  "@brotli//:c/enc/block_encoder_inc.h\n@brotli//:c/enc/find_match_length.h\n@brotli//:c/enc/dictionary_hash.h\n@brotli//:c/enc/utf8_util.h\n@brotli//:c/enc/compound_dictionary.h\n@brotli//:c/enc/hash_longest_match_quickly_inc.h\n@brotli//:c/enc/quality.h\n@brotli//:c/enc/entropy_encode.h\n@brotli//:c/enc/bit_cost_inc.h\n@brotli//:c/enc/histogram.h\n@brotli//:c/enc/backward_references.h\n@brotli//:c/enc/fast_log.h\n@brotli//:c/enc/backward_references_hq.h\n...and 31 more items"
  "@brotli//:enc_sources"
  "@brotli//:enc_sources" -> "@brotli//:c/enc/literal_cost.c\n@brotli//:c/enc/metablock.c\n@brotli//:c/enc/fast_log.c\n@brotli//:c/enc/memory.c\n@brotli//:c/enc/cluster.c\n@brotli//:c/enc/compress_fragment_two_pass.c\n@brotli//:c/enc/compress_fragment.c\n@brotli//:c/enc/compound_dictionary.c\n@brotli//:c/enc/command.c\n@brotli//:c/enc/block_splitter.c\n@brotli//:c/enc/encode.c\n@brotli//:c/enc/dictionary_hash.c\n@brotli//:c/enc/brotli_bit_stream.c\n@brotli//:c/enc/static_dict.c\n@brotli//:c/enc/histogram.c\n...and 6 more items"
  "@brotli//:c/enc/literal_cost.c\n@brotli//:c/enc/metablock.c\n@brotli//:c/enc/fast_log.c\n@brotli//:c/enc/memory.c\n@brotli//:c/enc/cluster.c\n@brotli//:c/enc/compress_fragment_two_pass.c\n@brotli//:c/enc/compress_fragment.c\n@brotli//:c/enc/compound_dictionary.c\n@brotli//:c/enc/command.c\n@brotli//:c/enc/block_splitter.c\n@brotli//:c/enc/encode.c\n@brotli//:c/enc/dictionary_hash.c\n@brotli//:c/enc/brotli_bit_stream.c\n@brotli//:c/enc/static_dict.c\n@brotli//:c/enc/histogram.c\n...and 6 more items"
  "@brotli//:brotlidec"
  "@brotli//:brotlidec" -> "@brotli//:msvc\n@brotli//:clang-cl"
  "@brotli//:brotlidec" -> "@brotli//:dec_sources"
  "@brotli//:brotlidec" -> "@brotli//:dec_headers"
  "@brotli//:brotlidec" -> "@brotli//:brotlicommon"
  "@brotli//:brotlidec" -> "@bazel_tools//tools/def_parser:def_parser"
  "@brotli//:brotlidec" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@brotli//:dec_headers"
  "@brotli//:dec_headers" -> "@brotli//:c/dec/bit_reader.h\n@brotli//:c/dec/state.h\n@brotli//:c/dec/huffman.h\n@brotli//:c/dec/prefix.h"
  "@brotli//:c/dec/bit_reader.h\n@brotli//:c/dec/state.h\n@brotli//:c/dec/huffman.h\n@brotli//:c/dec/prefix.h"
  "@brotli//:dec_sources"
  "@brotli//:dec_sources" -> "@brotli//:c/dec/decode.c\n@brotli//:c/dec/state.c\n@brotli//:c/dec/huffman.c\n@brotli//:c/dec/bit_reader.c"
  "@brotli//:c/dec/decode.c\n@brotli//:c/dec/state.c\n@brotli//:c/dec/huffman.c\n@brotli//:c/dec/bit_reader.c"
  "@brotli//:brotlicommon"
  "@brotli//:brotlicommon" -> "@brotli//:msvc\n@brotli//:clang-cl"
  "@brotli//:brotlicommon" -> "@brotli//:common_sources"
  "@brotli//:brotlicommon" -> "@brotli//:common_headers"
  "@brotli//:brotlicommon" -> "@brotli//:brotli_inc"
  "@brotli//:brotlicommon" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@brotli//:brotlicommon" -> "@bazel_tools//tools/def_parser:def_parser"
  "@brotli//:brotli_inc"
  "@brotli//:brotli_inc" -> "@brotli//:msvc\n@brotli//:clang-cl"
  "@brotli//:brotli_inc" -> "@brotli//:public_headers"
  "@brotli//:brotli_inc" -> "@bazel_tools//tools/def_parser:def_parser"
  "@brotli//:brotli_inc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@brotli//:public_headers"
  "@brotli//:public_headers" -> "@brotli//:c/include/brotli/encode.h\n@brotli//:c/include/brotli/port.h\n@brotli//:c/include/brotli/types.h\n@brotli//:c/include/brotli/shared_dictionary.h\n@brotli//:c/include/brotli/decode.h"
  "@brotli//:c/include/brotli/encode.h\n@brotli//:c/include/brotli/port.h\n@brotli//:c/include/brotli/types.h\n@brotli//:c/include/brotli/shared_dictionary.h\n@brotli//:c/include/brotli/decode.h"
  "@brotli//:common_headers"
  "@brotli//:common_headers" -> "@brotli//:c/common/transform.h\n@brotli//:c/common/context.h\n@brotli//:c/common/constants.h\n@brotli//:c/common/platform.h\n@brotli//:c/common/version.h\n@brotli//:c/common/shared_dictionary_internal.h\n@brotli//:c/common/dictionary.h"
  "@brotli//:c/common/transform.h\n@brotli//:c/common/context.h\n@brotli//:c/common/constants.h\n@brotli//:c/common/platform.h\n@brotli//:c/common/version.h\n@brotli//:c/common/shared_dictionary_internal.h\n@brotli//:c/common/dictionary.h"
  "@brotli//:common_sources"
  "@brotli//:common_sources" -> "@brotli//:c/common/shared_dictionary.c\n@brotli//:c/common/transform.c\n@brotli//:c/common/platform.c\n@brotli//:c/common/context.c\n@brotli//:c/common/constants.c\n@brotli//:c/common/dictionary.c"
  "@brotli//:c/common/shared_dictionary.c\n@brotli//:c/common/transform.c\n@brotli//:c/common/platform.c\n@brotli//:c/common/context.c\n@brotli//:c/common/constants.c\n@brotli//:c/common/dictionary.c"
  "@brotli//:msvc\n@brotli//:clang-cl"
  "@brotli//:msvc\n@brotli//:clang-cl" -> "@bazel_tools//tools/cpp:compiler"
  "@perl//:perl"
  "@perl//:perl" -> "@perl//:all_srcs"
  "@perl//:all_srcs"
  "@perl//:all_srcs" -> "@perl//:perl/vendor/lib/Crypt/Digest/SHA3_512.pm\n@perl//:c/x86_64-w64-mingw32/include/agtctl_i.c\n@perl//:perl/vendor/lib/DateTime/Locale/en_BS.pod\n@perl//:perl/vendor/lib/Crypt/Cipher/Skipjack.pm\n@perl//:c/x86_64-w64-mingw32/include/wbemprov.h\n@perl//:perl/vendor/lib/Crypt/SSLeay/Conn.pm\n@perl//:perl/vendor/lib/Cpanel/JSON/XS/Type.pm\n@perl//:c/x86_64-w64-mingw32/include/comip.h\n@perl//:perl/vendor/lib/DateTime/Locale/br_FR.pod\n@perl//:perl/vendor/lib/Imager/File/ICO.pm\n...and 13165 more items"
  "@perl//:perl/vendor/lib/Crypt/Digest/SHA3_512.pm\n@perl//:c/x86_64-w64-mingw32/include/agtctl_i.c\n@perl//:perl/vendor/lib/DateTime/Locale/en_BS.pod\n@perl//:perl/vendor/lib/Crypt/Cipher/Skipjack.pm\n@perl//:c/x86_64-w64-mingw32/include/wbemprov.h\n@perl//:perl/vendor/lib/Crypt/SSLeay/Conn.pm\n@perl//:perl/vendor/lib/Cpanel/JSON/XS/Type.pm\n@perl//:c/x86_64-w64-mingw32/include/comip.h\n@perl//:perl/vendor/lib/DateTime/Locale/br_FR.pod\n@perl//:perl/vendor/lib/Imager/File/ICO.pm\n...and 13165 more items"
  "@nasm//:nasm"
  "@nasm//:nasm" -> "@nasm//:all_srcs"
  "@nasm//:all_srcs"
  "@nasm//:all_srcs" -> "@nasm//:rdoff/rdf2srec.exe\n@nasm//:rdoff/rdflib.exe\n@nasm//:ndisasm.exe\n@nasm//:rdoff/rdf2ihx.exe\n@nasm//:rdoff/rdf2ith.exe\n@nasm//:WORKSPACE\n@nasm//:nasm.exe\n@nasm//:LICENSE\n@nasm//:BUILD.bazel\n@nasm//:rdoff/ldrdf.exe\n@nasm//:rdoff/rdf2com.exe\n@nasm//:rdoff/rdfdump.exe\n@nasm//:rdoff/rdx.exe\n@nasm//:rdoff/rdf2bin.exe"
  "@nasm//:rdoff/rdf2srec.exe\n@nasm//:rdoff/rdflib.exe\n@nasm//:ndisasm.exe\n@nasm//:rdoff/rdf2ihx.exe\n@nasm//:rdoff/rdf2ith.exe\n@nasm//:WORKSPACE\n@nasm//:nasm.exe\n@nasm//:LICENSE\n@nasm//:BUILD.bazel\n@nasm//:rdoff/ldrdf.exe\n@nasm//:rdoff/rdf2com.exe\n@nasm//:rdoff/rdfdump.exe\n@nasm//:rdoff/rdx.exe\n@nasm//:rdoff/rdf2bin.exe"
  "@openssl//:clang\n@openssl//:msvc"
  "@com_github_grpc_grpc//src/core:tsi/alts/zero_copy_frame_protector/alts_iovec_record_protocol.cc\n@com_github_grpc_grpc//src/core:tsi/alts/crypt/gsec.cc\n@com_github_grpc_grpc//src/core:tsi/alts/zero_copy_frame_protector/alts_grpc_privacy_integrity_record_protocol.cc\n@com_github_grpc_grpc//src/core:tsi/alts/zero_copy_frame_protector/alts_grpc_record_protocol_common.h\n@com_github_grpc_grpc//src/core:tsi/alts/crypt/gsec.h\n...and 21 more items"
  "@com_github_grpc_grpc//:channel_create"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:lib/surface/channel_create.h\n@com_github_grpc_grpc//src/core:lib/surface/channel_create.cc"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:legacy_channel"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:channel_create" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:channel_create" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:channel_create" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:channel_create" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:channel_create" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:channel_create" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:channel_create" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:channel_create" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:legacy_channel"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:lib/surface/legacy_channel.cc\n@com_github_grpc_grpc//src/core:lib/surface/legacy_channel.h"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:call_arena_allocator"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:legacy_channel" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:legacy_channel" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:legacy_channel" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/surface/legacy_channel.cc\n@com_github_grpc_grpc//src/core:lib/surface/legacy_channel.h"
  "@com_github_grpc_grpc//:grpc_client_channel"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:client_channel/subchannel.h\n@com_github_grpc_grpc//src/core:client_channel/subchannel_stream_client.h\n@com_github_grpc_grpc//src/core:client_channel/global_subchannel_pool.cc\n@com_github_grpc_grpc//src/core:client_channel/local_subchannel_pool.h\n@com_github_grpc_grpc//src/core:client_channel/client_channel_filter.h\n@com_github_grpc_grpc//src/core:client_channel/retry_filter_legacy_call_data.h\n...and 18 more items"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:call_combiner"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:backend_metric_parser"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:call_destination"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:call_filters"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:call_spine"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:cancel_callback"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:client_channel_backup_poller"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:client_channel_service_config"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:config_selector"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:idle_filter_state"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:latch"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:interception_chain"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:loop"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:metadata"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:observable"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:proxy_mapper_registry"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:retry_service_config"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:retry_throttle"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:seq"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:single_set_ptr"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:sleep"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:subchannel_connector"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:subchannel_pool_interface"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_google_absl//absl/strings:cord"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//:grpc_client_channel" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//src/core:client_channel/subchannel_pool_interface.h\n@com_github_grpc_grpc//src/core:client_channel/subchannel_pool_interface.cc"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:subchannel_pool_interface" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:client_channel/subchannel_pool_interface.h\n@com_github_grpc_grpc//src/core:client_channel/subchannel_pool_interface.cc"
  "@com_github_grpc_grpc//src/core:subchannel_connector"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//src/core:client_channel/connector.h"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:subchannel_connector" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//src/core:client_channel/connector.h"
  "@com_github_grpc_grpc//src/core:retry_service_config"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:client_channel/retry_service_config.h\n@com_github_grpc_grpc//src/core:client_channel/retry_service_config.cc"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:json_channel_args"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:retry_service_config" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:json_channel_args"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_github_grpc_grpc//src/core:util/json/json_channel_args.h"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:json_channel_args" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:util/json/json_channel_args.h"
  "@com_github_grpc_grpc//src/core:client_channel/retry_service_config.h\n@com_github_grpc_grpc//src/core:client_channel/retry_service_config.cc"
  "@com_github_grpc_grpc//src/core:observable"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_github_grpc_grpc//src/core:lib/promise/observable.h"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:observable" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:observable" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//src/core:observable" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/promise/observable.h"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:ext/filters/channel_idle/legacy_channel_idle_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/channel_idle/legacy_channel_idle_filter.h"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:http2_errors"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:idle_filter_state"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:loop"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:per_cpu"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:single_set_ptr"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:sleep"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//src/core:grpc_channel_idle_filter" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:sleep"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//src/core:lib/promise/sleep.cc\n@com_github_grpc_grpc//src/core:lib/promise/sleep.h"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//src/core:event_engine_context"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:sleep" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:sleep" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:sleep" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:lib/promise/sleep.cc\n@com_github_grpc_grpc//src/core:lib/promise/sleep.h"
  "@com_github_grpc_grpc//src/core:ext/filters/channel_idle/legacy_channel_idle_filter.cc\n@com_github_grpc_grpc//src/core:ext/filters/channel_idle/legacy_channel_idle_filter.h"
  "@com_github_grpc_grpc//src/core:idle_filter_state"
  "@com_github_grpc_grpc//src/core:idle_filter_state" -> "@com_github_grpc_grpc//src/core:ext/filters/channel_idle/idle_filter_state.h\n@com_github_grpc_grpc//src/core:ext/filters/channel_idle/idle_filter_state.cc"
  "@com_github_grpc_grpc//src/core:idle_filter_state" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:idle_filter_state" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:idle_filter_state" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:idle_filter_state" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:idle_filter_state" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ext/filters/channel_idle/idle_filter_state.h\n@com_github_grpc_grpc//src/core:ext/filters/channel_idle/idle_filter_state.cc"
  "@com_github_grpc_grpc//src/core:config_selector"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:client_channel/config_selector.h\n@com_github_grpc_grpc//src/core:client_channel/config_selector.cc"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:config_selector" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:client_channel/config_selector.h\n@com_github_grpc_grpc//src/core:client_channel/config_selector.cc"
  "@com_github_grpc_grpc//src/core:client_channel_service_config"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:client_channel/client_channel_service_config.h\n@com_github_grpc_grpc//src/core:client_channel/client_channel_service_config.cc"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:client_channel_service_config" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:client_channel/client_channel_service_config.h\n@com_github_grpc_grpc//src/core:client_channel/client_channel_service_config.cc"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//src/core:client_channel/backup_poller.h\n@com_github_grpc_grpc//src/core:client_channel/backup_poller.cc"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//src/core:client_channel_backup_poller" -> "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//src/core:client_channel/backup_poller.h\n@com_github_grpc_grpc//src/core:client_channel/backup_poller.cc"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//src/core:client_channel/client_channel_internal.h"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//src/core:call_destination"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:client_channel_internal_header" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//src/core:client_channel/client_channel_internal.h"
  "@com_github_grpc_grpc//src/core:backend_metric_parser"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_github_grpc_grpc//src/core:load_balancing/backend_metric_parser.h\n@com_github_grpc_grpc//src/core:load_balancing/backend_metric_parser.cc"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_github_grpc_grpc//src/core:xds_orca_upb"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_google_protobuf//upb:message"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//src/core:backend_metric_parser" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:xds_orca_upb"
  "@com_github_grpc_grpc//src/core:xds_orca_upb" -> "@com_github_cncf_xds//xds/data/orca/v3:pkg"
  "@com_github_grpc_grpc//src/core:xds_orca_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:xds_orca_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//src/core:xds_orca_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//src/core:xds_orca_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/core:xds_orca_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_github_cncf_xds//xds/data/orca/v3:orca_load_report.proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_googleapis//google/api:http_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_protobuf//:wrappers_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_protobuf//:timestamp_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_protobuf//:struct_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_protobuf//:empty_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_protobuf//:duration_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_protobuf//:descriptor_proto"
  "@com_github_cncf_xds//xds/data/orca/v3:pkg" -> "@com_google_protobuf//:any_proto"
  "@com_google_protobuf//:struct_proto"
  "@com_google_protobuf//:struct_proto" -> "@com_google_protobuf//src/google/protobuf:struct_proto"
  "@com_google_protobuf//:wrappers_proto"
  "@com_google_protobuf//:wrappers_proto" -> "@com_google_protobuf//src/google/protobuf:wrappers_proto"
  "@com_google_googleapis//google/api:http_proto"
  "@com_google_googleapis//google/api:http_proto" -> "@com_google_googleapis//google/api:http.proto"
  "@com_google_googleapis//google/api:http_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_googleapis//google/api:http.proto"
  "@com_envoyproxy_protoc_gen_validate//validate:validate_proto"
  "@com_envoyproxy_protoc_gen_validate//validate:validate_proto" -> "@com_envoyproxy_protoc_gen_validate//validate:validate.proto"
  "@com_envoyproxy_protoc_gen_validate//validate:validate_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_envoyproxy_protoc_gen_validate//validate:validate_proto" -> "@com_google_protobuf//:timestamp_proto"
  "@com_envoyproxy_protoc_gen_validate//validate:validate_proto" -> "@com_google_protobuf//:duration_proto"
  "@com_envoyproxy_protoc_gen_validate//validate:validate_proto" -> "@com_google_protobuf//:descriptor_proto"
  "@com_google_protobuf//:duration_proto"
  "@com_google_protobuf//:duration_proto" -> "@com_google_protobuf//src/google/protobuf:duration_proto"
  "@com_google_protobuf//:timestamp_proto"
  "@com_google_protobuf//:timestamp_proto" -> "@com_google_protobuf//src/google/protobuf:timestamp_proto"
  "@com_envoyproxy_protoc_gen_validate//validate:validate.proto"
  "@com_github_cncf_xds//xds/data/orca/v3:orca_load_report.proto"
  "@com_github_grpc_grpc//src/core:load_balancing/backend_metric_parser.h\n@com_github_grpc_grpc//src/core:load_balancing/backend_metric_parser.cc"
  "@com_github_grpc_grpc//:lb_child_policy_handler"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:load_balancing/child_policy_handler.h\n@com_github_grpc_grpc//src/core:load_balancing/child_policy_handler.cc"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:lb_child_policy_handler" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:delegating_helper"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//src/core:load_balancing/delegating_helper.h"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:delegating_helper" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:load_balancing/delegating_helper.h"
  "@com_github_grpc_grpc//src/core:load_balancing/child_policy_handler.h\n@com_github_grpc_grpc//src/core:load_balancing/child_policy_handler.cc"
  "@com_github_grpc_grpc//src/core:client_channel/subchannel.h\n@com_github_grpc_grpc//src/core:client_channel/subchannel_stream_client.h\n@com_github_grpc_grpc//src/core:client_channel/global_subchannel_pool.cc\n@com_github_grpc_grpc//src/core:client_channel/local_subchannel_pool.h\n@com_github_grpc_grpc//src/core:client_channel/client_channel_filter.h\n@com_github_grpc_grpc//src/core:client_channel/retry_filter_legacy_call_data.h\n...and 18 more items"
  "@com_github_grpc_grpc//src/core:lib/surface/channel_create.h\n@com_github_grpc_grpc//src/core:lib/surface/channel_create.cc"
  "@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_tsi_utils.h\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_tsi_handshaker.h\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_handshaker_client.cc\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_tsi_utils.cc\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_shared_resource.cc\n@com_github_grpc_grpc//src/core:tsi/alts/handshaker/alts_handshaker_client.h\n...and 3 more items"
  "@com_github_grpc_grpc//:grpc_security_base"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:include/grpc/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/connectivity_state.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/slice.h\n@com_github_grpc_grpc//:include/grpc/passive_listener.h\n@com_github_grpc_grpc//:include/grpc/impl/compression_types.h\n@com_github_grpc_grpc//:include/grpc/status.h\n...and 18 more items"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:handshaker/security/security_handshaker.cc\n@com_github_grpc_grpc//src/core:lib/security/transport/auth_filters.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/context/security_context.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/credentials.h\n...and 13 more items"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:resource_quota_api"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:event_engine_memory_allocator"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:handshaker_factory"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:seq"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_security_base" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:tsi_base"
  "@com_github_grpc_grpc//:tsi_base" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:tsi_base" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:tsi_base" -> "@com_github_grpc_grpc//src/core:tsi/transport_security_grpc.h\n@com_github_grpc_grpc//src/core:tsi/transport_security.h\n@com_github_grpc_grpc//src/core:tsi/transport_security.cc\n@com_github_grpc_grpc//src/core:tsi/transport_security_interface.h\n@com_github_grpc_grpc//src/core:tsi/transport_security_grpc.cc"
  "@com_github_grpc_grpc//:tsi_base" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:tsi_base" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:tsi_base" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:tsi_base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:tsi_base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:tsi/transport_security_grpc.h\n@com_github_grpc_grpc//src/core:tsi/transport_security.h\n@com_github_grpc_grpc//src/core:tsi/transport_security.cc\n@com_github_grpc_grpc//src/core:tsi/transport_security_interface.h\n@com_github_grpc_grpc//src/core:tsi/transport_security_grpc.cc"
  "@com_github_grpc_grpc//:handshaker"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:handshaker/handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/handshaker.cc"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:handshaker" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:handshaker" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:handshaker" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:handshaker" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:handshaker" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:handshaker" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:handshaker" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:handshaker" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:handshaker" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:handshaker/handshaker.h\n@com_github_grpc_grpc//src/core:handshaker/handshaker.cc"
  "@com_github_grpc_grpc//src/core:handshaker/security/security_handshaker.cc\n@com_github_grpc_grpc//src/core:lib/security/transport/auth_filters.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/context/security_context.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/credentials.h\n...and 13 more items"
  "@com_github_grpc_grpc//src/core:lib/security/security_connector/alts/alts_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/alts/alts_security_connector.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/alts_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/alts_credentials.h"
  "@com_github_grpc_grpc//src/core:plugin_registry/grpc_plugin_registry.cc\n@com_github_grpc_grpc//src/core:plugin_registry/grpc_plugin_registry_extra.cc\n@com_github_grpc_grpc//src/core:lib/surface/init.cc"
  "@com_github_grpc_grpc//:src/cpp/server/server_context.cc\n@com_github_grpc_grpc//:src/cpp/client/call_credentials.cc\n@com_github_grpc_grpc//:src/cpp/server/async_generic_service.cc\n@com_github_grpc_grpc//:src/cpp/server/channel_argument_option.cc\n@com_github_grpc_grpc//:src/cpp/server/health/default_health_check_service.h\n@com_github_grpc_grpc//:src/cpp/server/external_connection_acceptor_impl.h\n@com_github_grpc_grpc//:src/cpp/server/server_credentials.cc\n...and 44 more items"
  "@com_github_grpc_grpc//:src/cpp/server/secure_server_credentials.h"
  "@com_github_grpc_grpc//:src/cpp/common/secure_auth_context.h"
  "@com_github_grpc_grpc//:src/cpp/client/secure_credentials.h"
  "@com_github_grpc_grpc//:include/grpcpp/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc++/support/status.h\n@com_github_grpc_grpc//:include/grpcpp/impl/status.h\n@com_github_grpc_grpc//:include/grpcpp/support/status.h"
  "@com_github_grpc_grpc//:include/grpcpp/support/stub_options.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/call_op_set_interface.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpcpp/server_builder.h\n@com_github_grpc_grpc//:include/grpcpp/support/async_stream.h\n@com_github_grpc_grpc//:include/grpcpp/impl/codegen/async_unary_call.h\n@com_github_grpc_grpc//:include/grpc++/resource_quota.h\n...and 181 more items"
  "@com_github_grpc_grpc//:grpc_no_binder"
  "@com_github_grpc_grpc//:grpc_no_binder" -> "@com_github_grpc_grpc//:grpc_no_binder_define"
  [label="@@com_github_grpc_grpc//:grpc_no_binder_define"];
  "@com_github_grpc_grpc//:grpc_no_binder" -> "@com_github_grpc_grpc//:ios"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_no_binder_define"
  "@com_github_grpc_grpc//:grpc_no_xds"
  "@com_github_grpc_grpc//:grpc_no_xds" -> "@com_github_grpc_grpc//:grpc_no_xds_define"
  [label="@@com_github_grpc_grpc//:grpc_no_xds_define"];
  "@com_github_grpc_grpc//:grpc_no_xds" -> "@com_github_grpc_grpc//:grpc_no_xds_2"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_no_xds_2"
  "@com_github_grpc_grpc//:grpc_no_xds_2" -> "@com_github_grpc_grpc//:android"
  [label="@@com_github_grpc_grpc//:android"];
  "@com_github_grpc_grpc//:grpc_no_xds_2" -> "@com_github_grpc_grpc//:ios"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_no_xds_define"
  "@com_google_protobuf//:cc_wkt_protos"
  "@com_google_protobuf//:cc_wkt_protos" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//:cc_wkt_protos" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_glog_glog//:glog"
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:src/stacktrace_generic-inl.h\n@com_github_glog_glog//:src/stacktrace.h\n@com_github_glog_glog//:src/symbolize.cc\n@com_github_glog_glog//:src/demangle.h\n@com_github_glog_glog//:src/utilities.h\n@com_github_glog_glog//:src/windows/port.cc\n@com_github_glog_glog//:src/base/commandlineflags.h\n@com_github_glog_glog//:src/stacktrace_x86-inl.h\n@com_github_glog_glog//:src/stacktrace_powerpc-inl.h\n@com_github_glog_glog//:src/base/googleinit.h\n...and 14 more items"
  [label="@@bazel_tools//src/conditions:windows"];
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:config_h"
  "@com_github_glog_glog//:glog" -> "@bazel_tools//src/conditions:darwin"
  "@com_github_glog_glog//:glog" -> "@bazel_tools//src/conditions:windows"
  "@com_github_glog_glog//:glog" -> "@bazel_tools//src/conditions:freebsd"
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:src/glog/log_severity.h"
  [label="@@bazel_tools//src/conditions:windows"];
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:logging_h"
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:raw_logging_h"
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:stl_logging_h"
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:vlog_is_on_h"
  "@com_github_glog_glog//:glog" -> "@com_github_gflags_gflags//:gflags"
  "@com_github_glog_glog//:glog" -> "@com_github_glog_glog//:strip_include_prefix_hack"
  [label="@@bazel_tools//src/conditions:windows"];
  "@com_github_glog_glog//:glog" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_glog_glog//:glog" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_glog_glog//:strip_include_prefix_hack"
  "@com_github_glog_glog//:strip_include_prefix_hack" -> "@com_github_glog_glog//:logging_h"
  "@com_github_glog_glog//:strip_include_prefix_hack" -> "@com_github_glog_glog//:raw_logging_h"
  "@com_github_glog_glog//:strip_include_prefix_hack" -> "@com_github_glog_glog//:src/glog/log_severity.h"
  "@com_github_glog_glog//:strip_include_prefix_hack" -> "@com_github_glog_glog//:stl_logging_h"
  "@com_github_glog_glog//:strip_include_prefix_hack" -> "@com_github_glog_glog//:vlog_is_on_h"
  "@com_github_glog_glog//:strip_include_prefix_hack" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_glog_glog//:strip_include_prefix_hack" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_gflags_gflags//:gflags"
  "@com_github_gflags_gflags//:gflags" -> "@com_github_gflags_gflags//:src/gflags_completions.cc\n@com_github_gflags_gflags//:src/gflags_reporting.cc\n@com_github_gflags_gflags//:src/config.h\n@com_github_gflags_gflags//:src/windows_port.h\n@com_github_gflags_gflags//:src/mutex.h\n@com_github_gflags_gflags//:src/gflags.cc\n@com_github_gflags_gflags//:src/windows_port.cc\n@com_github_gflags_gflags//:src/util.h\n@com_github_gflags_gflags//:x64_windows"
  [label="@@com_github_gflags_gflags//:x64_windows"];
  "@com_github_gflags_gflags//:gflags" -> "@com_github_gflags_gflags//:gflags_completions_h"
  "@com_github_gflags_gflags//:gflags" -> "@com_github_gflags_gflags//:gflags_declare_h"
  "@com_github_gflags_gflags//:gflags" -> "@com_github_gflags_gflags//:gflags_google_h"
  "@com_github_gflags_gflags//:gflags" -> "@com_github_gflags_gflags//:gflags_h"
  "@com_github_gflags_gflags//:gflags" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_gflags_gflags//:gflags" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_gflags_gflags//:gflags_h"
  "@com_github_gflags_gflags//:gflags_h" -> "@com_github_gflags_gflags//:src/gflags.h.in"
  "@com_github_gflags_gflags//:gflags_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_github_gflags_gflags//:src/gflags.h.in"
  "@com_github_gflags_gflags//:gflags_google_h"
  "@com_github_gflags_gflags//:gflags_google_h" -> "@com_github_gflags_gflags//:src/gflags_ns.h.in"
  "@com_github_gflags_gflags//:gflags_google_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_github_gflags_gflags//:src/gflags_ns.h.in"
  "@com_github_gflags_gflags//:gflags_declare_h"
  "@com_github_gflags_gflags//:gflags_declare_h" -> "@com_github_gflags_gflags//:src/gflags_declare.h.in"
  "@com_github_gflags_gflags//:gflags_declare_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_github_gflags_gflags//:src/gflags_declare.h.in"
  "@com_github_gflags_gflags//:gflags_completions_h"
  "@com_github_gflags_gflags//:gflags_completions_h" -> "@com_github_gflags_gflags//:src/gflags_completions.h.in"
  "@com_github_gflags_gflags//:gflags_completions_h" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_github_gflags_gflags//:src/gflags_completions.h.in"
  "@com_github_gflags_gflags//:src/gflags_completions.cc\n@com_github_gflags_gflags//:src/gflags_reporting.cc\n@com_github_gflags_gflags//:src/config.h\n@com_github_gflags_gflags//:src/windows_port.h\n@com_github_gflags_gflags//:src/mutex.h\n@com_github_gflags_gflags//:src/gflags.cc\n@com_github_gflags_gflags//:src/windows_port.cc\n@com_github_gflags_gflags//:src/util.h\n@com_github_gflags_gflags//:x64_windows"
  "@com_github_glog_glog//:vlog_is_on_h"
  "@com_github_glog_glog//:vlog_is_on_h" -> "@com_github_glog_glog//:src/glog/vlog_is_on.h.in"
  "@com_github_glog_glog//:vlog_is_on_h" -> "@bazel_tools//src/conditions:windows"
  "@com_github_glog_glog//:src/glog/vlog_is_on.h.in"
  "@com_github_glog_glog//:stl_logging_h"
  "@com_github_glog_glog//:stl_logging_h" -> "@com_github_glog_glog//:src/glog/stl_logging.h.in"
  "@com_github_glog_glog//:stl_logging_h" -> "@bazel_tools//src/conditions:windows"
  "@com_github_glog_glog//:src/glog/stl_logging.h.in"
  "@com_github_glog_glog//:raw_logging_h"
  "@com_github_glog_glog//:raw_logging_h" -> "@com_github_glog_glog//:src/glog/raw_logging.h.in"
  "@com_github_glog_glog//:raw_logging_h" -> "@bazel_tools//src/conditions:windows"
  "@com_github_glog_glog//:src/glog/raw_logging.h.in"
  "@com_github_glog_glog//:logging_h"
  "@com_github_glog_glog//:logging_h" -> "@com_github_glog_glog//:src/glog/logging.h.in"
  "@com_github_glog_glog//:logging_h" -> "@bazel_tools//src/conditions:windows"
  "@com_github_glog_glog//:src/glog/logging.h.in"
  "@com_github_glog_glog//:src/glog/log_severity.h"
  "@bazel_tools//src/conditions:freebsd"
  "@bazel_tools//src/conditions:freebsd" -> "@platforms//os:freebsd"
  "@platforms//os:freebsd"
  "@platforms//os:freebsd" -> "@platforms//os:os"
  "@bazel_tools//src/conditions:darwin"
  "@bazel_tools//src/conditions:darwin" -> "@platforms//os:macos"
  "@com_github_glog_glog//:config_h"
  "@com_github_glog_glog//:config_h" -> "@com_github_glog_glog//:src/config.h.cmake.in"
  "@com_github_glog_glog//:src/config.h.cmake.in"
  "@com_github_glog_glog//:src/stacktrace_generic-inl.h\n@com_github_glog_glog//:src/stacktrace.h\n@com_github_glog_glog//:src/symbolize.cc\n@com_github_glog_glog//:src/demangle.h\n@com_github_glog_glog//:src/utilities.h\n@com_github_glog_glog//:src/windows/port.cc\n@com_github_glog_glog//:src/base/commandlineflags.h\n@com_github_glog_glog//:src/stacktrace_x86-inl.h\n@com_github_glog_glog//:src/stacktrace_powerpc-inl.h\n@com_github_glog_glog//:src/base/googleinit.h\n...and 14 more items"
  "//src/async_grpc:cc_protos"
  "//src/async_grpc:cc_protos" -> "//src/async_grpc:protos"
  "//src/async_grpc:cc_protos" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "//src/async_grpc:cc_protos" -> "@bazel_tools//tools/proto:cc_toolchain"
  "//src/async_grpc:protos"
  "//src/async_grpc:protos" -> "@com_google_protobuf//:empty_proto"
  "//src/async_grpc:protos" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//:empty_proto"
  "@com_google_protobuf//:empty_proto" -> "@com_google_protobuf//src/google/protobuf:empty_proto"
  "//src/async_grpc:common/time.h\n//src/async_grpc:retry.h\n//src/async_grpc:rpc_handler.h\n//src/async_grpc:event_queue_thread.cc\n//src/async_grpc:rpc.h\n//src/async_grpc:common/port.h\n//src/async_grpc:span.h\n//src/async_grpc:execution_context.h\n//src/async_grpc:client.h\n//src/async_grpc:completion_queue_pool.cc\n//src/async_grpc:rpc_service_method_traits.h\n//src/async_grpc:rpc_handler_interface.h\n//src/async_grpc:completion_queue_pool.h\n...and 18 more items"
  "@com_github_grpc_grpc//src/core:load_balancing/ring_hash/ring_hash.cc\n@com_github_grpc_grpc//src/core:load_balancing/ring_hash/ring_hash.h"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/fake/fake_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/fake/fake_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/fake/fake_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/security_connector/fake/fake_security_connector.h"
  "@com_github_grpc_grpc//src/core:lib/promise/try_join.h"
  "@envoy_api//envoy/extensions/upstreams/http/v3:http_protocol_options.proto"
  "@com_github_grpc_grpc//src/core:lib/security/security_connector/local/local_security_connector.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/local/local_credentials.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/local/local_credentials.h\n@com_github_grpc_grpc//src/core:lib/security/security_connector/local/local_security_connector.h"
  "@bazel_tools//src/main/cpp/util:errors"
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//src/main/cpp/util:ijar"
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//src/main/cpp/util:errors.h\n@bazel_tools//src/main/cpp/util:errors_posix.cc\n@bazel_tools//src/main/cpp/util:errors_windows.cc"
  [label="//conditions:default@@bazel_tools//src/conditions:windows"];
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//src/main/cpp/util:logging"
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//src/main/cpp/util:port"
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//src/main/cpp/util:strings"
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/cpp/util:errors" -> "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/conditions:windows"
  "@bazel_tools//src/conditions:windows" -> "@platforms//os:windows"
  "@bazel_tools//src/main/cpp/util:port"
  "@bazel_tools//src/main/cpp/util:port" -> "@bazel_tools//src/main/cpp/util:port.cc\n@bazel_tools//src/main/cpp/util:port.h"
  "@bazel_tools//src/main/cpp/util:port" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/cpp/util:port" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/cpp/util:port.cc\n@bazel_tools//src/main/cpp/util:port.h"
  "@bazel_tools//src/main/cpp/util:logging"
  "@bazel_tools//src/main/cpp/util:logging" -> "@bazel_tools//src/main/cpp/util:logging.h\n@bazel_tools//src/main/cpp/util:logging.cc"
  "@bazel_tools//src/main/cpp/util:logging" -> "@bazel_tools//src/main/cpp/util:blaze_exit_code"
  "@bazel_tools//src/main/cpp/util:logging" -> "@bazel_tools//src/main/cpp/util:strings"
  "@bazel_tools//src/main/cpp/util:logging" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/cpp/util:logging" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/cpp/util:strings"
  "@bazel_tools//src/main/cpp/util:strings" -> "@bazel_tools//src/main/cpp/util:strings.h\n@bazel_tools//src/main/cpp/util:strings.cc"
  "@bazel_tools//src/main/cpp/util:strings" -> "@bazel_tools//src/main/cpp/util:blaze_exit_code"
  "@bazel_tools//src/main/cpp/util:strings" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/cpp/util:strings" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/cpp/util:strings.h\n@bazel_tools//src/main/cpp/util:strings.cc"
  "@bazel_tools//src/main/cpp/util:blaze_exit_code"
  "@bazel_tools//src/main/cpp/util:blaze_exit_code" -> "@bazel_tools//src/main/cpp/util:exit_code.h"
  "@bazel_tools//src/main/cpp/util:blaze_exit_code" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//src/main/cpp/util:blaze_exit_code" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//src/main/cpp/util:exit_code.h"
  "@bazel_tools//src/main/cpp/util:logging.h\n@bazel_tools//src/main/cpp/util:logging.cc"
  "@bazel_tools//src/main/cpp/util:errors.h\n@bazel_tools//src/main/cpp/util:errors_posix.cc\n@bazel_tools//src/main/cpp/util:errors_windows.cc"
  "@bazel_tools//src/main/cpp/util:ijar"
  "@libunwind//:include/libunwind.h.in"
  "@com_github_grpc_grpc//src/core:retry_throttle"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_github_grpc_grpc//src/core:client_channel/retry_throttle.h\n@com_github_grpc_grpc//src/core:client_channel/retry_throttle.cc"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:retry_throttle" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:client_channel/retry_throttle.h\n@com_github_grpc_grpc//src/core:client_channel/retry_throttle.cc"
  "@com_github_grpc_grpc//:hpack_encoder"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder.cc"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:chttp2_bin_encoder"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:chttp2_legacy_frame"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:chttp2_varint"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:hpack_encoder_table"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:hpack_constants"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:metadata_compression_traits"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_github_grpc_grpc//src/core:timeout_encoding"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:hpack_encoder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder_table.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder_table.cc"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@com_github_grpc_grpc//src/core:hpack_constants"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:hpack_encoder_table" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:hpack_constants"
  "@com_github_grpc_grpc//src/core:hpack_constants" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:hpack_constants" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:hpack_constants" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_constants.h"
  "@com_github_grpc_grpc//src/core:hpack_constants" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:hpack_constants" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:hpack_constants" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_constants.h"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder_table.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder_table.cc"
  "@com_github_grpc_grpc//:grpc_base"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:systemd"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/connectivity_state.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/slice.h\n@com_github_grpc_grpc//:include/grpc/passive_listener.h\n@com_github_grpc_grpc//:include/grpc/impl/compression_types.h\n@com_github_grpc_grpc//:include/grpc/status.h\n...and 18 more items"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/event_engine/endpoint_config.h\n@com_github_grpc_grpc//:include/grpc/event_engine/extensible.h\n@com_github_grpc_grpc//:include/grpc/event_engine/port.h\n@com_github_grpc_grpc//:include/grpc/event_engine/event_engine.h"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/event_engine/memory_allocator.h\n@com_github_grpc_grpc//:include/grpc/event_engine/memory_request.h\n@com_github_grpc_grpc//:include/grpc/event_engine/internal/memory_allocator_impl.h"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/event_engine/internal/slice_cast.h"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/event_engine/slice.h\n@com_github_grpc_grpc//:include/grpc/event_engine/slice_buffer.h"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:call_combiner"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:lib/channel/status_util.cc\n@com_github_grpc_grpc//src/core:lib/surface/server_call.h\n@com_github_grpc_grpc//src/core:lib/surface/call_test_only.h\n@com_github_grpc_grpc//src/core:lib/surface/filter_stack_call.h\n@com_github_grpc_grpc//src/core:lib/channel/connected_channel.h\n@com_github_grpc_grpc//src/core:lib/surface/metadata_array.cc\n@com_github_grpc_grpc//src/core:lib/compression/message_compress.cc\n...and 34 more items"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:channel_stack_builder"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:cpp_impl_of"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:1999"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:all_ok"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:atomic_utils"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:bitset"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:call_destination"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:call_filters"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:call_final_info"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:call_finalization"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:call_spine"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:cancel_callback"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:compression"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:event_engine_context"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:for_each"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:if"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:latch"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:loop"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:message"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:metadata"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:race"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:seq"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:server_interface"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:single_set_ptr"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:gpr_spinlock"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:slice_cast"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:promise_status"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:transport_fwd"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_google_absl//absl/utility:utility"
  "@com_github_grpc_grpc//:grpc_base" -> "@com_github_grpc_grpc//third_party:madler_zlib"
  "@com_github_grpc_grpc//:grpc_base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//third_party:madler_zlib"
  "@com_github_grpc_grpc//third_party:madler_zlib" -> "@zlib//:zlib"
  "@com_github_grpc_grpc//src/core:transport_fwd"
  "@com_github_grpc_grpc//src/core:transport_fwd" -> "@com_github_grpc_grpc//src/core:lib/transport/transport_fwd.h"
  "@com_github_grpc_grpc//src/core:transport_fwd" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:transport_fwd" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:transport_fwd" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:transport_fwd" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/transport/transport_fwd.h"
  "@com_github_grpc_grpc//src/core:single_set_ptr"
  "@com_github_grpc_grpc//src/core:single_set_ptr" -> "@com_github_grpc_grpc//src/core:lib/gprpp/single_set_ptr.h"
  "@com_github_grpc_grpc//src/core:single_set_ptr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:single_set_ptr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:single_set_ptr" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:single_set_ptr" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:single_set_ptr" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:single_set_ptr" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/gprpp/single_set_ptr.h"
  "@com_github_grpc_grpc//src/core:server_interface"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@com_github_grpc_grpc//src/core:server/server_interface.h"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:server_interface" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:server/server_interface.h"
  "@com_github_grpc_grpc//src/core:cancel_callback"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@com_github_grpc_grpc//src/core:lib/promise/cancel_callback.h"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:cancel_callback" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/promise/cancel_callback.h"
  "@com_github_grpc_grpc//src/core:call_finalization"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@com_github_grpc_grpc//src/core:lib/channel/call_finalization.h"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@com_github_grpc_grpc//src/core:call_final_info"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:call_finalization" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/channel/call_finalization.h"
  "@com_github_grpc_grpc//src/core:arena_promise"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//src/core:lib/promise/arena_promise.h"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:arena_promise" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/promise/arena_promise.h"
  "@com_github_grpc_grpc//src/core:all_ok"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//src/core:lib/promise/all_ok.h"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//src/core:join_state"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:all_ok" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:join_state"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//src/core:lib/promise/detail/join_state.h"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//src/core:bitset"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:join_state" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:join_state" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:join_state" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/promise/detail/join_state.h"
  "@com_github_grpc_grpc//src/core:lib/promise/all_ok.h"
  "@com_github_grpc_grpc//:iomgr"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:systemd"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:lib/iomgr/wakeup_fd_posix.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/wakeup_fd_pipe.h\n@com_github_grpc_grpc//src/core:lib/iomgr/tcp_server_windows.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_utils_common_posix.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/endpoint_cfstream.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/resolve_address_windows.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_windows.h\n...and 90 more items"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/connectivity_state.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/slice.h\n@com_github_grpc_grpc//:include/grpc/passive_listener.h\n@com_github_grpc_grpc//:include/grpc/impl/compression_types.h\n@com_github_grpc_grpc//:include/grpc/status.h\n...and 18 more items"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/event_engine/endpoint_config.h\n@com_github_grpc_grpc//:include/grpc/event_engine/extensible.h\n@com_github_grpc_grpc//:include/grpc/event_engine/port.h\n@com_github_grpc_grpc//:include/grpc/event_engine/event_engine.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/event_engine/memory_allocator.h\n@com_github_grpc_grpc//:include/grpc/event_engine/memory_request.h\n@com_github_grpc_grpc//:include/grpc/event_engine/internal/memory_allocator_impl.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/event_engine/internal/slice_cast.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/event_engine/slice.h\n@com_github_grpc_grpc//:include/grpc/event_engine/slice_buffer.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_posix.h\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr.h\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_windows.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:lib/iomgr/iomgr.h"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:byte_buffer"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:iomgr_buffer_list"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:iomgr_internal_errqueue"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:resource_quota_api"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_engine_shim"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_engine_query_extensions"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:examine_stack"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:slice_cast"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:socket_mutator"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:windows_event_engine"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:windows_event_engine_listener"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:iomgr" -> "@com_google_absl//absl/utility:utility"
  "@com_github_grpc_grpc//:iomgr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:iomgr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_log"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:event_engine_extensions"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:channel_args_endpoint_config"
  "@com_github_grpc_grpc//:iomgr" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//src/core:event_log"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_github_grpc_grpc//src/core:lib/debug/event_log.cc\n@com_github_grpc_grpc//src/core:lib/debug/event_log.h"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_github_grpc_grpc//src/core:per_cpu"
  "@com_github_grpc_grpc//src/core:event_log" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_log" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_log" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/debug/event_log.cc\n@com_github_grpc_grpc//src/core:lib/debug/event_log.h"
  "@com_github_grpc_grpc//src/core:event_engine_shim"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@com_github_grpc_grpc//src/core:lib/event_engine/shim.h\n@com_github_grpc_grpc//src/core:lib/event_engine/shim.cc"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_shim" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/event_engine/shim.h\n@com_github_grpc_grpc//src/core:lib/event_engine/shim.cc"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@com_github_grpc_grpc//src/core:lib/event_engine/memory_allocator_factory.h"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@com_github_grpc_grpc//src/core:event_engine_memory_allocator"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator_factory" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/event_engine/memory_allocator_factory.h"
  "@com_github_grpc_grpc//src/core:default_event_engine"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine.h"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//src/core:default_event_engine_factory"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//src/core:thready_event_engine"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:default_event_engine" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:thready_event_engine"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_github_grpc_grpc//src/core:lib/event_engine/thready_event_engine/thready_event_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thready_event_engine/thready_event_engine.h"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:thready_event_engine" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:lib/event_engine/thready_event_engine/thready_event_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thready_event_engine/thready_event_engine.h"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//:mac\n@com_github_grpc_grpc//:tvos\n@com_github_grpc_grpc//:mac_x86_64\n@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine_factory.cc\n@com_github_grpc_grpc//:watchos\n@com_github_grpc_grpc//:visionos\n@com_github_grpc_grpc//:mac_arm64\n@com_github_grpc_grpc//:windows_other\n@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine_factory.h"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//src/core:windows_event_engine"
  [label="@@com_github_grpc_grpc//:windows_clang\n@@com_github_grpc_grpc//:windows\n@@com_github_grpc_grpc//:windows_msvc..."];
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//src/core:posix_event_engine"
  [label="@@com_github_grpc_grpc//:mac_arm64\n//conditions:default\n@@com_github_grpc_grpc//:mac..."];
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//:ios"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_github_grpc_grpc//src/core:cf_event_engine"
  [label="@@com_github_grpc_grpc//:ios\n@@com_github_grpc_grpc//:tvos\n@@com_github_grpc_grpc//:mac_arm64..."];
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@com_google_absl//absl/memory:memory"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:default_event_engine_factory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:cf_event_engine"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/dns_service_resolver.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cftype_unique_ref.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/dns_service_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cfstream_endpoint.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cf_engine.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cfstream_endpoint.cc\n...and 1 more items"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_utils"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:cf_event_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/dns_service_resolver.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cftype_unique_ref.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/dns_service_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cfstream_endpoint.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cf_engine.h\n@com_github_grpc_grpc//src/core:lib/event_engine/cf_engine/cfstream_endpoint.cc\n...and 1 more items"
  "@com_github_grpc_grpc//src/core:posix_event_engine"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:ares_resolver"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:forkable"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:native_posix_dns_resolver"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_listener"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_timer"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:posix_event_engine" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/event_poller_posix_default.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/event_poller_posix_default.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//src/core:forkable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_default" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_poll_posix.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_poll_posix.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:common_event_engine_closures"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:event_engine_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:event_engine_time_util"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_poll" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_poll_posix.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_poll_posix.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_epoll1_linux.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_epoll1_linux.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:event_engine_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:event_engine_time_util"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_poller_posix_epoll1" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_posix_default.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_posix_default.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_default" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_pipe.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_pipe.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_pipe" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_pipe.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_pipe.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_eventfd.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_eventfd.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix_eventfd" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_eventfd.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_eventfd.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_posix_default.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_posix_default.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_posix.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_wakeup_fd_posix" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/wakeup_fd_posix.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/lockfree_event.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/lockfree_event.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_lockfree_event" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/lockfree_event.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/lockfree_event.cc"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_epoll1_linux.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/ev_epoll1_linux.cc"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/event_poller_posix_default.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/event_poller_posix_default.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:socket_mutator"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener_utils.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener_utils.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//src/core:socket_mutator"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_listener_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener_utils.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener_utils.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_listener.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_endpoint.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_endpoint.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:event_engine_extensions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_endpoint" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/traced_buffer_list.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/traced_buffer_list.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_traced_buffer_list" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/traced_buffer_list.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/traced_buffer_list.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/internal_errqueue.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/internal_errqueue.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_internal_errqueue" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/internal_errqueue.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/internal_errqueue.h"
  "@com_github_grpc_grpc//src/core:load_file"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_github_grpc_grpc//src/core:lib/gprpp/load_file.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/load_file.h"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:load_file" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:load_file" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:load_file" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/load_file.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/load_file.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_endpoint.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_endpoint.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_github_grpc_grpc//src/core:event_engine_extensions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_github_grpc_grpc//src/core:event_engine_query_extensions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_base_hdrs" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@com_github_grpc_grpc//src/core:lib/event_engine/query_extensions.h"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_query_extensions" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:lib/event_engine/query_extensions.h"
  "@com_github_grpc_grpc//src/core:event_engine_extensions"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//src/core:lib/event_engine/extensions/can_track_errors.h"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//src/core:lib/event_engine/extensions/chaotic_good_extension.h\n@com_github_grpc_grpc//src/core:lib/event_engine/extensions/supports_fd.h\n@com_github_grpc_grpc//src/core:lib/event_engine/extensions/tcp_trace.h"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_github_grpc_grpc//:tcp_tracer"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_extensions" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/extensions/chaotic_good_extension.h\n@com_github_grpc_grpc//src/core:lib/event_engine/extensions/supports_fd.h\n@com_github_grpc_grpc//src/core:lib/event_engine/extensions/tcp_trace.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix.h"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/native_posix_dns_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/native_posix_dns_resolver.h"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:native_posix_dns_resolver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/native_posix_dns_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/native_posix_dns_resolver.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine.cc"
  "@com_github_grpc_grpc//src/core:windows_event_engine"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_engine.h"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:ares_resolver"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:channel_args_endpoint_config"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:common_event_engine_closures"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:dump_args"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:event_engine_utils"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:windows_endpoint"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:windows_event_engine_listener"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:windows_iocp"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//src/core:windows_native_resolver"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:windows_event_engine" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:windows_native_resolver"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_github_grpc_grpc//src/core:lib/event_engine/windows/native_windows_dns_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/native_windows_dns_resolver.h"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:windows_native_resolver" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/event_engine/windows/native_windows_dns_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/native_windows_dns_resolver.h"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_listener.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_listener.h"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:common_event_engine_closures"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:windows_endpoint"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//src/core:windows_iocp"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:windows_event_engine_listener" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_listener.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_listener.h"
  "@com_github_grpc_grpc//src/core:windows_endpoint"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_endpoint.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_endpoint.cc"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//src/core:windows_iocp"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:windows_endpoint" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_endpoint.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_endpoint.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_manager.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_manager.cc"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//src/core:forkable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//src/core:notification"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//src/core:posix_event_engine_timer"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer_manager" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_heap.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_heap.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//src/core:time_averaged_stats"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:posix_event_engine_timer" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_heap.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_heap.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_manager.h\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/timer_manager.cc"
  "@com_github_grpc_grpc//src/core:init_internally"
  "@com_github_grpc_grpc//src/core:init_internally" -> "@com_github_grpc_grpc//src/core:lib/surface/init_internally.h\n@com_github_grpc_grpc//src/core:lib/surface/init_internally.cc"
  "@com_github_grpc_grpc//src/core:init_internally" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:init_internally" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:init_internally" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:init_internally" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:init_internally" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/surface/init_internally.h\n@com_github_grpc_grpc//src/core:lib/surface/init_internally.cc"
  "@com_github_grpc_grpc//src/core:event_engine_utils"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_github_grpc_grpc//src/core:lib/event_engine/utils.h\n@com_github_grpc_grpc//src/core:lib/event_engine/utils.cc"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/utils.h\n@com_github_grpc_grpc//src/core:lib/event_engine/utils.cc"
  "@com_github_grpc_grpc//src/core:event_engine_common"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//src/core:lib/event_engine/slice_buffer.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/slice.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/resolved_address.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/resolved_address_internal.h\n@com_github_grpc_grpc//src/core:lib/event_engine/event_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/handle_containers.h"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//src/core:lib/event_engine/extensions/can_track_errors.h"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//:include/grpc/event_engine/slice.h\n@com_github_grpc_grpc//:include/grpc/event_engine/slice_buffer.h"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//src/core:slice_cast"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_google_absl//absl/utility:utility"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_engine_common" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:lib/event_engine/extensions/can_track_errors.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/slice_buffer.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/slice.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/resolved_address.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/resolved_address_internal.h\n@com_github_grpc_grpc//src/core:lib/event_engine/event_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/handle_containers.h"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_github_grpc_grpc//src/core:lib/event_engine/channel_args_endpoint_config.h\n@com_github_grpc_grpc//src/core:lib/event_engine/channel_args_endpoint_config.cc"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:channel_args_endpoint_config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/channel_args_endpoint_config.h\n@com_github_grpc_grpc//src/core:lib/event_engine/channel_args_endpoint_config.cc"
  "@com_github_grpc_grpc//src/core:ares_resolver"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:lib/event_engine/grpc_polled_fd.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/grpc_polled_fd_windows.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/ares_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/ares_resolver.h\n@com_github_grpc_grpc//src/core:lib/event_engine/nameser.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/grpc_polled_fd_windows.h\n...and 1 more items"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:common_event_engine_closures"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:event_engine_time_util"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//src/core:windows_iocp"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//third_party/address_sorting:address_sorting"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//third_party:cares"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:ares_resolver" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//third_party:cares"
  "@com_github_grpc_grpc//third_party:cares" -> "@c-ares//:ares"
  "@c-ares//:ares"
  "@c-ares//:ares" -> "@c-ares//:c-ares"
  "@c-ares//:c-ares"
  "@c-ares//:c-ares" -> "@c-ares//:src/lib/ares_parse_uri_reply.c\n@c-ares//:src/lib/ares_library_init.c\n@c-ares//:src/lib/ares_str.c\n@c-ares//:src/lib/ares_sysconfig_files.c\n@c-ares//:src/lib/ares__threads.h\n@c-ares//:include/ares_dns.h\n@c-ares//:src/lib/ares_android.h\n@c-ares//:src/lib/ares_dns_mapping.c\n@c-ares//:src/lib/ares_getsock.c\n@c-ares//:src/lib/ares__hosts_file.c\n@c-ares//:src/lib/ares_math.c\n@c-ares//:src/lib/ares_platform.c\n@c-ares//:src/lib/ares_send.c\n...and 103 more items"
  "@c-ares//:c-ares" -> "@c-ares//:ares_build_h"
  "@c-ares//:c-ares" -> "@c-ares//:ares_config_h"
  "@c-ares//:c-ares" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@c-ares//:c-ares" -> "@bazel_tools//tools/def_parser:def_parser"
  "@c-ares//:ares_config_h"
  "@c-ares//:ares_config_h" -> "@c-ares//:src/lib/ares_config.h.cmake"
  "@c-ares//:src/lib/ares_config.h.cmake"
  "@c-ares//:ares_build_h"
  "@c-ares//:ares_build_h" -> "@c-ares//:include/ares_build.h.in"
  "@c-ares//:include/ares_build.h.in"
  "@c-ares//:src/lib/ares_parse_uri_reply.c\n@c-ares//:src/lib/ares_library_init.c\n@c-ares//:src/lib/ares_str.c\n@c-ares//:src/lib/ares_sysconfig_files.c\n@c-ares//:src/lib/ares__threads.h\n@c-ares//:include/ares_dns.h\n@c-ares//:src/lib/ares_android.h\n@c-ares//:src/lib/ares_dns_mapping.c\n@c-ares//:src/lib/ares_getsock.c\n@c-ares//:src/lib/ares__hosts_file.c\n@c-ares//:src/lib/ares_math.c\n@c-ares//:src/lib/ares_platform.c\n@c-ares//:src/lib/ares_send.c\n...and 103 more items"
  "@com_github_grpc_grpc//third_party/address_sorting:address_sorting"
  "@com_github_grpc_grpc//third_party/address_sorting:address_sorting" -> "@com_github_grpc_grpc//third_party/address_sorting:address_sorting_posix.c\n@com_github_grpc_grpc//third_party/address_sorting:include/address_sorting/address_sorting.h\n@com_github_grpc_grpc//third_party/address_sorting:address_sorting.c\n@com_github_grpc_grpc//third_party/address_sorting:address_sorting_internal.h\n@com_github_grpc_grpc//third_party/address_sorting:address_sorting_windows.c"
  "@com_github_grpc_grpc//third_party/address_sorting:address_sorting" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//third_party/address_sorting:address_sorting" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//third_party/address_sorting:address_sorting_posix.c\n@com_github_grpc_grpc//third_party/address_sorting:include/address_sorting/address_sorting.h\n@com_github_grpc_grpc//third_party/address_sorting:address_sorting.c\n@com_github_grpc_grpc//third_party/address_sorting:address_sorting_internal.h\n@com_github_grpc_grpc//third_party/address_sorting:address_sorting_windows.c"
  "@com_github_grpc_grpc//src/core:windows_iocp"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//src/core:lib/event_engine/windows/win_socket.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/win_socket.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/iocp.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/iocp.h"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//src/core:event_engine_poller"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//src/core:event_engine_time_util"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:windows_iocp" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_pool_factory.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_pool.h\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/work_stealing_thread_pool.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/work_stealing_thread_pool.h"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:common_event_engine_closures"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:event_engine_thread_count"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:event_engine_thread_local"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:event_engine_work_queue"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:examine_stack"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:forkable"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:notification"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_thread_pool" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:backoff"
  "@com_github_grpc_grpc//:backoff" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:backoff" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:backoff" -> "@com_github_grpc_grpc//src/core:lib/backoff/backoff.h\n@com_github_grpc_grpc//src/core:lib/backoff/backoff.cc"
  "@com_github_grpc_grpc//:backoff" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:backoff" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:backoff" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:backoff" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//:backoff" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:lib/backoff/backoff.h\n@com_github_grpc_grpc//src/core:lib/backoff/backoff.cc"
  "@com_github_grpc_grpc//src/core:notification"
  "@com_github_grpc_grpc//src/core:notification" -> "@com_github_grpc_grpc//src/core:lib/gprpp/notification.h"
  "@com_github_grpc_grpc//src/core:notification" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:notification" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:notification" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:notification" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//src/core:notification" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:notification" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/notification.h"
  "@com_github_grpc_grpc//src/core:event_engine_trace"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@com_github_grpc_grpc//src/core:lib/event_engine/trace.h"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_trace" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/event_engine/trace.h"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_count.h\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_count.cc"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_thread_count" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_count.h\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_count.cc"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_github_grpc_grpc//src/core:lib/event_engine/work_queue/basic_work_queue.h\n@com_github_grpc_grpc//src/core:lib/event_engine/work_queue/basic_work_queue.cc"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_github_grpc_grpc//src/core:common_event_engine_closures"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_github_grpc_grpc//src/core:event_engine_work_queue"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_basic_work_queue" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@com_github_grpc_grpc//src/core:lib/event_engine/work_queue/work_queue.h"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_work_queue" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/event_engine/work_queue/work_queue.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/work_queue/basic_work_queue.h\n@com_github_grpc_grpc//src/core:lib/event_engine/work_queue/basic_work_queue.cc"
  "@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_pool_factory.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/thread_pool.h\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/work_stealing_thread_pool.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_pool/work_stealing_thread_pool.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/windows/win_socket.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/win_socket.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/iocp.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/iocp.h"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@com_github_grpc_grpc//src/core:lib/event_engine/ref_counted_dns_resolver_interface.h"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:ref_counted_dns_resolver_interface" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/ref_counted_dns_resolver_interface.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/tcp_socket_utils.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/tcp_socket_utils.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:socket_mutator"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_tcp_socket_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:socket_mutator"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@com_github_grpc_grpc//src/core:lib/iomgr/socket_mutator.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_mutator.h"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:socket_mutator" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/iomgr/socket_mutator.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_mutator.h"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:lib/event_engine/tcp_socket_utils.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/tcp_socket_utils.h"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_tcp_socket_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/event_engine/tcp_socket_utils.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/tcp_socket_utils.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/tcp_socket_utils.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/tcp_socket_utils.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/event_poller.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//src/core:event_engine_poller"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//src/core:forkable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_event_poller" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:forkable"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_github_grpc_grpc//src/core:lib/event_engine/forkable.h\n@com_github_grpc_grpc//src/core:lib/event_engine/forkable.cc"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:forkable" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:forkable" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:forkable" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/forkable.h\n@com_github_grpc_grpc//src/core:lib/event_engine/forkable.cc"
  "@com_github_grpc_grpc//src/core:event_engine_poller"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@com_github_grpc_grpc//src/core:lib/event_engine/poller.h"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_poller" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:lib/event_engine/poller.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/event_poller.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_closure.h"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:posix_event_engine_closure" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:lib/event_engine/posix_engine/posix_engine_closure.h"
  "@com_github_grpc_grpc//src/core:event_engine_time_util"
  "@com_github_grpc_grpc//src/core:event_engine_time_util" -> "@com_github_grpc_grpc//src/core:lib/event_engine/time_util.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/time_util.h"
  "@com_github_grpc_grpc//src/core:event_engine_time_util" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_time_util" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_time_util" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_time_util" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_time_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_time_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/event_engine/time_util.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/time_util.h"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@com_github_grpc_grpc//src/core:lib/event_engine/common_closures.h"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:common_event_engine_closures" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:lib/event_engine/common_closures.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/grpc_polled_fd.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/grpc_polled_fd_windows.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/ares_resolver.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/ares_resolver.h\n@com_github_grpc_grpc//src/core:lib/event_engine/nameser.h\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/grpc_polled_fd_windows.h\n...and 1 more items"
  "@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/windows/windows_engine.h"
  "@com_github_grpc_grpc//:mac\n@com_github_grpc_grpc//:tvos\n@com_github_grpc_grpc//:mac_x86_64\n@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine_factory.cc\n@com_github_grpc_grpc//:watchos\n@com_github_grpc_grpc//:visionos\n@com_github_grpc_grpc//:mac_arm64\n@com_github_grpc_grpc//:windows_other\n@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine_factory.h"
  "@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/default_event_engine.h"
  "@com_github_grpc_grpc//:resource_quota_api"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//src/core:lib/resource_quota/api.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/api.cc"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_github_grpc_grpc//src/core:thread_quota"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:resource_quota_api" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/resource_quota/api.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/api.cc"
  "@com_github_grpc_grpc//:iomgr_timer"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:lib/iomgr/timer.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_generic.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_heap.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_manager.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_heap.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/timer.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_generic.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_manager.cc"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:lib/iomgr/iomgr.h"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:gpr_spinlock"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:time_averaged_stats"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:iomgr_timer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:time_averaged_stats"
  "@com_github_grpc_grpc//src/core:time_averaged_stats" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:time_averaged_stats" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:time_averaged_stats" -> "@com_github_grpc_grpc//src/core:lib/gprpp/time_averaged_stats.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/time_averaged_stats.h"
  "@com_github_grpc_grpc//src/core:time_averaged_stats" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:time_averaged_stats" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:time_averaged_stats" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/gprpp/time_averaged_stats.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/time_averaged_stats.h"
  "@com_github_grpc_grpc//src/core:lib/iomgr/timer.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_generic.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_heap.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_manager.h\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_heap.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/timer.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_generic.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/timer_manager.cc"
  "@com_github_grpc_grpc//:iomgr_buffer_list"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_github_grpc_grpc//src/core:lib/iomgr/buffer_list.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/buffer_list.h"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_github_grpc_grpc//:iomgr_internal_errqueue"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:iomgr_buffer_list" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@com_github_grpc_grpc//src/core:lib/iomgr/internal_errqueue.h\n@com_github_grpc_grpc//src/core:lib/iomgr/internal_errqueue.cc"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:iomgr_internal_errqueue" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/iomgr/internal_errqueue.h\n@com_github_grpc_grpc//src/core:lib/iomgr/internal_errqueue.cc"
  "@com_github_grpc_grpc//src/core:lib/iomgr/buffer_list.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/buffer_list.h"
  "@com_github_grpc_grpc//:byte_buffer"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//src/core:lib/surface/byte_buffer.cc\n@com_github_grpc_grpc//src/core:lib/surface/byte_buffer_reader.cc"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//src/core:compression"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:byte_buffer" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:byte_buffer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:byte_buffer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/surface/byte_buffer.cc\n@com_github_grpc_grpc//src/core:lib/surface/byte_buffer_reader.cc"
  "@com_github_grpc_grpc//src/core:lib/iomgr/iomgr.h"
  "@com_github_grpc_grpc//src/core:lib/iomgr/wakeup_fd_posix.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/wakeup_fd_pipe.h\n@com_github_grpc_grpc//src/core:lib/iomgr/tcp_server_windows.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_utils_common_posix.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/endpoint_cfstream.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/resolve_address_windows.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_windows.h\n...and 90 more items"
  "@com_github_grpc_grpc//:channel"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:lib/surface/channel.cc\n@com_github_grpc_grpc//src/core:lib/surface/channel.h"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:cpp_impl_of"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:call_arena_allocator"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:call_destination"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:compression"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:channel" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:channel" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:channel" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:channel" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:channel" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:channel" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:channel" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:channel" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:channelz"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:channelz/channel_trace.h\n@com_github_grpc_grpc//src/core:channelz/channelz.h\n@com_github_grpc_grpc//src/core:channelz/channelz_registry.h\n@com_github_grpc_grpc//src/core:channelz/channel_trace.cc\n@com_github_grpc_grpc//src/core:channelz/channelz_registry.cc\n@com_github_grpc_grpc//src/core:channelz/channelz.cc"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:per_cpu"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:channelz" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:channelz" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:channelz" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:channelz" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:channelz" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:channelz" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:channelz" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:channelz" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:channelz" -> "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:connectivity_state"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//src/core:lib/transport/connectivity_state.cc\n@com_github_grpc_grpc//src/core:lib/transport/connectivity_state.h"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:connectivity_state" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/transport/connectivity_state.cc\n@com_github_grpc_grpc//src/core:lib/transport/connectivity_state.h"
  "@com_github_grpc_grpc//:parse_address"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//src/core:lib/address_utils/parse_address.h\n@com_github_grpc_grpc//src/core:lib/address_utils/parse_address.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/grpc_if_nametoindex_unsupported.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/grpc_if_nametoindex.h\n@com_github_grpc_grpc//src/core:lib/iomgr/grpc_if_nametoindex_posix.cc"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//:parse_address" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:parse_address" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:parse_address" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:parse_address" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:parse_address" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:parse_address" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:parse_address" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//:parse_address" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:lib/address_utils/parse_address.h\n@com_github_grpc_grpc//src/core:lib/address_utils/parse_address.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/grpc_if_nametoindex_unsupported.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/grpc_if_nametoindex.h\n@com_github_grpc_grpc//src/core:lib/iomgr/grpc_if_nametoindex_posix.cc"
  "@com_github_grpc_grpc//src/core:channelz/channel_trace.h\n@com_github_grpc_grpc//src/core:channelz/channelz.h\n@com_github_grpc_grpc//src/core:channelz/channelz_registry.h\n@com_github_grpc_grpc//src/core:channelz/channel_trace.cc\n@com_github_grpc_grpc//src/core:channelz/channelz_registry.cc\n@com_github_grpc_grpc//src/core:channelz/channelz.cc"
  "@com_github_grpc_grpc//src/core:lib/surface/channel.cc\n@com_github_grpc_grpc//src/core:lib/surface/channel.h"
  "@com_github_grpc_grpc//src/core:lib/channel/status_util.cc\n@com_github_grpc_grpc//src/core:lib/surface/server_call.h\n@com_github_grpc_grpc//src/core:lib/surface/call_test_only.h\n@com_github_grpc_grpc//src/core:lib/surface/filter_stack_call.h\n@com_github_grpc_grpc//src/core:lib/channel/connected_channel.h\n@com_github_grpc_grpc//src/core:lib/surface/metadata_array.cc\n@com_github_grpc_grpc//src/core:lib/compression/message_compress.cc\n...and 34 more items"
  "@com_github_grpc_grpc//:call_combiner"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//:dynamic_annotations"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//src/core:lib/iomgr/call_combiner.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/call_combiner.h"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:call_combiner" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:call_combiner" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:call_combiner" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/iomgr/call_combiner.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/call_combiner.h"
  "@com_github_grpc_grpc//:dynamic_annotations"
  "@com_github_grpc_grpc//:dynamic_annotations" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:dynamic_annotations" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:dynamic_annotations" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//:dynamic_annotations" -> "@com_github_grpc_grpc//src/core:lib/iomgr/dynamic_annotations.h"
  "@com_github_grpc_grpc//:dynamic_annotations" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:dynamic_annotations" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/iomgr/dynamic_annotations.h"
  "@com_github_grpc_grpc//:systemd"
  "@com_github_grpc_grpc//:chttp2_varint"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/varint.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/varint.h"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:chttp2_varint" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/varint.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/varint.h"
  "@com_github_grpc_grpc//:chttp2_legacy_frame"
  "@com_github_grpc_grpc//:chttp2_legacy_frame" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:chttp2_legacy_frame" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:chttp2_legacy_frame" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:chttp2_legacy_frame" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:chttp2_legacy_frame" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:chttp2_legacy_frame" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/legacy_frame.h"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/legacy_frame.h"
  "@com_github_grpc_grpc//:chttp2_bin_encoder"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/bin_encoder.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/bin_encoder.cc"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_github_grpc_grpc//src/core:huffsyms"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:chttp2_bin_encoder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:huffsyms"
  "@com_github_grpc_grpc//src/core:huffsyms" -> "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/huffsyms.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/huffsyms.h"
  "@com_github_grpc_grpc//src/core:huffsyms" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:huffsyms" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:huffsyms" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:huffsyms" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:huffsyms" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/huffsyms.cc\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/huffsyms.h"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/bin_encoder.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/bin_encoder.cc"
  "@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder.h\n@com_github_grpc_grpc//src/core:ext/transport/chttp2/transport/hpack_encoder.cc"
  "@com_github_grpc_grpc//:grpc_service_config_impl"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:service_config/service_config_impl.h\n@com_github_grpc_grpc//src/core:service_config/service_config_impl.cc"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_service_config_impl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json_writer"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@com_github_grpc_grpc//src/core:util/json/json_writer.cc\n@com_github_grpc_grpc//src/core:util/json/json_writer.h"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:json_writer" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:util/json/json_writer.cc\n@com_github_grpc_grpc//src/core:util/json/json_writer.h"
  "@com_github_grpc_grpc//src/core:json_reader"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_github_grpc_grpc//src/core:util/json/json_reader.h\n@com_github_grpc_grpc//src/core:util/json/json_reader.cc"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:json_reader" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:util/json/json_reader.h\n@com_github_grpc_grpc//src/core:util/json/json_reader.cc"
  "@com_github_grpc_grpc//src/core:json_object_loader"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//src/core:util/json/json_object_loader.cc\n@com_github_grpc_grpc//src/core:util/json/json_object_loader.h"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:json_object_loader" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:util/json/json_object_loader.cc\n@com_github_grpc_grpc//src/core:util/json/json_object_loader.h"
  "@com_github_grpc_grpc//:config"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:lib/config/core_configuration.h\n@com_github_grpc_grpc//src/core:lib/config/core_configuration.cc"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:certificate_provider_registry"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:channel_creds_registry"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:proxy_mapper_registry"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//:config" -> "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//:config" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:config" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lb_policy_registry"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//src/core:load_balancing/lb_policy_registry.cc\n@com_github_grpc_grpc//src/core:load_balancing/lb_policy_registry.h"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:lb_policy_registry" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:lb_policy_factory"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//src/core:load_balancing/lb_policy_factory.h"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lb_policy_factory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:load_balancing/lb_policy_factory.h"
  "@com_github_grpc_grpc//src/core:lb_policy"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:load_balancing/lb_policy.cc\n@com_github_grpc_grpc//src/core:load_balancing/lb_policy.h"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lb_policy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:work_serializer"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//src/core:lib/gprpp/work_serializer.h\n@com_github_grpc_grpc//src/core:lib/gprpp/work_serializer.cc"
  "@com_github_grpc_grpc//:work_serializer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:work_serializer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:work_serializer" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:lib/gprpp/work_serializer.h\n@com_github_grpc_grpc//src/core:lib/gprpp/work_serializer.cc"
  "@com_github_grpc_grpc//:stats"
  "@com_github_grpc_grpc//:stats" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:stats" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:stats" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:stats" -> "@com_github_grpc_grpc//src/core:telemetry/stats.h\n@com_github_grpc_grpc//src/core:telemetry/stats.cc"
  "@com_github_grpc_grpc//:stats" -> "@com_github_grpc_grpc//src/core:histogram_view"
  "@com_github_grpc_grpc//:stats" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//:stats" -> "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//:stats" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:stats" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//:stats" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:stats" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:stats_data"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@com_github_grpc_grpc//src/core:telemetry/stats_data.h\n@com_github_grpc_grpc//src/core:telemetry/stats_data.cc"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@com_github_grpc_grpc//src/core:histogram_view"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@com_github_grpc_grpc//src/core:per_cpu"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:stats_data" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:per_cpu"
  "@com_github_grpc_grpc//src/core:per_cpu" -> "@com_github_grpc_grpc//src/core:lib/gprpp/per_cpu.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/per_cpu.h"
  "@com_github_grpc_grpc//src/core:per_cpu" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:per_cpu" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:per_cpu" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:per_cpu" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:per_cpu" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:per_cpu" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/gprpp/per_cpu.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/per_cpu.h"
  "@com_github_grpc_grpc//src/core:telemetry/stats_data.h\n@com_github_grpc_grpc//src/core:telemetry/stats_data.cc"
  "@com_github_grpc_grpc//src/core:histogram_view"
  "@com_github_grpc_grpc//src/core:histogram_view" -> "@com_github_grpc_grpc//src/core:telemetry/histogram_view.h\n@com_github_grpc_grpc//src/core:telemetry/histogram_view.cc"
  "@com_github_grpc_grpc//src/core:histogram_view" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:histogram_view" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:histogram_view" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:histogram_view" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:histogram_view" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:telemetry/histogram_view.h\n@com_github_grpc_grpc//src/core:telemetry/histogram_view.cc"
  "@com_github_grpc_grpc//src/core:telemetry/stats.h\n@com_github_grpc_grpc//src/core:telemetry/stats.cc"
  "@com_github_grpc_grpc//src/core:subchannel_interface"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//src/core:load_balancing/subchannel_interface.h"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:subchannel_interface" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:load_balancing/subchannel_interface.h"
  "@com_github_grpc_grpc//src/core:pollset_set"
  "@com_github_grpc_grpc//src/core:pollset_set" -> "@com_github_grpc_grpc//src/core:lib/iomgr/pollset_set.h\n@com_github_grpc_grpc//src/core:lib/iomgr/pollset_set.cc"
  "@com_github_grpc_grpc//src/core:pollset_set" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:pollset_set" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:pollset_set" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:pollset_set" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:pollset_set" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:pollset_set" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/iomgr/pollset_set.h\n@com_github_grpc_grpc//src/core:lib/iomgr/pollset_set.cc"
  "@com_github_grpc_grpc//src/core:metrics"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//src/core:telemetry/metrics.cc\n@com_github_grpc_grpc//src/core:telemetry/metrics.h"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:metrics" -> "@com_google_absl//absl/types:span"
  "@com_github_grpc_grpc//src/core:metrics" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:metrics" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:call_tracer"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:telemetry/call_tracer.h\n@com_github_grpc_grpc//src/core:telemetry/call_tracer.cc"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//:tcp_tracer"
  "@com_github_grpc_grpc//:call_tracer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:call_tracer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:call_final_info"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//:call_tracer" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//:tcp_tracer"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@com_github_grpc_grpc//src/core:telemetry/tcp_tracer.h"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:tcp_tracer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:telemetry/tcp_tracer.h"
  "@com_github_grpc_grpc//src/core:telemetry/call_tracer.h\n@com_github_grpc_grpc//src/core:telemetry/call_tracer.cc"
  "@com_github_grpc_grpc//src/core:telemetry/metrics.cc\n@com_github_grpc_grpc//src/core:telemetry/metrics.h"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data" -> "@com_github_grpc_grpc//src/core:load_balancing/backend_metric_data.h"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_backend_metric_data" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:load_balancing/backend_metric_data.h"
  "@com_github_grpc_grpc//src/core:load_balancing/lb_policy.cc\n@com_github_grpc_grpc//src/core:load_balancing/lb_policy.h"
  "@com_github_grpc_grpc//src/core:load_balancing/lb_policy_registry.cc\n@com_github_grpc_grpc//src/core:load_balancing/lb_policy_registry.h"
  "@com_github_grpc_grpc//src/core:channel_init"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//src/core:lib/surface/channel_init.cc\n@com_github_grpc_grpc//src/core:lib/surface/channel_init.h"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//src/core:call_filters"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//src/core:interception_chain"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//:channel_stack_builder"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:channel_init" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:channel_stack_builder"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//src/core:lib/channel/channel_stack_builder.cc\n@com_github_grpc_grpc//src/core:lib/channel/channel_stack_builder.h"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:channel_stack_builder" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:lib/channel/channel_stack_builder.cc\n@com_github_grpc_grpc//src/core:lib/channel/channel_stack_builder.h"
  "@com_github_grpc_grpc//src/core:interception_chain"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//src/core:lib/transport/interception_chain.h\n@com_github_grpc_grpc//src/core:lib/transport/interception_chain.cc"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//src/core:call_destination"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//src/core:call_filters"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//src/core:call_spine"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//src/core:metadata"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:interception_chain" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:match"
  "@com_github_grpc_grpc//src/core:match" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:match" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:match" -> "@com_github_grpc_grpc//src/core:lib/gprpp/match.h"
  "@com_github_grpc_grpc//src/core:match" -> "@com_github_grpc_grpc//src/core:overload"
  "@com_github_grpc_grpc//src/core:match" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:match" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:match" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:match" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:overload"
  "@com_github_grpc_grpc//src/core:overload" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:overload" -> "@com_github_grpc_grpc//src/core:lib/gprpp/overload.h"
  "@com_github_grpc_grpc//src/core:overload" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:overload" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:overload" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:overload" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/overload.h"
  "@com_github_grpc_grpc//src/core:lib/gprpp/match.h"
  "@com_github_grpc_grpc//src/core:call_destination"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@com_github_grpc_grpc//src/core:lib/transport/call_destination.h"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@com_github_grpc_grpc//src/core:call_spine"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:call_destination" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:call_spine"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:lib/transport/call_spine.h\n@com_github_grpc_grpc//src/core:lib/transport/call_spine.cc"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:1999"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:call_arena_allocator"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:call_filters"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:for_each"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:if"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:latch"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:message"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:metadata"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:prioritized_race"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:promise_status"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:call_spine" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:try_seq"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//src/core:lib/promise/try_seq.h"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//src/core:basic_seq"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//src/core:promise_status"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//src/core:seq_state"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:try_seq" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/try_seq.h"
  "@com_github_grpc_grpc//src/core:prioritized_race"
  "@com_github_grpc_grpc//src/core:prioritized_race" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:prioritized_race" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:prioritized_race" -> "@com_github_grpc_grpc//src/core:lib/promise/prioritized_race.h"
  "@com_github_grpc_grpc//src/core:prioritized_race" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:prioritized_race" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:prioritized_race" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/prioritized_race.h"
  "@com_github_grpc_grpc//src/core:pipe"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:lib/promise/pipe.h"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:if"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:interceptor_list"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//src/core:seq"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:pipe" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:pipe" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:pipe" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:interceptor_list"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//src/core:lib/promise/interceptor_list.h"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:interceptor_list" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/interceptor_list.h"
  "@com_github_grpc_grpc//src/core:lib/promise/pipe.h"
  "@com_github_grpc_grpc//src/core:if"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//src/core:lib/promise/if.h"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:if" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:if" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:if" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:if" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:if" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:lib/promise/if.h"
  "@com_github_grpc_grpc//src/core:for_each"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//src/core:lib/promise/for_each.h"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//src/core:promise_status"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:for_each" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:for_each" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:for_each" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:lib/promise/for_each.h"
  "@com_github_grpc_grpc//src/core:call_arena_allocator"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@com_github_grpc_grpc//src/core:lib/transport/call_arena_allocator.cc\n@com_github_grpc_grpc//src/core:lib/transport/call_arena_allocator.h"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:call_arena_allocator" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/transport/call_arena_allocator.cc\n@com_github_grpc_grpc//src/core:lib/transport/call_arena_allocator.h"
  "@com_github_grpc_grpc//src/core:1999"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:lib/promise/party.cc\n@com_github_grpc_grpc//src/core:lib/promise/party.h"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:1999" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:1999" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:1999" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/party.cc\n@com_github_grpc_grpc//src/core:lib/promise/party.h"
  "@com_github_grpc_grpc//src/core:lib/transport/call_spine.h\n@com_github_grpc_grpc//src/core:lib/transport/call_spine.cc"
  "@com_github_grpc_grpc//src/core:lib/transport/call_destination.h"
  "@com_github_grpc_grpc//src/core:lib/transport/interception_chain.h\n@com_github_grpc_grpc//src/core:lib/transport/interception_chain.cc"
  "@com_github_grpc_grpc//src/core:channel_fwd"
  "@com_github_grpc_grpc//src/core:channel_fwd" -> "@com_github_grpc_grpc//src/core:lib/channel/channel_fwd.h"
  "@com_github_grpc_grpc//src/core:channel_fwd" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_fwd" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:channel_fwd" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:channel_fwd" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/channel/channel_fwd.h"
  "@com_github_grpc_grpc//src/core:call_filters"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:lib/transport/call_filters.h\n@com_github_grpc_grpc//src/core:lib/transport/call_filters.cc"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:call_final_info"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:dump_args"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:latch"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:message"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:metadata"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:call_filters" -> "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:promise"
  "@com_github_grpc_grpc//:promise" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:promise" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:promise" -> "@com_github_grpc_grpc//src/core:lib/promise/promise.h"
  "@com_github_grpc_grpc//:promise" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:promise" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//:promise" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//:promise" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:promise" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:promise" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:promise" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:promise" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/promise/promise.h"
  "@com_github_grpc_grpc//src/core:status_flag"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_github_grpc_grpc//src/core:lib/promise/status_flag.h"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_github_grpc_grpc//src/core:promise_status"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:status_flag" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/promise/status_flag.h"
  "@com_github_grpc_grpc//src/core:metadata"
  "@com_github_grpc_grpc//src/core:metadata" -> "@com_github_grpc_grpc//src/core:lib/transport/metadata.h\n@com_github_grpc_grpc//src/core:lib/transport/metadata.cc"
  "@com_github_grpc_grpc//src/core:metadata" -> "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:metadata" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:metadata" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:metadata" -> "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:metadata" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:metadata" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:metadata" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:metadata_batch"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:lib/transport/metadata_batch.cc\n@com_github_grpc_grpc//src/core:lib/transport/simple_slice_based_metadata.h\n@com_github_grpc_grpc//src/core:lib/transport/metadata_batch.h\n@com_github_grpc_grpc//src/core:lib/transport/custom_metadata.h"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:chunked_vector"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:compression"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:if_list"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:metadata_compression_traits"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:packed_table"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:parsed_metadata"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:timeout_encoding"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//src/core:type_list"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/base:no_destructor"
  "@com_github_grpc_grpc//src/core:metadata_batch" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//src/core:timeout_encoding"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_github_grpc_grpc//src/core:lib/transport/timeout_encoding.h\n@com_github_grpc_grpc//src/core:lib/transport/timeout_encoding.cc"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:timeout_encoding" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/transport/timeout_encoding.h\n@com_github_grpc_grpc//src/core:lib/transport/timeout_encoding.cc"
  "@com_github_grpc_grpc//src/core:parsed_metadata"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_github_grpc_grpc//src/core:lib/transport/parsed_metadata.cc\n@com_github_grpc_grpc//src/core:lib/transport/parsed_metadata.h"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:parsed_metadata" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/transport/parsed_metadata.cc\n@com_github_grpc_grpc//src/core:lib/transport/parsed_metadata.h"
  "@com_github_grpc_grpc//src/core:packed_table"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@com_github_grpc_grpc//src/core:lib/gprpp/packed_table.h"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@com_github_grpc_grpc//src/core:sorted_pack"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@com_github_grpc_grpc//src/core:table"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:packed_table" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:table"
  "@com_github_grpc_grpc//src/core:table" -> "@com_github_grpc_grpc//src/core:lib/gprpp/table.h"
  "@com_github_grpc_grpc//src/core:table" -> "@com_github_grpc_grpc//src/core:bitset"
  "@com_github_grpc_grpc//src/core:table" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:table" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:table" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:table" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:table" -> "@com_google_absl//absl/utility:utility"
  "@com_github_grpc_grpc//src/core:table" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:table" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/gprpp/table.h"
  "@com_github_grpc_grpc//src/core:sorted_pack"
  "@com_github_grpc_grpc//src/core:sorted_pack" -> "@com_github_grpc_grpc//src/core:lib/gprpp/sorted_pack.h"
  "@com_github_grpc_grpc//src/core:sorted_pack" -> "@com_github_grpc_grpc//src/core:type_list"
  "@com_github_grpc_grpc//src/core:sorted_pack" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:sorted_pack" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:sorted_pack" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:sorted_pack" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:sorted_pack" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:type_list"
  "@com_github_grpc_grpc//src/core:type_list" -> "@com_github_grpc_grpc//src/core:lib/gprpp/type_list.h"
  "@com_github_grpc_grpc//src/core:type_list" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:type_list" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:type_list" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:type_list" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/gprpp/type_list.h"
  "@com_github_grpc_grpc//src/core:lib/gprpp/sorted_pack.h"
  "@com_github_grpc_grpc//src/core:lib/gprpp/packed_table.h"
  "@com_github_grpc_grpc//src/core:metadata_compression_traits"
  "@com_github_grpc_grpc//src/core:metadata_compression_traits" -> "@com_github_grpc_grpc//src/core:lib/transport/metadata_compression_traits.h"
  "@com_github_grpc_grpc//src/core:metadata_compression_traits" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:metadata_compression_traits" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:metadata_compression_traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:metadata_compression_traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:metadata_compression_traits" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/transport/metadata_compression_traits.h"
  "@com_github_grpc_grpc//src/core:if_list"
  "@com_github_grpc_grpc//src/core:if_list" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:if_list" -> "@com_github_grpc_grpc//src/core:lib/gprpp/if_list.h"
  "@com_github_grpc_grpc//src/core:if_list" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:if_list" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:if_list" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:if_list" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/if_list.h"
  "@com_github_grpc_grpc//src/core:compression"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//src/core:lib/compression/compression_internal.cc\n@com_github_grpc_grpc//src/core:lib/compression/compression_internal.h\n@com_github_grpc_grpc//src/core:lib/compression/compression.cc"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//src/core:bitset"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:compression" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//src/core:compression" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:compression" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:api_trace"
  "@com_github_grpc_grpc//:api_trace" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:api_trace" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:api_trace" -> "@com_github_grpc_grpc//src/core:lib/surface/api_trace.h"
  "@com_github_grpc_grpc//:api_trace" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:api_trace" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:api_trace" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:api_trace" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:api_trace" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/surface/api_trace.h"
  "@com_github_grpc_grpc//src/core:lib/compression/compression_internal.cc\n@com_github_grpc_grpc//src/core:lib/compression/compression_internal.h\n@com_github_grpc_grpc//src/core:lib/compression/compression.cc"
  "@com_github_grpc_grpc//src/core:lib/transport/metadata_batch.cc\n@com_github_grpc_grpc//src/core:lib/transport/simple_slice_based_metadata.h\n@com_github_grpc_grpc//src/core:lib/transport/metadata_batch.h\n@com_github_grpc_grpc//src/core:lib/transport/custom_metadata.h"
  "@com_github_grpc_grpc//src/core:error_utils"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//src/core:lib/transport/error_utils.h\n@com_github_grpc_grpc//src/core:lib/transport/error_utils.cc"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//src/core:http2_errors"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//src/core:status_conversion"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:error_utils" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:status_conversion"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@com_github_grpc_grpc//src/core:lib/transport/status_conversion.cc\n@com_github_grpc_grpc//src/core:lib/transport/status_conversion.h"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@com_github_grpc_grpc//src/core:http2_errors"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:status_conversion" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/transport/status_conversion.cc\n@com_github_grpc_grpc//src/core:lib/transport/status_conversion.h"
  "@com_github_grpc_grpc//src/core:http2_errors"
  "@com_github_grpc_grpc//src/core:http2_errors" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:http2_errors" -> "@com_github_grpc_grpc//src/core:lib/transport/http2_errors.h"
  "@com_github_grpc_grpc//src/core:http2_errors" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:http2_errors" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:http2_errors" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/transport/http2_errors.h"
  "@com_github_grpc_grpc//src/core:lib/transport/error_utils.h\n@com_github_grpc_grpc//src/core:lib/transport/error_utils.cc"
  "@com_github_grpc_grpc//src/core:lib/transport/metadata.h\n@com_github_grpc_grpc//src/core:lib/transport/metadata.cc"
  "@com_github_grpc_grpc//src/core:message"
  "@com_github_grpc_grpc//src/core:message" -> "@com_github_grpc_grpc//src/core:lib/transport/message.cc\n@com_github_grpc_grpc//src/core:lib/transport/message.h"
  "@com_github_grpc_grpc//src/core:message" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:message" -> "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//src/core:message" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:message" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:message" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:message" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:message" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:message" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:message" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:slice_buffer"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_github_grpc_grpc//src/core:lib/slice/slice_buffer.cc\n@com_github_grpc_grpc//src/core:lib/slice/slice_buffer.h"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//src/core:slice_buffer" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/slice/slice_buffer.cc\n@com_github_grpc_grpc//src/core:lib/slice/slice_buffer.h"
  "@com_github_grpc_grpc//src/core:lib/transport/message.cc\n@com_github_grpc_grpc//src/core:lib/transport/message.h"
  "@com_github_grpc_grpc//src/core:latch"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_github_grpc_grpc//src/core:lib/promise/latch.h"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:latch" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:latch" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:latch" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:lib/promise/latch.h"
  "@com_github_grpc_grpc//src/core:dump_args"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@com_github_grpc_grpc//src/core:lib/gprpp/dump_args.h\n@com_github_grpc_grpc//src/core:lib/gprpp/dump_args.cc"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:dump_args" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/dump_args.h\n@com_github_grpc_grpc//src/core:lib/gprpp/dump_args.cc"
  "@com_github_grpc_grpc//src/core:call_final_info"
  "@com_github_grpc_grpc//src/core:call_final_info" -> "@com_github_grpc_grpc//src/core:lib/transport/call_final_info.cc\n@com_github_grpc_grpc//src/core:lib/transport/call_final_info.h"
  "@com_github_grpc_grpc//src/core:call_final_info" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:call_final_info" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:call_final_info" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:call_final_info" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:call_final_info" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:call_final_info" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/transport/call_final_info.cc\n@com_github_grpc_grpc//src/core:lib/transport/call_final_info.h"
  "@com_github_grpc_grpc//src/core:lib/transport/call_filters.h\n@com_github_grpc_grpc//src/core:lib/transport/call_filters.cc"
  "@com_github_grpc_grpc//src/core:lib/surface/channel_init.cc\n@com_github_grpc_grpc//src/core:lib/surface/channel_init.h"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_github_grpc_grpc//src/core:handshaker/proxy_mapper_registry.h\n@com_github_grpc_grpc//src/core:handshaker/proxy_mapper_registry.cc"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_github_grpc_grpc//src/core:proxy_mapper"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:proxy_mapper_registry" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:proxy_mapper"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_github_grpc_grpc//src/core:handshaker/proxy_mapper.h"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:proxy_mapper" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:handshaker/proxy_mapper.h"
  "@com_github_grpc_grpc//src/core:handshaker/proxy_mapper_registry.h\n@com_github_grpc_grpc//src/core:handshaker/proxy_mapper_registry.cc"
  "@com_github_grpc_grpc//src/core:handshaker_registry"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@com_github_grpc_grpc//src/core:handshaker/handshaker_registry.cc\n@com_github_grpc_grpc//src/core:handshaker/handshaker_registry.h"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@com_github_grpc_grpc//src/core:handshaker_factory"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:handshaker_registry" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:handshaker_factory"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@com_github_grpc_grpc//src/core:handshaker/handshaker_factory.h"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:handshaker_factory" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:handshaker/handshaker_factory.h"
  "@com_github_grpc_grpc//src/core:handshaker/handshaker_registry.cc\n@com_github_grpc_grpc//src/core:handshaker/handshaker_registry.h"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@com_github_grpc_grpc//src/core:lib/channel/channel_args_preconditioning.h\n@com_github_grpc_grpc//src/core:lib/channel/channel_args_preconditioning.cc"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:channel_args_preconditioning" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/channel/channel_args_preconditioning.h\n@com_github_grpc_grpc//src/core:lib/channel/channel_args_preconditioning.cc"
  "@com_github_grpc_grpc//src/core:channel_creds_registry"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/channel_creds_registry.h"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:channel_creds_registry" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/channel_creds_registry.h"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_github_grpc_grpc//src/core:lib/security/certificate_provider/certificate_provider_registry.cc\n@com_github_grpc_grpc//src/core:lib/security/certificate_provider/certificate_provider_registry.h"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_github_grpc_grpc//src/core:certificate_provider_factory"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:certificate_provider_registry" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//src/core:lib/security/certificate_provider/certificate_provider_factory.h"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//:alts_util"
  "@com_github_grpc_grpc//src/core:certificate_provider_factory" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:alts_util"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment_windows.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment_no_op.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment_linux.cc\n...and 6 more items"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//:alts_upb"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:alts_util" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:alts_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:alts_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:alts_util" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:alts_util" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//:alts_util" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//:alts_upb"
  "@com_github_grpc_grpc//:alts_upb" -> "@com_github_grpc_grpc//src/proto/grpc/gcp:alts_handshaker_proto"
  "@com_github_grpc_grpc//:alts_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:alts_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:alts_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:alts_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:alts_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//src/proto/grpc/gcp:alts_handshaker_proto"
  "@com_github_grpc_grpc//src/proto/grpc/gcp:alts_handshaker_proto" -> "@com_github_grpc_grpc//src/proto/grpc/gcp:transport_security_common.proto\n@com_github_grpc_grpc//src/proto/grpc/gcp:handshaker.proto\n@com_github_grpc_grpc//src/proto/grpc/gcp:altscontext.proto"
  "@com_github_grpc_grpc//src/proto/grpc/gcp:alts_handshaker_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_github_grpc_grpc//src/proto/grpc/gcp:transport_security_common.proto\n@com_github_grpc_grpc//src/proto/grpc/gcp:handshaker.proto\n@com_github_grpc_grpc//src/proto/grpc/gcp:altscontext.proto"
  "@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment_windows.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment_no_op.cc\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment.h\n@com_github_grpc_grpc//src/core:lib/security/credentials/alts/check_gcp_environment_linux.cc\n...and 6 more items"
  "@com_github_grpc_grpc//:grpc_core_credentials_header"
  "@com_github_grpc_grpc//:grpc_core_credentials_header" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_core_credentials_header" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_core_credentials_header" -> "@com_github_grpc_grpc//:include/grpc/credentials.h"
  "@com_github_grpc_grpc//:grpc_core_credentials_header" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_core_credentials_header" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:include/grpc/credentials.h"
  "@com_github_grpc_grpc//src/core:json_args"
  "@com_github_grpc_grpc//src/core:json_args" -> "@com_github_grpc_grpc//src/core:util/json/json_args.h"
  "@com_github_grpc_grpc//src/core:json_args" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:json_args" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json_args" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:json_args" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:json_args" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:json_args" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:util/json/json_args.h"
  "@com_github_grpc_grpc//src/core:lib/security/certificate_provider/certificate_provider_factory.h"
  "@com_github_grpc_grpc//src/core:lib/security/certificate_provider/certificate_provider_registry.cc\n@com_github_grpc_grpc//src/core:lib/security/certificate_provider/certificate_provider_registry.h"
  "@com_github_grpc_grpc//:grpc_resolver"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//src/core:resolver/resolver.cc\n@com_github_grpc_grpc//src/core:resolver/resolver_factory.h\n@com_github_grpc_grpc//src/core:resolver/resolver_registry.cc\n@com_github_grpc_grpc//src/core:resolver/resolver_registry.h\n@com_github_grpc_grpc//src/core:resolver/resolver.h"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:server_address"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_resolver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_service_config"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:service_config/service_config_call_data.h\n@com_github_grpc_grpc//src/core:service_config/service_config.h"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:chunked_vector"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:grpc_service_config" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:unique_type_name"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@com_github_grpc_grpc//src/core:lib/gprpp/unique_type_name.h"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:unique_type_name" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/gprpp/unique_type_name.h"
  "@com_github_grpc_grpc//src/core:service_config_parser"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_github_grpc_grpc//src/core:service_config/service_config_parser.h\n@com_github_grpc_grpc//src/core:service_config/service_config_parser.cc"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:service_config_parser" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:validation_errors"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@com_github_grpc_grpc//src/core:lib/gprpp/validation_errors.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/validation_errors.h"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:validation_errors" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/gprpp/validation_errors.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/validation_errors.h"
  "@com_github_grpc_grpc//src/core:json"
  "@com_github_grpc_grpc//src/core:json" -> "@com_github_grpc_grpc//src/core:util/json/json.h"
  "@com_github_grpc_grpc//src/core:json" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:json" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:json" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:json" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:json" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:util/json/json.h"
  "@com_github_grpc_grpc//src/core:service_config/service_config_parser.h\n@com_github_grpc_grpc//src/core:service_config/service_config_parser.cc"
  "@com_github_grpc_grpc//src/core:chunked_vector"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@com_github_grpc_grpc//src/core:lib/gprpp/chunked_vector.h"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:chunked_vector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/chunked_vector.h"
  "@com_github_grpc_grpc//src/core:arena"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//src/core:lib/resource_quota/arena.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/arena.cc"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//src/core:event_engine_memory_allocator"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:arena" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:arena" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:arena" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:resource_quota"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//src/core:lib/resource_quota/resource_quota.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/resource_quota.cc"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//src/core:connection_quota"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//src/core:thread_quota"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//:cpp_impl_of"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:resource_quota" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:cpp_impl_of"
  "@com_github_grpc_grpc//:cpp_impl_of" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:cpp_impl_of" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:cpp_impl_of" -> "@com_github_grpc_grpc//src/core:lib/gprpp/cpp_impl_of.h"
  "@com_github_grpc_grpc//:cpp_impl_of" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:cpp_impl_of" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/cpp_impl_of.h"
  "@com_github_grpc_grpc//src/core:thread_quota"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_github_grpc_grpc//src/core:lib/resource_quota/thread_quota.cc\n@com_github_grpc_grpc//src/core:lib/resource_quota/thread_quota.h"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:thread_quota" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:lib/resource_quota/thread_quota.cc\n@com_github_grpc_grpc//src/core:lib/resource_quota/thread_quota.h"
  "@com_github_grpc_grpc//src/core:connection_quota"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_github_grpc_grpc//src/core:lib/resource_quota/connection_quota.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/connection_quota.cc"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:connection_quota" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:lib/resource_quota/connection_quota.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/connection_quota.cc"
  "@com_github_grpc_grpc//src/core:lib/resource_quota/resource_quota.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/resource_quota.cc"
  "@com_github_grpc_grpc//src/core:memory_quota"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:lib/resource_quota/memory_quota.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/memory_quota.cc"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:event_engine_memory_allocator"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:loop"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:periodic_update"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:race"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:seq"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:memory_quota" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:seq"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//src/core:lib/promise/seq.h"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//src/core:basic_seq"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//src/core:seq_state"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:seq" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:seq" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:seq" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:seq_state"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//src/core:lib/promise/detail/seq_state.h"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:seq_state" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/promise/detail/seq_state.h"
  "@com_github_grpc_grpc//src/core:basic_seq"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@com_github_grpc_grpc//src/core:lib/promise/detail/basic_seq.h"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:basic_seq" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/promise/detail/basic_seq.h"
  "@com_github_grpc_grpc//src/core:lib/promise/seq.h"
  "@com_github_grpc_grpc//src/core:race"
  "@com_github_grpc_grpc//src/core:race" -> "@com_github_grpc_grpc//src/core:lib/promise/race.h"
  "@com_github_grpc_grpc//src/core:race" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:race" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:race" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:race" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:race" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/race.h"
  "@com_github_grpc_grpc//src/core:periodic_update"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@com_github_grpc_grpc//src/core:lib/resource_quota/periodic_update.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/periodic_update.cc"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:periodic_update" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/resource_quota/periodic_update.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/periodic_update.cc"
  "@com_github_grpc_grpc//src/core:map"
  "@com_github_grpc_grpc//src/core:map" -> "@com_github_grpc_grpc//src/core:lib/promise/map.h"
  "@com_github_grpc_grpc//src/core:map" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:map" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:map" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:map" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:map" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:map" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:map" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/promise/map.h"
  "@com_github_grpc_grpc//src/core:loop"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_github_grpc_grpc//src/core:lib/promise/loop.h"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:loop" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:loop" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:loop" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/promise/loop.h"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//src/core:lib/promise/exec_ctx_wakeup_scheduler.h"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:exec_ctx_wakeup_scheduler" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:exec_ctx"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:lib/iomgr/exec_ctx.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/executor.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/exec_ctx.h\n@com_github_grpc_grpc//src/core:lib/iomgr/executor.h\n@com_github_grpc_grpc//src/core:lib/iomgr/combiner.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/iomgr_internal.h\n@com_github_grpc_grpc//src/core:lib/iomgr/combiner.h\n@com_github_grpc_grpc//src/core:lib/iomgr/iomgr_internal.cc"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:gpr_spinlock"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:exec_ctx" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:exec_ctx" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//:exec_ctx" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:experiments"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_github_grpc_grpc//src/core:lib/experiments/experiments.cc\n@com_github_grpc_grpc//src/core:lib/experiments/config.cc\n@com_github_grpc_grpc//src/core:lib/experiments/experiments.h\n@com_github_grpc_grpc//src/core:lib/experiments/config.h"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_github_grpc_grpc//:grpc_experiments_are_final"
  "@com_github_grpc_grpc//src/core:experiments" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:experiments" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:experiments" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:grpc_experiments_are_final"
  "@com_github_grpc_grpc//:grpc_experiments_are_final" -> "@com_github_grpc_grpc//:grpc_experiments_are_final_define"
  [label="@@com_github_grpc_grpc//:grpc_experiments_are_final_define"];
  "@com_github_grpc_grpc//:grpc_experiments_are_final" -> "@com_github_grpc_grpc//:grpc_experiments_are_final_2"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:grpc_experiments_are_final_2"
  "@com_github_grpc_grpc//:grpc_experiments_are_final_2" -> "@com_github_grpc_grpc//:android"
  [label="@@com_github_grpc_grpc//:android"];
  "@com_github_grpc_grpc//:grpc_experiments_are_final_2" -> "@com_github_grpc_grpc//:ios"
  [label="//conditions:default"];
  "@com_github_grpc_grpc//:ios"
  "@com_github_grpc_grpc//:android"
  "@com_github_grpc_grpc//:grpc_experiments_are_final_define"
  "@com_github_grpc_grpc//src/core:lib/experiments/experiments.cc\n@com_github_grpc_grpc//src/core:lib/experiments/config.cc\n@com_github_grpc_grpc//src/core:lib/experiments/experiments.h\n@com_github_grpc_grpc//src/core:lib/experiments/config.h"
  "@com_github_grpc_grpc//src/core:lib/iomgr/exec_ctx.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/executor.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/exec_ctx.h\n@com_github_grpc_grpc//src/core:lib/iomgr/executor.h\n@com_github_grpc_grpc//src/core:lib/iomgr/combiner.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/iomgr_internal.h\n@com_github_grpc_grpc//src/core:lib/iomgr/combiner.h\n@com_github_grpc_grpc//src/core:lib/iomgr/iomgr_internal.cc"
  "@com_github_grpc_grpc//src/core:closure"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_github_grpc_grpc//src/core:lib/iomgr/closure.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/closure.h"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//src/core:closure" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:closure" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:closure" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor" -> "@com_github_grpc_grpc//src/core:lib/gprpp/manual_constructor.h"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:gpr_manual_constructor" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/gprpp/manual_constructor.h"
  "@com_github_grpc_grpc//src/core:error"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//src/core:lib/iomgr/error.h\n@com_github_grpc_grpc//src/core:lib/iomgr/error.cc"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//src/core:gpr_spinlock"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:error" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:error" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:error" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:error" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:error" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:error" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:error" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//src/core:error" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:status_helper"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//src/core:lib/gprpp/status_helper.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/status_helper.h"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//src/core:percent_encoding"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//:google_rpc_status_upb"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//:protobuf_any_upb"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_absl//absl/strings:cord"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_protobuf//upb:base"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_protobuf//upb:mem"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:status_helper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:protobuf_any_upb"
  "@com_github_grpc_grpc//:protobuf_any_upb" -> "@com_google_protobuf//:any_proto"
  "@com_github_grpc_grpc//:protobuf_any_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:protobuf_any_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_github_grpc_grpc//:protobuf_any_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:protobuf_any_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:protobuf_any_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:google_rpc_status_upb"
  "@com_github_grpc_grpc//:google_rpc_status_upb" -> "@com_google_googleapis//google/rpc:status_proto"
  "@com_github_grpc_grpc//:google_rpc_status_upb" -> "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_github_grpc_grpc//:google_rpc_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_github_grpc_grpc//:google_rpc_status_upb" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:google_rpc_status_upb" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_github_grpc_grpc//:google_rpc_status_upb" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_toolchain" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage1" -> "@bazel_tools//tools/cpp:malloc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb.cc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb_generator:common_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb_generator:file_layout_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb_generator:names_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb_generator:plugin_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb:wire_reader"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb/reflection:reflection_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_toolchain" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1" -> "@bazel_tools//tools/cpp:malloc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable-main.cc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb_generator:file_layout_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb_generator:common_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb_generator:plugin_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable.h\n@com_google_protobuf//upb_generator:protoc-gen-upb_minitable.cc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb_generator:common_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb_generator:file_layout_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb_generator:names_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb_generator:plugin_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb:wire_reader"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@com_google_protobuf//upb/reflection:reflection_stage1"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:names_stage1"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@com_google_protobuf//upb_generator:names.h\n@com_google_protobuf//upb_generator:names.cc"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@com_google_protobuf//:protobuf"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@com_google_protobuf//upb/reflection:reflection_stage1"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:names_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_stage1"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_protobuf//upb_generator:plugin.h"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_protobuf//upb/reflection:reflection_stage1"
  "@com_google_protobuf//upb_generator:plugin_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1" -> "@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb.h"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1" -> "@com_google_protobuf//upb_generator:plugin_upb_proto_minitable_stage1"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_minitable_stage1"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_minitable_stage1" -> "@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb_minitable.c\n@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb_minitable.h"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_minitable_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_minitable_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_minitable_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_minitable_stage1" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb_minitable.c\n@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb_minitable.h"
  "@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb_minitable.c\n@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb_minitable.h" -> "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_minitable_stage1"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_minitable_stage1"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_minitable_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_minitable_stage1" -> "@com_google_protobuf//:descriptor_proto_srcs"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_minitable_stage1" -> "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto_src"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_minitable_stage1" -> "@com_google_protobuf//:protoc"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_minitable_stage1" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb.h"
  "@com_google_protobuf//upb_generator:stage1/google/protobuf/compiler/plugin.upb.h" -> "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_stage1"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_stage1"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_stage1" -> "@com_google_protobuf//:descriptor_proto_srcs"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_stage1" -> "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto_src"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_stage1" -> "@com_google_protobuf//:protoc"
  "@com_google_protobuf//upb_generator:gen_plugin_upb_proto_upb_stage1" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto_src"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto_src" -> "@com_google_protobuf//src/google/protobuf/compiler:plugin.proto"
  "@com_google_protobuf//upb_generator:file_layout_stage1"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb_generator:file_layout.cc\n@com_google_protobuf//upb_generator:file_layout.h"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb_generator:common_stage1"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb/reflection:reflection_stage1"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:file_layout_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:common_stage1"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@com_google_protobuf//upb_generator:common.h\n@com_google_protobuf//upb_generator:common.cc"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@com_google_protobuf//upb_generator:mangle"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@com_google_protobuf//upb/reflection:reflection_stage1"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:common_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:reflection_stage1"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb/reflection:message.h\n@com_google_protobuf//upb/reflection:message.hpp\n@com_google_protobuf//upb/reflection:def.hpp"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb/reflection:internal_stage1"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/reflection:reflection_stage1" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/reflection:internal_stage1"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/reflection:internal/method_def.h\n@com_google_protobuf//upb/reflection:internal/enum_reserved_range.h\n@com_google_protobuf//upb/reflection:message_def.h\n@com_google_protobuf//upb/reflection:internal/service_def.h\n@com_google_protobuf//upb/reflection:extension_range.c\n@com_google_protobuf//upb/reflection:common.h\n@com_google_protobuf//upb/reflection:oneof_def.c\n@com_google_protobuf//upb/reflection:internal/strdup2.c\n...and 38 more items"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/reflection:message.h\n@com_google_protobuf//upb/reflection:message.hpp\n@com_google_protobuf//upb/reflection:def.hpp"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/reflection:internal/def_pool.h"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/mini_descriptor:internal"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:wire"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:message_copy"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/reflection:internal_stage1" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1" -> "@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb.h"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_minitable_stage1"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage1" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_minitable_stage1"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_minitable_stage1" -> "@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb_minitable.h\n@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb_minitable.c"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_minitable_stage1" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_minitable_stage1" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_minitable_stage1" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb_minitable.h\n@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb_minitable.c"
  "@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb_minitable.h\n@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb_minitable.c" -> "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_minitable_stage1"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_minitable_stage1"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_minitable_stage1" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_minitable_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_minitable_stage1" -> "@com_google_protobuf//:protoc"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_minitable_stage1" -> "@com_google_protobuf//:descriptor_proto_srcs"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0" -> "@bazel_tools//tools/cpp:malloc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable-main.cc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb_generator:file_layout_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb_generator:common_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb_generator:plugin_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_lib_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable.h\n@com_google_protobuf//upb_generator:protoc-gen-upb_minitable.cc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb_generator:common_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb_generator:file_layout_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb_generator:names_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb_generator:plugin_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb:wire_reader"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@com_google_protobuf//upb/reflection:reflection_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable_lib_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable.h\n@com_google_protobuf//upb_generator:protoc-gen-upb_minitable.cc"
  "@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb.h"
  "@com_google_protobuf//upb/reflection:stage1/google/protobuf/descriptor.upb.h" -> "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_stage1"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_stage1"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_stage1" -> "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_stage1" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_stage1" -> "@com_google_protobuf//:protoc"
  "@com_google_protobuf//upb/reflection:gen_descriptor_upb_proto_upb_stage1" -> "@com_google_protobuf//:descriptor_proto_srcs"
  "@com_google_protobuf//:descriptor_proto_srcs"
  "@com_google_protobuf//:descriptor_proto_srcs" -> "@com_google_protobuf//src/google/protobuf:descriptor_proto_srcs"
  "@com_google_protobuf//src/google/protobuf:descriptor_proto_srcs"
  "@com_google_protobuf//src/google/protobuf:descriptor_proto_srcs" -> "@com_google_protobuf//src/google/protobuf:descriptor.proto"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0" -> "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0" -> "@bazel_tools//tools/cpp:malloc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb_generator:protoc-gen-upb.cc"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb_generator:common_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb_generator:file_layout_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb_generator:names_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb_generator:plugin_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb:wire_reader"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@com_google_protobuf//upb/reflection:reflection_stage0"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_lib_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_stage0"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_protobuf//upb_generator:plugin.h"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@com_google_protobuf//upb/reflection:reflection_stage0"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:plugin_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0" -> "@com_google_protobuf//upb_generator:stage0/google/protobuf/compiler/plugin.upb.c\n@com_google_protobuf//upb_generator:stage0/google/protobuf/compiler/plugin.upb.h"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:plugin_upb_proto_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:stage0/google/protobuf/compiler/plugin.upb.c\n@com_google_protobuf//upb_generator:stage0/google/protobuf/compiler/plugin.upb.h"
  "@com_google_protobuf//upb_generator:plugin.h"
  "@com_google_protobuf//upb_generator:names_stage0"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@com_google_protobuf//upb_generator:names.h\n@com_google_protobuf//upb_generator:names.cc"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@com_google_protobuf//:protobuf"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@com_google_protobuf//upb/reflection:reflection_stage0"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:names_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//:protobuf"
  "@com_google_protobuf//:protobuf" -> "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:unknown_field_set.h\n@com_google_protobuf//src/google/protobuf:message.h\n@com_google_protobuf//src/google/protobuf:reflection_ops.h\n@com_google_protobuf//src/google/protobuf:metadata.h\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_gen.h\n@com_google_protobuf//src/google/protobuf:reflection_internal.h\n@com_google_protobuf//src/google/protobuf:descriptor_visitor.h\n...and 21 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//build_defs:config_android-stlport\n@com_google_protobuf//build_defs:config_android-default\n@com_google_protobuf//build_defs:config_android-gnu-libstdcpp\n@com_google_protobuf//build_defs:config_android-libcpp\n@com_google_protobuf//build_defs:config_android-legacy-default-crosstool"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//build_defs:config_android"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@platforms//os:macos"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:any_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:api_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:duration_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:empty_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:field_mask_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:source_context_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:struct_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:timestamp_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:type_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf:wrappers_cc_proto"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf/util:type_resolver"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf/compiler:importer"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf/util:delimited_message_util"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf/util:differencer"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf/util:time_util"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf/util:json_util"
  "@com_google_protobuf//src/google/protobuf:protobuf_layering_check_legacy" -> "@com_google_protobuf//src/google/protobuf/util:field_mask_util"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_protobuf//src/google/protobuf/util:field_mask_util.cc\n@com_google_protobuf//src/google/protobuf/util:field_mask_util.h"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_absl//absl/memory:memory"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_protobuf//src/google/protobuf:field_mask_cc_proto"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_absl//absl/log:die_if_null"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/util:field_mask_util.cc\n@com_google_protobuf//src/google/protobuf/util:field_mask_util.h"
  "@com_google_protobuf//src/google/protobuf/util:json_util"
  "@com_google_protobuf//src/google/protobuf/util:json_util" -> "@com_google_protobuf//src/google/protobuf/util:json_util.h"
  "@com_google_protobuf//src/google/protobuf/util:json_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/util:json_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/util:json_util" -> "@com_google_protobuf//src/google/protobuf/json:json"
  "@com_google_protobuf//src/google/protobuf/util:json_util" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:json"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf/json:json.cc\n@com_google_protobuf//src/google/protobuf/json:json.h"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf/json:parser"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf/json:unparser"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_absl//absl/flags:flag"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf/util:type_resolver"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_absl//absl/base:base"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/json:json" -> "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink"
  "@com_google_protobuf//src/google/protobuf/json:unparser"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf/json:internal/unparser.h\n@com_google_protobuf//src/google/protobuf/json:internal/unparser_traits.h\n@com_google_protobuf//src/google/protobuf/json:internal/unparser.cc"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf/json:descriptor_traits"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf/json:untyped_message"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf/json:writer"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf:type_cc_proto"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/types:variant"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/json:unparser" -> "@com_google_protobuf//src/google/protobuf/util:type_resolver"
  "@com_google_protobuf//src/google/protobuf/json:writer"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_protobuf//src/google/protobuf/json:internal/writer.cc\n@com_google_protobuf//src/google/protobuf/json:internal/writer.h"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/json:writer" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/json:internal/writer.cc\n@com_google_protobuf//src/google/protobuf/json:internal/writer.h"
  "@com_google_protobuf//src/google/protobuf/json:internal/unparser.h\n@com_google_protobuf//src/google/protobuf/json:internal/unparser_traits.h\n@com_google_protobuf//src/google/protobuf/json:internal/unparser.cc"
  "@com_google_protobuf//src/google/protobuf/json:parser"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf/json:internal/parser_traits.h\n@com_google_protobuf//src/google/protobuf/json:internal/parser.h\n@com_google_protobuf//src/google/protobuf/json:internal/parser.cc"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf/json:descriptor_traits"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf/json:lexer"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf:type_cc_proto"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf/util:type_resolver"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/base:base"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:parser" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_protobuf//src/google/protobuf/json:internal/descriptor_traits.h"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_protobuf//src/google/protobuf/json:lexer"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_protobuf//src/google/protobuf/json:untyped_message"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/json:descriptor_traits" -> "@com_google_protobuf//src/google/protobuf/util:type_resolver"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf/json:internal/untyped_message.h\n@com_google_protobuf//src/google/protobuf/json:internal/untyped_message.cc"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf:type_cc_proto"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//src/google/protobuf/util:type_resolver"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_protobuf//third_party/utf8_range:utf8_validity"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/types:variant"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/json:untyped_message" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:internal/untyped_message.h\n@com_google_protobuf//src/google/protobuf/json:internal/untyped_message.cc"
  "@com_google_protobuf//src/google/protobuf/json:lexer"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//src/google/protobuf/json:internal/lexer.cc\n@com_google_protobuf//src/google/protobuf/json:internal/lexer.h"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//src/google/protobuf/json:message_path"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//third_party/utf8_range:utf8_validity"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:lexer" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_protobuf//src/google/protobuf/json:internal/zero_copy_buffered_stream.cc\n@com_google_protobuf//src/google/protobuf/json:internal/zero_copy_buffered_stream.h"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:zero_copy_buffered_stream" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:internal/zero_copy_buffered_stream.cc\n@com_google_protobuf//src/google/protobuf/json:internal/zero_copy_buffered_stream.h"
  "@com_google_protobuf//src/google/protobuf/json:message_path"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@com_google_protobuf//src/google/protobuf/json:internal/message_path.h\n@com_google_protobuf//src/google/protobuf/json:internal/message_path.cc"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/json:message_path" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/json:internal/message_path.h\n@com_google_protobuf//src/google/protobuf/json:internal/message_path.cc"
  "@com_google_protobuf//src/google/protobuf/json:internal/lexer.cc\n@com_google_protobuf//src/google/protobuf/json:internal/lexer.h"
  "@com_google_protobuf//src/google/protobuf/json:internal/descriptor_traits.h"
  "@com_google_protobuf//src/google/protobuf/json:internal/parser_traits.h\n@com_google_protobuf//src/google/protobuf/json:internal/parser.h\n@com_google_protobuf//src/google/protobuf/json:internal/parser.cc"
  "@com_google_protobuf//src/google/protobuf/json:json.cc\n@com_google_protobuf//src/google/protobuf/json:json.h"
  "@com_google_protobuf//src/google/protobuf/util:json_util.h"
  "@com_google_protobuf//src/google/protobuf/util:time_util"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_protobuf//src/google/protobuf/util:time_util.h\n@com_google_protobuf//src/google/protobuf/util:time_util.cc"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_absl//absl/time:time"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_protobuf//src/google/protobuf:timestamp_cc_proto"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_protobuf//src/google/protobuf:duration_cc_proto"
  "@com_google_protobuf//src/google/protobuf/util:time_util" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/util:time_util.h\n@com_google_protobuf//src/google/protobuf/util:time_util.cc"
  "@com_google_protobuf//src/google/protobuf/util:differencer"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_protobuf//src/google/protobuf/util:message_differencer.h\n@com_google_protobuf//src/google/protobuf/util:message_differencer.cc\n@com_google_protobuf//src/google/protobuf/util:field_comparator.cc\n@com_google_protobuf//src/google/protobuf/util:field_comparator.h"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_absl//absl/container:fixed_array"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/util:differencer" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/util:message_differencer.h\n@com_google_protobuf//src/google/protobuf/util:message_differencer.cc\n@com_google_protobuf//src/google/protobuf/util:field_comparator.cc\n@com_google_protobuf//src/google/protobuf/util:field_comparator.h"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util" -> "@com_google_protobuf//src/google/protobuf/util:delimited_message_util.cc\n@com_google_protobuf//src/google/protobuf/util:delimited_message_util.h"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util" -> "@com_google_protobuf//:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//:protobuf_lite"
  "@com_google_protobuf//:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/util:delimited_message_util.cc\n@com_google_protobuf//src/google/protobuf/util:delimited_message_util.h"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf/util:type_resolver_util.h\n@com_google_protobuf//src/google/protobuf/util:type_resolver.h\n@com_google_protobuf//src/google/protobuf/util:type_resolver_util.cc"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf:wrappers_cc_proto"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf:type_cc_proto"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf:source_context_cc_proto"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf:descriptor_legacy"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@com_google_protobuf//src/google/protobuf:descriptor_legacy.h"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@platforms//os:macos"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@com_google_protobuf//build_defs:config_android-stlport\n@com_google_protobuf//build_defs:config_android-default\n@com_google_protobuf//build_defs:config_android-gnu-libstdcpp\n@com_google_protobuf//build_defs:config_android-libcpp\n@com_google_protobuf//build_defs:config_android-legacy-default-crosstool"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy" -> "@com_google_protobuf//build_defs:config_android"
  "@com_google_protobuf//src/google/protobuf:descriptor_legacy.h"
  "@com_google_protobuf//src/google/protobuf/util:type_resolver_util.h\n@com_google_protobuf//src/google/protobuf/util:type_resolver.h\n@com_google_protobuf//src/google/protobuf/util:type_resolver_util.cc"
  "@com_google_protobuf//src/google/protobuf:wrappers_cc_proto"
  "@com_google_protobuf//src/google/protobuf:wrappers_cc_proto" -> "@com_google_protobuf//src/google/protobuf:wrappers_proto"
  "@com_google_protobuf//src/google/protobuf:wrappers_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:wrappers_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:wrappers_proto"
  "@com_google_protobuf//src/google/protobuf:wrappers_proto" -> "@com_google_protobuf//src/google/protobuf:wrappers.proto"
  "@com_google_protobuf//src/google/protobuf:wrappers_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:wrappers.proto"
  "@com_google_protobuf//src/google/protobuf:type_cc_proto"
  "@com_google_protobuf//src/google/protobuf:type_cc_proto" -> "@com_google_protobuf//src/google/protobuf:type_proto"
  "@com_google_protobuf//src/google/protobuf:type_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:type_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:timestamp_cc_proto"
  "@com_google_protobuf//src/google/protobuf:timestamp_cc_proto" -> "@com_google_protobuf//src/google/protobuf:timestamp_proto"
  "@com_google_protobuf//src/google/protobuf:timestamp_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:timestamp_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:timestamp_proto"
  "@com_google_protobuf//src/google/protobuf:timestamp_proto" -> "@com_google_protobuf//src/google/protobuf:timestamp.proto"
  "@com_google_protobuf//src/google/protobuf:timestamp_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:timestamp.proto"
  "@com_google_protobuf//src/google/protobuf:struct_cc_proto"
  "@com_google_protobuf//src/google/protobuf:struct_cc_proto" -> "@com_google_protobuf//src/google/protobuf:struct_proto"
  "@com_google_protobuf//src/google/protobuf:struct_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:struct_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:struct_proto"
  "@com_google_protobuf//src/google/protobuf:struct_proto" -> "@com_google_protobuf//src/google/protobuf:struct.proto"
  "@com_google_protobuf//src/google/protobuf:struct_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:struct.proto"
  "@com_google_protobuf//src/google/protobuf:source_context_cc_proto"
  "@com_google_protobuf//src/google/protobuf:source_context_cc_proto" -> "@com_google_protobuf//src/google/protobuf:source_context_proto"
  "@com_google_protobuf//src/google/protobuf:source_context_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:source_context_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:field_mask_cc_proto"
  "@com_google_protobuf//src/google/protobuf:field_mask_cc_proto" -> "@com_google_protobuf//src/google/protobuf:field_mask_proto"
  "@com_google_protobuf//src/google/protobuf:field_mask_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:field_mask_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:field_mask_proto"
  "@com_google_protobuf//src/google/protobuf:field_mask_proto" -> "@com_google_protobuf//src/google/protobuf:field_mask.proto"
  "@com_google_protobuf//src/google/protobuf:field_mask_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:field_mask.proto"
  "@com_google_protobuf//src/google/protobuf:empty_cc_proto"
  "@com_google_protobuf//src/google/protobuf:empty_cc_proto" -> "@com_google_protobuf//src/google/protobuf:empty_proto"
  "@com_google_protobuf//src/google/protobuf:empty_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:empty_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:empty_proto"
  "@com_google_protobuf//src/google/protobuf:empty_proto" -> "@com_google_protobuf//src/google/protobuf:empty.proto"
  "@com_google_protobuf//src/google/protobuf:empty_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:empty.proto"
  "@com_google_protobuf//src/google/protobuf:duration_cc_proto"
  "@com_google_protobuf//src/google/protobuf:duration_cc_proto" -> "@com_google_protobuf//src/google/protobuf:duration_proto"
  "@com_google_protobuf//src/google/protobuf:duration_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:duration_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:duration_proto"
  "@com_google_protobuf//src/google/protobuf:duration_proto" -> "@com_google_protobuf//src/google/protobuf:duration.proto"
  "@com_google_protobuf//src/google/protobuf:duration_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:duration.proto"
  "@com_google_protobuf//src/google/protobuf:api_cc_proto"
  "@com_google_protobuf//src/google/protobuf:api_cc_proto" -> "@com_google_protobuf//src/google/protobuf:api_proto"
  "@com_google_protobuf//src/google/protobuf:api_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:api_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:api_proto"
  "@com_google_protobuf//src/google/protobuf:api_proto" -> "@com_google_protobuf//src/google/protobuf:api.proto"
  "@com_google_protobuf//src/google/protobuf:api_proto" -> "@com_google_protobuf//:source_context_proto"
  "@com_google_protobuf//src/google/protobuf:api_proto" -> "@com_google_protobuf//:type_proto"
  "@com_google_protobuf//src/google/protobuf:api_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//:type_proto"
  "@com_google_protobuf//:type_proto" -> "@com_google_protobuf//src/google/protobuf:type_proto"
  "@com_google_protobuf//src/google/protobuf:type_proto"
  "@com_google_protobuf//src/google/protobuf:type_proto" -> "@com_google_protobuf//src/google/protobuf:type.proto"
  "@com_google_protobuf//src/google/protobuf:type_proto" -> "@com_google_protobuf//:any_proto"
  "@com_google_protobuf//src/google/protobuf:type_proto" -> "@com_google_protobuf//:source_context_proto"
  "@com_google_protobuf//src/google/protobuf:type_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:type.proto"
  "@com_google_protobuf//:source_context_proto"
  "@com_google_protobuf//:source_context_proto" -> "@com_google_protobuf//src/google/protobuf:source_context_proto"
  "@com_google_protobuf//src/google/protobuf:source_context_proto"
  "@com_google_protobuf//src/google/protobuf:source_context_proto" -> "@com_google_protobuf//src/google/protobuf:source_context.proto"
  "@com_google_protobuf//src/google/protobuf:source_context_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:source_context.proto"
  "@com_google_protobuf//src/google/protobuf:api.proto"
  "@com_google_protobuf//src/google/protobuf:any_cc_proto"
  "@com_google_protobuf//src/google/protobuf:any_cc_proto" -> "@com_google_protobuf//src/google/protobuf:any_proto"
  "@com_google_protobuf//src/google/protobuf:any_cc_proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:any_cc_proto" -> "@bazel_tools//tools/proto:cc_toolchain"
  "@bazel_tools//tools/proto:cc_toolchain"
  "@bazel_tools//tools/proto:cc_toolchain" -> "@com_google_protobuf//:cc_toolchain"
  "@com_google_protobuf//:cc_toolchain"
  "@com_google_protobuf//:cc_toolchain" -> "@com_google_protobuf//:compiler_plugin_proto"
  "@com_google_protobuf//:cc_toolchain" -> "@com_google_protobuf//:cpp_features_proto"
  "@com_google_protobuf//:cc_toolchain" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//:cc_toolchain" -> "@com_google_protobuf//:descriptor_proto"
  "@com_google_protobuf//:cc_toolchain" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//:cpp_features_proto"
  "@com_google_protobuf//:cpp_features_proto" -> "@com_google_protobuf//src/google/protobuf:cpp_features_proto"
  "@com_google_protobuf//src/google/protobuf:cpp_features_proto"
  "@com_google_protobuf//src/google/protobuf:cpp_features_proto" -> "@com_google_protobuf//src/google/protobuf:cpp_features.proto"
  "@com_google_protobuf//src/google/protobuf:cpp_features_proto" -> "@com_google_protobuf//src/google/protobuf:descriptor_proto"
  "@com_google_protobuf//src/google/protobuf:cpp_features_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:cpp_features.proto"
  "@com_google_protobuf//:compiler_plugin_proto"
  "@com_google_protobuf//:compiler_plugin_proto" -> "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto" -> "@com_google_protobuf//src/google/protobuf/compiler:plugin.proto"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin_proto" -> "@com_google_protobuf//:descriptor_proto"
  "@com_google_protobuf//:descriptor_proto"
  "@com_google_protobuf//:descriptor_proto" -> "@com_google_protobuf//src/google/protobuf:descriptor_proto"
  "@com_google_protobuf//src/google/protobuf:descriptor_proto"
  "@com_google_protobuf//src/google/protobuf:descriptor_proto" -> "@com_google_protobuf//src/google/protobuf:descriptor.proto"
  "@com_google_protobuf//src/google/protobuf:descriptor_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:descriptor.proto"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin.proto"
  "@com_google_protobuf//upb_generator:names.h\n@com_google_protobuf//upb_generator:names.cc"
  "@com_google_protobuf//upb_generator:file_layout_stage0"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb_generator:file_layout.cc\n@com_google_protobuf//upb_generator:file_layout.h"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb_generator:common_stage0"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb/reflection:reflection_stage0"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:file_layout_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:common_stage0"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@com_google_protobuf//upb_generator:common.h\n@com_google_protobuf//upb_generator:common.cc"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@com_google_protobuf//upb_generator:mangle"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@com_google_protobuf//upb/reflection:reflection_stage0"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:common_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:reflection_stage0"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb/reflection:message.h\n@com_google_protobuf//upb/reflection:message.hpp\n@com_google_protobuf//upb/reflection:def.hpp"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb/reflection:internal_stage0"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/reflection:reflection_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/reflection:internal_stage0"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/reflection:internal/method_def.h\n@com_google_protobuf//upb/reflection:internal/enum_reserved_range.h\n@com_google_protobuf//upb/reflection:message_def.h\n@com_google_protobuf//upb/reflection:internal/service_def.h\n@com_google_protobuf//upb/reflection:extension_range.c\n@com_google_protobuf//upb/reflection:common.h\n@com_google_protobuf//upb/reflection:oneof_def.c\n@com_google_protobuf//upb/reflection:internal/strdup2.c\n...and 38 more items"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/reflection:message.h\n@com_google_protobuf//upb/reflection:message.hpp\n@com_google_protobuf//upb/reflection:def.hpp"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/reflection:internal/def_pool.h"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/mini_descriptor:internal"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:wire"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:message_copy"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/reflection:internal_stage0" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb:message_copy"
  "@com_google_protobuf//upb:message_copy" -> "@com_google_protobuf//upb/message:copy"
  "@com_google_protobuf//upb/message:copy"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb/message:copy.h\n@com_google_protobuf//upb/message:copy.c"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb/message:message"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/message:copy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/message:copy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/message:copy" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/message:copy.h\n@com_google_protobuf//upb/message:copy.c"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0" -> "@com_google_protobuf//upb/reflection:stage0/google/protobuf/descriptor.upb.h\n@com_google_protobuf//upb/reflection:stage0/google/protobuf/descriptor.upb.c"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/reflection:descriptor_upb_proto_stage0" -> "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:generated_code_support.h"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:port_inc"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb:wire"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb:generated_code_support__only_for_generated_code_do_not_use__i_give_permission_to_break_me" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb:wire"
  "@com_google_protobuf//upb:wire" -> "@com_google_protobuf//upb/wire:wire"
  "@com_google_protobuf//upb/wire:wire"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/wire:encode.h\n@com_google_protobuf//upb/wire:internal/decoder.h\n@com_google_protobuf//upb/wire:decode.h\n@com_google_protobuf//upb/wire:encode.c\n@com_google_protobuf//upb/wire:internal/constants.h\n@com_google_protobuf//upb/wire:internal/decode_fast.h\n@com_google_protobuf//upb/wire:internal/decode_fast.c\n@com_google_protobuf//upb/wire:decode.c"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/wire:eps_copy_input_stream"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/wire:reader"
  "@com_google_protobuf//upb/wire:wire" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/wire:wire" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/message:types"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/mem:internal"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/wire:wire" -> "@com_google_protobuf//third_party/utf8_range:utf8_range"
  "@com_google_protobuf//upb/wire:encode.h\n@com_google_protobuf//upb/wire:internal/decoder.h\n@com_google_protobuf//upb/wire:decode.h\n@com_google_protobuf//upb/wire:encode.c\n@com_google_protobuf//upb/wire:internal/constants.h\n@com_google_protobuf//upb/wire:internal/decode_fast.h\n@com_google_protobuf//upb/wire:internal/decode_fast.c\n@com_google_protobuf//upb/wire:decode.c"
  "@com_google_protobuf//upb:mini_descriptor"
  "@com_google_protobuf//upb:mini_descriptor" -> "@com_google_protobuf//upb/mini_descriptor:mini_descriptor"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb/mini_descriptor:decode.c\n@com_google_protobuf//upb/mini_descriptor:build_enum.c\n@com_google_protobuf//upb/mini_descriptor:link.c\n@com_google_protobuf//upb/mini_descriptor:link.h\n@com_google_protobuf//upb/mini_descriptor:decode.h\n@com_google_protobuf//upb/mini_descriptor:build_enum.h"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb/mini_descriptor:internal"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb/message:types"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/mini_descriptor:mini_descriptor" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/mini_descriptor:internal"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@com_google_protobuf//upb/mini_descriptor:internal/base92.c\n@com_google_protobuf//upb/mini_descriptor:internal/encode.hpp\n@com_google_protobuf//upb/mini_descriptor:internal/wire_constants.h\n@com_google_protobuf//upb/mini_descriptor:internal/decoder.h\n@com_google_protobuf//upb/mini_descriptor:internal/base92.h\n@com_google_protobuf//upb/mini_descriptor:internal/encode.h\n@com_google_protobuf//upb/mini_descriptor:internal/modifiers.h\n...and 1 more items"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/mini_descriptor:internal" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/mini_descriptor:internal/base92.c\n@com_google_protobuf//upb/mini_descriptor:internal/encode.hpp\n@com_google_protobuf//upb/mini_descriptor:internal/wire_constants.h\n@com_google_protobuf//upb/mini_descriptor:internal/decoder.h\n@com_google_protobuf//upb/mini_descriptor:internal/base92.h\n@com_google_protobuf//upb/mini_descriptor:internal/encode.h\n@com_google_protobuf//upb/mini_descriptor:internal/modifiers.h\n...and 1 more items"
  "@com_google_protobuf//upb/mini_descriptor:decode.c\n@com_google_protobuf//upb/mini_descriptor:build_enum.c\n@com_google_protobuf//upb/mini_descriptor:link.c\n@com_google_protobuf//upb/mini_descriptor:link.h\n@com_google_protobuf//upb/mini_descriptor:decode.h\n@com_google_protobuf//upb/mini_descriptor:build_enum.h"
  "@com_google_protobuf//upb:message"
  "@com_google_protobuf//upb:message" -> "@com_google_protobuf//upb/message:message"
  "@com_google_protobuf//upb/message:message"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb/message:message.c\n@com_google_protobuf//upb/message:tagged_ptr.h\n@com_google_protobuf//upb/message:accessors.c\n@com_google_protobuf//upb/message:map.h\n@com_google_protobuf//upb/message:array.h\n@com_google_protobuf//upb/message:message.h\n@com_google_protobuf//upb/message:compat.h\n@com_google_protobuf//upb/message:map.c\n@com_google_protobuf//upb/message:map_gencode_util.h\n@com_google_protobuf//upb/message:accessors.h\n...and 3 more items"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb/message:value.h"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb/message:types"
  "@com_google_protobuf//upb/message:message" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/message:message" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/message:message" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/message:internal"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb/message:internal/map.h\n@com_google_protobuf//upb/message:internal/message.c\n@com_google_protobuf//upb/message:internal/extension.c\n@com_google_protobuf//upb/message:internal/extension.h\n@com_google_protobuf//upb/message:internal/message.h\n@com_google_protobuf//upb/message:internal/array.h\n@com_google_protobuf//upb/message:internal/map_sorter.h\n@com_google_protobuf//upb/message:internal/tagged_ptr.h\n...and 3 more items"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb/message:value.h"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb/message:types"
  "@com_google_protobuf//upb/message:internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/message:internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:wire_reader"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:eps_copy_input_stream"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/message:internal" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb:eps_copy_input_stream"
  "@com_google_protobuf//upb:eps_copy_input_stream" -> "@com_google_protobuf//upb/wire:eps_copy_input_stream"
  "@com_google_protobuf//upb:wire_reader"
  "@com_google_protobuf//upb:wire_reader" -> "@com_google_protobuf//upb/wire:reader"
  "@com_google_protobuf//upb/wire:reader"
  "@com_google_protobuf//upb/wire:reader" -> "@com_google_protobuf//upb/wire:types.h\n@com_google_protobuf//upb/wire:reader.c\n@com_google_protobuf//upb/wire:internal/reader.h\n@com_google_protobuf//upb/wire:reader.h"
  "@com_google_protobuf//upb/wire:reader" -> "@com_google_protobuf//upb/wire:eps_copy_input_stream"
  "@com_google_protobuf//upb/wire:reader" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/wire:reader" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/wire:reader" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/wire:reader" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/wire:eps_copy_input_stream"
  "@com_google_protobuf//upb/wire:eps_copy_input_stream" -> "@com_google_protobuf//upb/wire:eps_copy_input_stream.c\n@com_google_protobuf//upb/wire:eps_copy_input_stream.h"
  "@com_google_protobuf//upb/wire:eps_copy_input_stream" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/wire:eps_copy_input_stream" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/wire:eps_copy_input_stream" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/wire:eps_copy_input_stream" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/wire:eps_copy_input_stream.c\n@com_google_protobuf//upb/wire:eps_copy_input_stream.h"
  "@com_google_protobuf//upb/wire:types.h\n@com_google_protobuf//upb/wire:reader.c\n@com_google_protobuf//upb/wire:internal/reader.h\n@com_google_protobuf//upb/wire:reader.h"
  "@com_google_protobuf//upb/message:internal/map.h\n@com_google_protobuf//upb/message:internal/message.c\n@com_google_protobuf//upb/message:internal/extension.c\n@com_google_protobuf//upb/message:internal/extension.h\n@com_google_protobuf//upb/message:internal/message.h\n@com_google_protobuf//upb/message:internal/array.h\n@com_google_protobuf//upb/message:internal/map_sorter.h\n@com_google_protobuf//upb/message:internal/tagged_ptr.h\n...and 3 more items"
  "@com_google_protobuf//upb/message:value.h"
  "@com_google_protobuf//upb/message:message.c\n@com_google_protobuf//upb/message:tagged_ptr.h\n@com_google_protobuf//upb/message:accessors.c\n@com_google_protobuf//upb/message:map.h\n@com_google_protobuf//upb/message:array.h\n@com_google_protobuf//upb/message:message.h\n@com_google_protobuf//upb/message:compat.h\n@com_google_protobuf//upb/message:map.c\n@com_google_protobuf//upb/message:map_gencode_util.h\n@com_google_protobuf//upb/message:accessors.h\n...and 3 more items"
  "@com_google_protobuf//upb:port_inc"
  "@com_google_protobuf//upb:port_inc" -> "@com_google_protobuf//upb/port:inc"
  "@com_google_protobuf//upb/port:inc"
  "@com_google_protobuf//upb/port:inc" -> "@com_google_protobuf//upb/port:undef.inc\n@com_google_protobuf//upb/port:def.inc"
  "@com_google_protobuf//upb:generated_code_support.h"
  "@com_google_protobuf//upb/reflection:stage0/google/protobuf/descriptor.upb.h\n@com_google_protobuf//upb/reflection:stage0/google/protobuf/descriptor.upb.c"
  "@com_google_protobuf//upb_generator:protoc-gen-upb.cc"
  "@bazel_tools//tools/genrule:genrule-setup.sh"
  "@com_google_protobuf//upb/reflection:internal/def_pool.h"
  "@com_google_protobuf//upb/reflection:internal/method_def.h\n@com_google_protobuf//upb/reflection:internal/enum_reserved_range.h\n@com_google_protobuf//upb/reflection:message_def.h\n@com_google_protobuf//upb/reflection:internal/service_def.h\n@com_google_protobuf//upb/reflection:extension_range.c\n@com_google_protobuf//upb/reflection:common.h\n@com_google_protobuf//upb/reflection:oneof_def.c\n@com_google_protobuf//upb/reflection:internal/strdup2.c\n...and 38 more items"
  "@com_google_protobuf//upb/reflection:message.h\n@com_google_protobuf//upb/reflection:message.hpp\n@com_google_protobuf//upb/reflection:def.hpp"
  "@com_google_protobuf//upb/reflection:def.h"
  "@com_google_protobuf//upb:mini_table"
  "@com_google_protobuf//upb:mini_table" -> "@com_google_protobuf//upb:friends"
  "@com_google_protobuf//upb:mini_table" -> "@com_google_protobuf//upb/mini_table:mini_table"
  "@com_google_protobuf//upb/mini_table:mini_table"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb/mini_table:field.h\n@com_google_protobuf//upb/mini_table:enum.h\n@com_google_protobuf//upb/mini_table:message.c\n@com_google_protobuf//upb/mini_table:extension_registry.c\n@com_google_protobuf//upb/mini_table:file.h\n@com_google_protobuf//upb/mini_table:extension.h\n@com_google_protobuf//upb/mini_table:sub.h\n@com_google_protobuf//upb/mini_table:message.h\n@com_google_protobuf//upb/mini_table:extension_registry.h"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/mini_table:mini_table" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/mini_table:internal"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb/mini_table:internal/message.h\n@com_google_protobuf//upb/mini_table:internal/size_log2.h\n@com_google_protobuf//upb/mini_table:internal/extension.h\n@com_google_protobuf//upb/mini_table:internal/file.h\n@com_google_protobuf//upb/mini_table:internal/field.h\n@com_google_protobuf//upb/mini_table:internal/sub.h\n@com_google_protobuf//upb/mini_table:internal/enum.h\n@com_google_protobuf//upb/mini_table:internal/message.c"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/mini_table:internal" -> "@com_google_protobuf//upb/message:types"
  "@com_google_protobuf//upb/mini_table:internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/mini_table:internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/message:types"
  "@com_google_protobuf//upb/message:types" -> "@com_google_protobuf//upb/message:internal/map_entry.h\n@com_google_protobuf//upb/message:internal/types.h"
  "@com_google_protobuf//upb/message:types" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/message:types" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/message:types" -> "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/message:types" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/message:types" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/message:types" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/message:types" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/message:internal/map_entry.h\n@com_google_protobuf//upb/message:internal/types.h"
  "@com_google_protobuf//upb/hash:hash"
  "@com_google_protobuf//upb/hash:hash" -> "@com_google_protobuf//upb/hash:common.c\n@com_google_protobuf//upb/hash:common.h\n@com_google_protobuf//upb/hash:int_table.h\n@com_google_protobuf//upb/hash:str_table.h"
  "@com_google_protobuf//upb/hash:hash" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/hash:hash" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/hash:hash" -> "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/hash:hash" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/hash:hash" -> "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb/hash:hash" -> "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb/hash:hash" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/hash:hash" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/base:internal"
  "@com_google_protobuf//upb/base:internal" -> "@com_google_protobuf//upb/base:internal/log2.h\n@com_google_protobuf//upb/base:internal/endian.h"
  "@com_google_protobuf//upb/base:internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/base:internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/base:internal" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/base:internal" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/base:internal" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/base:internal/log2.h\n@com_google_protobuf//upb/base:internal/endian.h"
  "@com_google_protobuf//upb/hash:common.c\n@com_google_protobuf//upb/hash:common.h\n@com_google_protobuf//upb/hash:int_table.h\n@com_google_protobuf//upb/hash:str_table.h"
  "@com_google_protobuf//upb:mem"
  "@com_google_protobuf//upb:mem" -> "@com_google_protobuf//upb/mem:mem"
  "@com_google_protobuf//upb/mem:mem"
  "@com_google_protobuf//upb/mem:mem" -> "@com_google_protobuf//upb/mem:arena.h\n@com_google_protobuf//upb/mem:alloc.h\n@com_google_protobuf//upb/mem:arena.c\n@com_google_protobuf//upb/mem:arena.hpp\n@com_google_protobuf//upb/mem:alloc.c"
  "@com_google_protobuf//upb/mem:mem" -> "@com_google_protobuf//upb/mem:internal"
  "@com_google_protobuf//upb/mem:mem" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/mem:mem" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/mem:mem" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/mem:mem" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/mem:mem" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/mem:internal"
  "@com_google_protobuf//upb/mem:internal" -> "@com_google_protobuf//upb/mem:internal/arena.h"
  "@com_google_protobuf//upb/mem:internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/mem:internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/mem:internal" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/mem:internal" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/mem:internal" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/mem:internal/arena.h"
  "@com_google_protobuf//upb/mem:arena.h\n@com_google_protobuf//upb/mem:alloc.h\n@com_google_protobuf//upb/mem:arena.c\n@com_google_protobuf//upb/mem:arena.hpp\n@com_google_protobuf//upb/mem:alloc.c"
  "@com_google_protobuf//upb:base"
  "@com_google_protobuf//upb:base" -> "@com_google_protobuf//upb/base:base"
  "@com_google_protobuf//upb/base:base"
  "@com_google_protobuf//upb/base:base" -> "@com_google_protobuf//upb/base:status.hpp\n@com_google_protobuf//upb/base:status.h\n@com_google_protobuf//upb/base:string_view.h\n@com_google_protobuf//upb/base:descriptor_constants.h\n@com_google_protobuf//upb/base:upcast.h\n@com_google_protobuf//upb/base:status.c"
  "@com_google_protobuf//upb/base:base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/base:base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/base:base" -> "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb/base:base" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/base:base" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb:port"
  "@com_google_protobuf//upb:port" -> "@com_google_protobuf//upb/port:port"
  "@com_google_protobuf//upb/port:port"
  "@com_google_protobuf//upb/port:port" -> "@com_google_protobuf//upb/port:atomic.h\n@com_google_protobuf//upb/port:vsnprintf_compat.h"
  "@com_google_protobuf//upb/port:port" -> "@com_google_protobuf//upb/port:undef.inc\n@com_google_protobuf//upb/port:def.inc"
  "@com_google_protobuf//upb/port:port" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb/port:port" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb/port:port" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb/port:port" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb/port:undef.inc\n@com_google_protobuf//upb/port:def.inc"
  "@com_google_protobuf//upb/port:atomic.h\n@com_google_protobuf//upb/port:vsnprintf_compat.h"
  "@com_google_protobuf//upb/base:status.hpp\n@com_google_protobuf//upb/base:status.h\n@com_google_protobuf//upb/base:string_view.h\n@com_google_protobuf//upb/base:descriptor_constants.h\n@com_google_protobuf//upb/base:upcast.h\n@com_google_protobuf//upb/base:status.c"
  "@com_google_protobuf//upb/mini_table:internal/message.h\n@com_google_protobuf//upb/mini_table:internal/size_log2.h\n@com_google_protobuf//upb/mini_table:internal/extension.h\n@com_google_protobuf//upb/mini_table:internal/file.h\n@com_google_protobuf//upb/mini_table:internal/field.h\n@com_google_protobuf//upb/mini_table:internal/sub.h\n@com_google_protobuf//upb/mini_table:internal/enum.h\n@com_google_protobuf//upb/mini_table:internal/message.c"
  "@com_google_protobuf//upb/mini_table:field.h\n@com_google_protobuf//upb/mini_table:enum.h\n@com_google_protobuf//upb/mini_table:message.c\n@com_google_protobuf//upb/mini_table:extension_registry.c\n@com_google_protobuf//upb/mini_table:file.h\n@com_google_protobuf//upb/mini_table:extension.h\n@com_google_protobuf//upb/mini_table:sub.h\n@com_google_protobuf//upb/mini_table:message.h\n@com_google_protobuf//upb/mini_table:extension_registry.h"
  "@com_google_protobuf//upb_generator:common.h\n@com_google_protobuf//upb_generator:common.cc"
  "@com_google_protobuf//upb_generator:file_layout.cc\n@com_google_protobuf//upb_generator:file_layout.h"
  "@com_google_protobuf//upb_generator:protoc-gen-upb_minitable-main.cc"
  "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use"
  "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb:upb_proto_library_copts__for_generated_code_only_do_not_use" -> "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb:fasttable_enabled_setting"
  "@com_google_protobuf//upb:fasttable_enabled_setting" -> "@com_google_protobuf//upb:fasttable_enabled"
  "@com_google_protobuf//upb:fasttable_enabled"
  "@com_google_googleapis//google/rpc:status_proto"
  "@com_google_googleapis//google/rpc:status_proto" -> "@com_google_googleapis//google/rpc:status.proto"
  "@com_google_googleapis//google/rpc:status_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_googleapis//google/rpc:status_proto" -> "@com_google_protobuf//:any_proto"
  "@com_google_protobuf//:any_proto"
  "@com_google_protobuf//:any_proto" -> "@com_google_protobuf//src/google/protobuf:any_proto"
  "@com_google_protobuf//src/google/protobuf:any_proto"
  "@com_google_protobuf//src/google/protobuf:any_proto" -> "@com_google_protobuf//src/google/protobuf:any.proto"
  "@com_google_protobuf//src/google/protobuf:any_proto" -> "@bazel_tools//tools/proto:protoc"
  "@com_google_protobuf//src/google/protobuf:any.proto"
  "@bazel_tools//tools/proto:protoc"
  "@bazel_tools//tools/proto:protoc" -> "@com_google_protobuf//:protoc"
  "@com_google_protobuf//:protoc"
  "@com_google_protobuf//:protoc" -> "@com_google_protobuf//build_defs:config_android"
  "@com_google_protobuf//:protoc" -> "@com_google_protobuf//build_defs:config_android-stlport\n@com_google_protobuf//build_defs:config_android-default\n@com_google_protobuf//build_defs:config_android-gnu-libstdcpp\n@com_google_protobuf//build_defs:config_android-libcpp\n@com_google_protobuf//build_defs:config_android-legacy-default-crosstool"
  "@com_google_protobuf//:protoc" -> "@rules_cc//:link_extra_lib"
  "@com_google_protobuf//:protoc" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//:protoc" -> "@platforms//os:macos"
  "@com_google_protobuf//:protoc" -> "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib"
  "@com_google_protobuf//:protoc" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//:protoc" -> "@bazel_tools//tools/cpp:malloc"
  "@com_google_protobuf//:protoc" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@com_google_protobuf//:protoc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//:protoc" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler:main.cc"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler:importer"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_absl//absl/log:initialize"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:rust"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/java:java"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/php:php"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/python:python"
  "@com_google_protobuf//src/google/protobuf/compiler:protoc_lib" -> "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby_generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/ruby:ruby_generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf/compiler/python:generator.h\n@com_google_protobuf//src/google/protobuf/compiler/python:pyi_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/python:helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/python:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/python:pyi_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/python:generator.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/memory:memory"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf/compiler:versions"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/python:python" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/python:generator.h\n@com_google_protobuf//src/google/protobuf/compiler/python:pyi_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/python:helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/python:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/python:pyi_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/python:generator.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf/compiler/php:php_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/php:php_generator.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf/compiler/php:names"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@com_google_protobuf//src/google/protobuf/compiler/php:names.h\n@com_google_protobuf//src/google/protobuf/compiler/php:names.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/php:names.h\n@com_google_protobuf//src/google/protobuf/compiler/php:names.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/php:php_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/php:php_generator.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:message.h\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:generator.h\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:enum.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:extension.cc\n...and 23 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_absl//absl/memory:memory"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:objectivec" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:nsobject_methods.h\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:names.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names_internal" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:nsobject_methods.h\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:names.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer.h"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:line_consumer.h"
  "@com_google_protobuf//src/google/protobuf/compiler/objectivec:message.h\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:generator.h\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:enum.cc\n@com_google_protobuf//src/google/protobuf/compiler/objectivec:extension.cc\n...and 23 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/java:kotlin_generator.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@com_google_protobuf//src/google/protobuf/compiler/java:java"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:kotlin_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/java:kotlin_generator.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:shared_code_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:shared_code_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/java:file.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:context.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:file.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_factory.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:java_features.pb.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java:names"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf:arena"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler:versions"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:full"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:extension.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:generator_factory.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:message.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:generator_factory.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:extension.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:message_builder.h\n...and 2 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:service"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:full" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization.h\n@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization.h\n@com_google_protobuf//src/google/protobuf/compiler/java:message_serialization.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:make_field_gens.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:make_field_gens.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:mfg" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:enum_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:map_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:message_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:primitive_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:enum_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:primitive_field.h\n...and 4 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fgs" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:enum_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:map_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:message_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:primitive_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:enum_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:primitive_field.h\n...and 4 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:make_field_gens.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:make_field_gens.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:field_generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:fg" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:field_generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:enum.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:enum.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:eg" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:enum.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:enum.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:extension.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:generator_factory.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:message.h\n@com_google_protobuf//src/google/protobuf/compiler/java/full:generator_factory.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:extension.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:message_builder.h\n...and 2 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/compiler/java/lite:message.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:generator_factory.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:generator_factory.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:message_builder.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:enum.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:enum.cc\n...and 2 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/compiler/java/lite:extension.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:extension.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:service"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:lite" -> "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_protobuf//src/google/protobuf/compiler/java/full:service.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:service.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java/full:service.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/full:service.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf/compiler/java/lite:make_field_gens.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:map_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:message_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:enum_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:string_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:map_field.cc\n...and 7 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf/compiler/java/lite:extension.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:extension.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:field_generators" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:internal_helpers.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:make_field_gens.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:map_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:message_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:enum_field.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:string_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:map_field.cc\n...and 7 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:extension.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:extension.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java/lite:message.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:generator_factory.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:generator_factory.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:message_builder.cc\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:enum.h\n@com_google_protobuf//src/google/protobuf/compiler/java/lite:enum.cc\n...and 2 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names" -> "@com_google_protobuf//src/google/protobuf/compiler/java:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@com_google_protobuf//src/google/protobuf/compiler/java:java_features.pb.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@com_google_protobuf//src/google/protobuf/compiler/java:java_features.pb.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@com_google_protobuf//src/google/protobuf:arena"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features_bootstrap" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features.pb.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_protobuf//src/google/protobuf/compiler/java:field_common.h\n@com_google_protobuf//src/google/protobuf/compiler/java:generator_common.h\n@com_google_protobuf//src/google/protobuf/compiler/java:field_common.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_protobuf//src/google/protobuf/compiler/java:generator_factory.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@com_google_absl//absl/strings:string_view"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_common" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/java:context.h\n@com_google_protobuf//src/google/protobuf/compiler/java:helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/java:names.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:doc_comment.h\n@com_google_protobuf//src/google/protobuf/compiler/java:options.h\n@com_google_protobuf//src/google/protobuf/compiler/java:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:name_resolver.h\n...and 2 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/java:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler:versions"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/java:helpers" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/java:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:context.h\n@com_google_protobuf//src/google/protobuf/compiler/java:helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/java:names.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:doc_comment.h\n@com_google_protobuf//src/google/protobuf/compiler/java:options.h\n@com_google_protobuf//src/google/protobuf/compiler/java:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:name_resolver.h\n...and 2 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/java:field_common.h\n@com_google_protobuf//src/google/protobuf/compiler/java:generator_common.h\n@com_google_protobuf//src/google/protobuf/compiler/java:field_common.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/java:java_features.pb.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator_factory.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler/java:shared_code_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:shared_code_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/java:file.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:context.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:generator.cc\n@com_google_protobuf//src/google/protobuf/compiler/java:file.h"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_repeated_message_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_primitive_field.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_options.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_enum.h\n...and 28 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf/compiler/csharp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names" -> "@com_google_protobuf//src/google/protobuf/compiler/csharp:names.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:names.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:names.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:names.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_repeated_message_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_primitive_field.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_generator.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_options.h\n@com_google_protobuf//src/google/protobuf/compiler/csharp:csharp_enum.h\n...and 28 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:ifndef_guard.h\n@com_google_protobuf//src/google/protobuf/compiler/cpp:extension.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:field_generators/enum_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:field_generators/string_view_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:field_generators/map_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:extension.h\n...and 27 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/memory:memory"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/log:die_if_null"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/compiler:versions"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/container:layout"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:cpp" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_absl//absl/log:die_if_null"
  "@com_google_absl//absl/log:die_if_null" -> "@com_google_absl//absl/log:die_if_null.h\n@com_google_absl//absl/log:die_if_null.cc"
  "@com_google_absl//absl/log:die_if_null" -> "@com_google_absl//absl/log:log"
  "@com_google_absl//absl/log:die_if_null" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:die_if_null" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:die_if_null" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:die_if_null" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:die_if_null" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log:die_if_null" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log:die_if_null" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log:die_if_null.h\n@com_google_absl//absl/log:die_if_null.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:ifndef_guard.h\n@com_google_protobuf//src/google/protobuf/compiler/cpp:extension.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:field_generators/enum_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:field_generators/string_view_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:field_generators/map_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:extension.h\n...and 27 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:generator.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:generator.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:enum"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:message"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:naming"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/memory:memory"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:relative_path.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:message.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:message.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:enum"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:naming"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//upb_generator:mangle"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//upb_generator:mangle"
  "@com_google_protobuf//upb_generator:mangle" -> "@com_google_protobuf//upb_generator:mangle.h\n@com_google_protobuf//upb_generator:mangle.cc"
  "@com_google_protobuf//upb_generator:mangle" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//upb_generator:mangle" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//upb_generator:mangle" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//upb_generator:mangle" -> "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb_generator:mangle" -> "@com_google_protobuf//upb:friends"
  "@com_google_protobuf//upb:friends"
  "@com_google_protobuf//upb:windows"
  "@com_google_protobuf//upb:windows" -> "@platforms//os:windows"
  "@com_google_protobuf//upb_generator:mangle.h\n@com_google_protobuf//upb_generator:mangle.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:oneof.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:naming"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:oneof.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:oneof.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/singular_scalar.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/accessors.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/unsupported_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/singular_string.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/map.cc\n...and 6 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:naming"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/helpers.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:naming"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:helpers" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/helpers.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/singular_scalar.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/accessors.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/unsupported_field.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/singular_string.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:accessors/map.cc\n...and 6 more items"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:message.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:message.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:enum.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:enum.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:naming"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:naming.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:rust_keywords.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:naming.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:rust_keywords.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/cpp:options.h"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf/compiler/cpp:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names_internal" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:names.h"
  "@com_google_protobuf//src/google/protobuf/compiler/cpp:helpers.cc\n@com_google_protobuf//src/google/protobuf/compiler/cpp:helpers.h\n@com_google_protobuf//src/google/protobuf/compiler/cpp:options.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:rust_field_type.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:naming.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:rust_keywords.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:naming.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:rust_keywords.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:enum.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:enum.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_protobuf//src/google/protobuf/testing:file"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/testing:file"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_protobuf//src/google/protobuf/testing:file.cc\n@com_google_protobuf//src/google/protobuf/testing:file.h"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_protobuf//src/google/protobuf/io:io_win32"
  "@com_google_protobuf//src/google/protobuf/testing:file" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/testing:file.cc\n@com_google_protobuf//src/google/protobuf/testing:file.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:crate_mapping.cc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_protobuf//src/google/protobuf/compiler/rust:context.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:context.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:context.cc\n@com_google_protobuf//src/google/protobuf/compiler/rust:context.h"
  "@com_google_protobuf//src/google/protobuf/compiler/rust:generator.h\n@com_google_protobuf//src/google/protobuf/compiler/rust:generator.cc"
  "@com_google_absl//absl/log:initialize"
  "@com_google_absl//absl/log:initialize" -> "@com_google_absl//absl/log:initialize.cc\n@com_google_absl//absl/log:initialize.h"
  "@com_google_absl//absl/log:initialize" -> "@com_google_absl//absl/log:globals"
  "@com_google_absl//absl/log:initialize" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:initialize" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:initialize" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/log:initialize" -> "@com_google_absl//absl/log/internal:globals"
  "@com_google_absl//absl/log:initialize" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log:initialize" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:initialize" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:initialize.cc\n@com_google_absl//absl/log:initialize.h"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/compiler:zip_writer.h\n@com_google_protobuf//src/google/protobuf/compiler:zip_writer.cc\n@com_google_protobuf//src/google/protobuf/compiler:subprocess.cc\n@com_google_protobuf//src/google/protobuf/compiler:subprocess.h\n@com_google_protobuf//src/google/protobuf/compiler:command_line_interface.cc\n@com_google_protobuf//src/google/protobuf/compiler:command_line_interface.h"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/compiler:importer"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/compiler:versions"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/io:io_win32"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/algorithm:algorithm"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/log:globals"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler:command_line_interface" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/compiler:versions"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@com_google_protobuf//src/google/protobuf/compiler:versions.cc\n@com_google_protobuf//src/google/protobuf/compiler:versions.h"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler:versions" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler:versions.cc\n@com_google_protobuf//src/google/protobuf/compiler:versions.h"
  "@com_google_protobuf//src/google/protobuf/compiler:importer"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//src/google/protobuf/compiler:parser.cc\n@com_google_protobuf//src/google/protobuf/compiler:importer.cc\n@com_google_protobuf//src/google/protobuf/compiler:importer.h\n@com_google_protobuf//src/google/protobuf/compiler:parser.h"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//src/google/protobuf/io:io_win32"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/base:base"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/strings:cord"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler:importer" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/compiler:parser.cc\n@com_google_protobuf//src/google/protobuf/compiler:importer.cc\n@com_google_protobuf//src/google/protobuf/compiler:importer.h\n@com_google_protobuf//src/google/protobuf/compiler:parser.h"
  "@com_google_protobuf//src/google/protobuf/compiler:zip_writer.h\n@com_google_protobuf//src/google/protobuf/compiler:zip_writer.cc\n@com_google_protobuf//src/google/protobuf/compiler:subprocess.cc\n@com_google_protobuf//src/google/protobuf/compiler:subprocess.h\n@com_google_protobuf//src/google/protobuf/compiler:command_line_interface.cc\n@com_google_protobuf//src/google/protobuf/compiler:command_line_interface.h"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//src/google/protobuf/compiler:plugin.pb.cc\n@com_google_protobuf//src/google/protobuf/compiler:scc.h\n@com_google_protobuf//src/google/protobuf/compiler:code_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler:plugin.cc\n@com_google_protobuf//src/google/protobuf/compiler:plugin.h\n@com_google_protobuf//src/google/protobuf/compiler:plugin.pb.h\n@com_google_protobuf//src/google/protobuf/compiler:code_generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_protobuf//src/google/protobuf/io:io_win32"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_absl//absl/memory:memory"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler:code_generator" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/compiler:retention"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@com_google_protobuf//src/google/protobuf/compiler:retention.cc\n@com_google_protobuf//src/google/protobuf/compiler:retention.h"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/compiler:retention" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:protobuf"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//build_defs:config_android"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//build_defs:config_android-stlport\n@com_google_protobuf//build_defs:config_android-default\n@com_google_protobuf//build_defs:config_android-gnu-libstdcpp\n@com_google_protobuf//build_defs:config_android-libcpp\n@com_google_protobuf//build_defs:config_android-legacy-default-crosstool"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf:cpp_features.pb.cc\n@com_google_protobuf//src/google/protobuf:wire_format.cc\n@com_google_protobuf//src/google/protobuf:service.cc\n@com_google_protobuf//src/google/protobuf:dynamic_message.cc\n@com_google_protobuf//src/google/protobuf:map_field.cc\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_full.cc\n@com_google_protobuf//src/google/protobuf:descriptor_database.cc\n...and 13 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@platforms//os:macos"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf:unknown_field_set.h\n@com_google_protobuf//src/google/protobuf:message.h\n@com_google_protobuf//src/google/protobuf:reflection_ops.h\n@com_google_protobuf//src/google/protobuf:metadata.h\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_gen.h\n@com_google_protobuf//src/google/protobuf:reflection_internal.h\n@com_google_protobuf//src/google/protobuf:descriptor_visitor.h\n...and 21 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf:internal_visibility"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/types:variant"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/time:time"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/strings:internal"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/strings:cord"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/memory:memory"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/hash:hash"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/functional:function_ref"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/container:fixed_array"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/base:base"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//third_party/utf8_range:utf8_validity"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf/io:gzip_stream"
  "@com_google_protobuf//src/google/protobuf:protobuf" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@com_google_protobuf//src/google/protobuf/io:gzip_stream.h\n@com_google_protobuf//src/google/protobuf/io:gzip_stream.cc"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@zlib//:zlib"
  [label="//conditions:default"];
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/io:gzip_stream.h\n@com_google_protobuf//src/google/protobuf/io:gzip_stream.cc"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_protobuf//src/google/protobuf/io:strtod.h\n@com_google_protobuf//src/google/protobuf/io:strtod.cc\n@com_google_protobuf//src/google/protobuf/io:tokenizer.h\n@com_google_protobuf//src/google/protobuf/io:tokenizer.cc"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/io:tokenizer" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/io:strtod.h\n@com_google_protobuf//src/google/protobuf/io:strtod.cc\n@com_google_protobuf//src/google/protobuf/io:tokenizer.h\n@com_google_protobuf//src/google/protobuf/io:tokenizer.cc"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:generated_message_util.cc\n@com_google_protobuf//src/google/protobuf:raw_ptr.cc\n@com_google_protobuf//src/google/protobuf:arenaz_sampler.cc\n@com_google_protobuf//src/google/protobuf:implicit_weak_message.cc\n@com_google_protobuf//src/google/protobuf:inlined_string_field.cc\n@com_google_protobuf//src/google/protobuf:repeated_field.cc\n@com_google_protobuf//src/google/protobuf:wire_format_lite.cc\n...and 9 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:implicit_weak_message.h\n@com_google_protobuf//src/google/protobuf:repeated_field.h\n@com_google_protobuf//src/google/protobuf:generated_message_util.h\n@com_google_protobuf//src/google/protobuf:generated_enum_util.h\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_decl.h\n@com_google_protobuf//src/google/protobuf:inlined_string_field.h\n@com_google_protobuf//src/google/protobuf:arenastring.h\n...and 18 more items"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:serial_arena.h\n@com_google_protobuf//src/google/protobuf:thread_safe_arena.h\n@com_google_protobuf//src/google/protobuf:arenaz_sampler.h\n@com_google_protobuf//src/google/protobuf:arena.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:port.h"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:arena"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:arena_align"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:arena_allocation_policy"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:arena_cleanup"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:internal_visibility"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:string_block"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf:varint_shuffle"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/utility:if_constexpr"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//build_defs:config_android"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//build_defs:config_android-stlport\n@com_google_protobuf//build_defs:config_android-default\n@com_google_protobuf//build_defs:config_android-gnu-libstdcpp\n@com_google_protobuf//build_defs:config_android-libcpp\n@com_google_protobuf//build_defs:config_android-legacy-default-crosstool"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@platforms//os:macos"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/time:time"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/strings:internal"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/strings:cord"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_protobuf//third_party/utf8_range:utf8_validity"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/base:base"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/base:config"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/base:prefetch"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/container:btree"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/hash:hash"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_protobuf//src/google/protobuf:protobuf_lite" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/container:flat_hash_set"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl/container:flat_hash_set.h"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl/container:container_memory"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl/container:hash_function_defaults"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl/container:raw_hash_set"
  "@com_google_absl//absl/container:flat_hash_set" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:flat_hash_set" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:flat_hash_set" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:flat_hash_set.h"
  "@com_google_absl//absl/container:btree"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/container:internal/btree_container.h\n@com_google_absl//absl/container:internal/btree.h\n@com_google_absl//absl/container:btree_set.h\n@com_google_absl//absl/container:btree_map.h"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/container:common"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/container:common_policy_traits"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/container:compressed_tuple"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/container:container_memory"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/container:layout"
  "@com_google_absl//absl/container:btree" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:btree" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/types:compare"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/strings:cord"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:btree" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:compare"
  "@com_google_absl//absl/types:compare" -> "@com_google_absl//absl/types:compare.h"
  "@com_google_absl//absl/types:compare" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:compare" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:compare" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/types:compare" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/types:compare" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:compare" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:compare" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:compare.h"
  "@com_google_absl//absl/container:internal/btree_container.h\n@com_google_absl//absl/container:internal/btree.h\n@com_google_absl//absl/container:btree_set.h\n@com_google_absl//absl/container:btree_map.h"
  "@com_google_protobuf//third_party/utf8_range:utf8_validity"
  "@com_google_protobuf//third_party/utf8_range:utf8_validity" -> "@com_google_protobuf//third_party/utf8_range:utf8_validity.cc\n@com_google_protobuf//third_party/utf8_range:utf8_validity.h"
  "@com_google_protobuf//third_party/utf8_range:utf8_validity" -> "@com_google_protobuf//third_party/utf8_range:utf8_range"
  "@com_google_protobuf//third_party/utf8_range:utf8_validity" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//third_party/utf8_range:utf8_validity" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//third_party/utf8_range:utf8_validity" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//third_party/utf8_range:utf8_range"
  "@com_google_protobuf//third_party/utf8_range:utf8_range" -> "@com_google_protobuf//third_party/utf8_range:utf8_range.c\n@com_google_protobuf//third_party/utf8_range:utf8_range.h"
  "@com_google_protobuf//third_party/utf8_range:utf8_range" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//third_party/utf8_range:utf8_range" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//third_party/utf8_range:utf8_range.c\n@com_google_protobuf//third_party/utf8_range:utf8_range.h"
  "@com_google_protobuf//third_party/utf8_range:utf8_validity.cc\n@com_google_protobuf//third_party/utf8_range:utf8_validity.h"
  "@com_google_protobuf//src/google/protobuf:varint_shuffle"
  "@com_google_protobuf//src/google/protobuf:varint_shuffle" -> "@com_google_protobuf//src/google/protobuf:varint_shuffle.h"
  "@com_google_protobuf//src/google/protobuf:varint_shuffle" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf:varint_shuffle" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf:varint_shuffle" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:varint_shuffle" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:varint_shuffle.h"
  "@com_google_protobuf//src/google/protobuf:implicit_weak_message.h\n@com_google_protobuf//src/google/protobuf:repeated_field.h\n@com_google_protobuf//src/google/protobuf:generated_message_util.h\n@com_google_protobuf//src/google/protobuf:generated_enum_util.h\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_decl.h\n@com_google_protobuf//src/google/protobuf:inlined_string_field.h\n@com_google_protobuf//src/google/protobuf:arenastring.h\n...and 18 more items"
  "@com_google_protobuf//src/google/protobuf:generated_message_util.cc\n@com_google_protobuf//src/google/protobuf:raw_ptr.cc\n@com_google_protobuf//src/google/protobuf:arenaz_sampler.cc\n@com_google_protobuf//src/google/protobuf:implicit_weak_message.cc\n@com_google_protobuf//src/google/protobuf:inlined_string_field.cc\n@com_google_protobuf//src/google/protobuf:repeated_field.cc\n@com_google_protobuf//src/google/protobuf:wire_format_lite.cc\n...and 9 more items"
  "@com_google_protobuf//src/google/protobuf:internal_visibility"
  "@com_google_protobuf//src/google/protobuf:internal_visibility" -> "@com_google_protobuf//src/google/protobuf:internal_visibility.h"
  "@com_google_protobuf//src/google/protobuf:internal_visibility" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:internal_visibility" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:internal_visibility" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf:internal_visibility.h"
  "@com_google_protobuf//src/google/protobuf:unknown_field_set.h\n@com_google_protobuf//src/google/protobuf:message.h\n@com_google_protobuf//src/google/protobuf:reflection_ops.h\n@com_google_protobuf//src/google/protobuf:metadata.h\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_gen.h\n@com_google_protobuf//src/google/protobuf:reflection_internal.h\n@com_google_protobuf//src/google/protobuf:descriptor_visitor.h\n...and 21 more items"
  "@com_google_protobuf//src/google/protobuf:cpp_features.pb.cc\n@com_google_protobuf//src/google/protobuf:wire_format.cc\n@com_google_protobuf//src/google/protobuf:service.cc\n@com_google_protobuf//src/google/protobuf:dynamic_message.cc\n@com_google_protobuf//src/google/protobuf:map_field.cc\n@com_google_protobuf//src/google/protobuf:generated_message_tctable_full.cc\n@com_google_protobuf//src/google/protobuf:descriptor_database.cc\n...and 13 more items"
  "@com_google_protobuf//src/google/protobuf/compiler:retention.cc\n@com_google_protobuf//src/google/protobuf/compiler:retention.h"
  "@com_google_protobuf//src/google/protobuf/compiler:plugin.pb.cc\n@com_google_protobuf//src/google/protobuf/compiler:scc.h\n@com_google_protobuf//src/google/protobuf/compiler:code_generator.cc\n@com_google_protobuf//src/google/protobuf/compiler:plugin.cc\n@com_google_protobuf//src/google/protobuf/compiler:plugin.h\n@com_google_protobuf//src/google/protobuf/compiler:plugin.pb.h\n@com_google_protobuf//src/google/protobuf/compiler:code_generator.h"
  "@com_google_protobuf//src/google/protobuf/compiler:main.cc"
  "@rules_cc//:link_extra_lib"
  "@rules_cc//:link_extra_lib" -> "@rules_cc//:link_extra_libs"
  "@rules_cc//:link_extra_lib" -> "@bazel_tools//tools/def_parser:def_parser"
  "@rules_cc//:link_extra_lib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@rules_cc//:link_extra_libs"
  "@rules_cc//:link_extra_libs" -> "@rules_cc//:empty_lib"
  "@rules_cc//:empty_lib"
  "@rules_cc//:empty_lib" -> "@bazel_tools//tools/def_parser:def_parser"
  "@rules_cc//:empty_lib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_googleapis//google/rpc:status.proto"
  "@com_github_grpc_grpc//src/core:percent_encoding"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@com_github_grpc_grpc//src/core:lib/slice/percent_encoding.h\n@com_github_grpc_grpc//src/core:lib/slice/percent_encoding.cc"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@com_github_grpc_grpc//src/core:bitset"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:percent_encoding" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:bitset"
  "@com_github_grpc_grpc//src/core:bitset" -> "@com_github_grpc_grpc//src/core:lib/gprpp/bitset.h"
  "@com_github_grpc_grpc//src/core:bitset" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:bitset" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:bitset" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:bitset" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:bitset" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:bitset" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/bitset.h"
  "@com_github_grpc_grpc//src/core:lib/slice/percent_encoding.h\n@com_github_grpc_grpc//src/core:lib/slice/percent_encoding.cc"
  "@com_github_grpc_grpc//src/core:lib/gprpp/status_helper.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/status_helper.h"
  "@com_github_grpc_grpc//src/core:gpr_spinlock"
  "@com_github_grpc_grpc//src/core:gpr_spinlock" -> "@com_github_grpc_grpc//src/core:util/spinlock.h"
  "@com_github_grpc_grpc//src/core:gpr_spinlock" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//src/core:gpr_spinlock" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:gpr_spinlock" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:gpr_spinlock" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:gpr_spinlock" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:gpr_spinlock" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:util/spinlock.h"
  "@com_github_grpc_grpc//src/core:lib/iomgr/error.h\n@com_github_grpc_grpc//src/core:lib/iomgr/error.cc"
  "@com_github_grpc_grpc//src/core:lib/iomgr/closure.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/closure.h"
  "@com_github_grpc_grpc//src/core:lib/promise/exec_ctx_wakeup_scheduler.h"
  "@com_github_grpc_grpc//src/core:activity"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:lib/promise/activity.cc\n@com_github_grpc_grpc//src/core:lib/promise/activity.h"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:atomic_utils"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:event_engine_context"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//src/core:promise_status"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:activity" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:activity" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:activity" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:promise_status"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@com_github_grpc_grpc//src/core:lib/promise/detail/status.h"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:promise_status" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//src/core:lib/promise/detail/status.h"
  "@com_github_grpc_grpc//src/core:promise_factory"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@com_github_grpc_grpc//src/core:lib/promise/detail/promise_factory.h"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:promise_factory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:promise_like"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@com_github_grpc_grpc//src/core:lib/promise/detail/promise_like.h"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:promise_like" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/detail/promise_like.h"
  "@com_github_grpc_grpc//src/core:poll"
  "@com_github_grpc_grpc//src/core:poll" -> "@com_github_grpc_grpc//src/core:lib/promise/poll.h"
  "@com_github_grpc_grpc//src/core:poll" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:poll" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:poll" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:poll" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:poll" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:poll" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:poll" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:poll" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/poll.h"
  "@com_github_grpc_grpc//src/core:event_engine_context"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@com_github_grpc_grpc//src/core:lib/event_engine/event_engine_context.h"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_context" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/event_engine/event_engine_context.h"
  "@com_github_grpc_grpc//src/core:lib/promise/activity.cc\n@com_github_grpc_grpc//src/core:lib/promise/activity.h"
  "@com_github_grpc_grpc//src/core:lib/resource_quota/memory_quota.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/memory_quota.cc"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@com_github_grpc_grpc//:include/grpc/event_engine/memory_allocator.h\n@com_github_grpc_grpc//:include/grpc/event_engine/memory_request.h\n@com_github_grpc_grpc//:include/grpc/event_engine/internal/memory_allocator_impl.h"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_memory_allocator" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:slice"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//src/core:lib/slice/slice.h\n@com_github_grpc_grpc//src/core:lib/slice/slice_string_helpers.cc\n@com_github_grpc_grpc//src/core:lib/slice/slice_internal.h\n@com_github_grpc_grpc//src/core:lib/slice/slice_string_helpers.h\n@com_github_grpc_grpc//src/core:lib/slice/slice.cc"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//src/core:slice_cast"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:slice" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:slice" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:slice" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:slice_refcount"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//src/core:lib/slice/slice_refcount.h"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:slice_refcount" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/slice/slice_refcount.h"
  "@com_github_grpc_grpc//src/core:slice_cast"
  "@com_github_grpc_grpc//src/core:slice_cast" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:slice_cast" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:slice_cast" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:slice_cast" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:slice_cast" -> "@com_github_grpc_grpc//:include/grpc/event_engine/internal/slice_cast.h"
  "@com_github_grpc_grpc//src/core:lib/slice/slice.h\n@com_github_grpc_grpc//src/core:lib/slice/slice_string_helpers.cc\n@com_github_grpc_grpc//src/core:lib/slice/slice_internal.h\n@com_github_grpc_grpc//src/core:lib/slice/slice_string_helpers.h\n@com_github_grpc_grpc//src/core:lib/slice/slice.cc"
  "@com_github_grpc_grpc//src/core:context"
  "@com_github_grpc_grpc//src/core:context" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:context" -> "@com_github_grpc_grpc//src/core:lib/promise/context.h"
  "@com_github_grpc_grpc//src/core:context" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:context" -> "@com_github_grpc_grpc//src/core:down_cast"
  "@com_github_grpc_grpc//src/core:context" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:context" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:context" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:context" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:context" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/promise/context.h"
  "@com_github_grpc_grpc//src/core:lib/resource_quota/arena.h\n@com_github_grpc_grpc//src/core:lib/resource_quota/arena.cc"
  "@com_github_grpc_grpc//src/core:service_config/service_config_call_data.h\n@com_github_grpc_grpc//src/core:service_config/service_config.h"
  "@com_github_grpc_grpc//src/core:iomgr_fwd"
  "@com_github_grpc_grpc//src/core:iomgr_fwd" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:iomgr_fwd" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:iomgr_fwd" -> "@com_github_grpc_grpc//src/core:lib/iomgr/iomgr_fwd.h"
  "@com_github_grpc_grpc//src/core:iomgr_fwd" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:iomgr_fwd" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:iomgr_fwd" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/iomgr/iomgr_fwd.h"
  "@com_github_grpc_grpc//:server_address"
  "@com_github_grpc_grpc//:server_address" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:server_address" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:server_address" -> "@com_github_grpc_grpc//src/core:resolver/server_address.h"
  "@com_github_grpc_grpc//:server_address" -> "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//:server_address" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//:server_address" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:server_address" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:resolver/server_address.h"
  "@com_github_grpc_grpc//:grpc_trace"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//src/core:lib/debug/trace.cc\n@com_github_grpc_grpc//src/core:lib/debug/trace_flags.cc\n@com_github_grpc_grpc//src/core:lib/debug/trace.h\n@com_github_grpc_grpc//src/core:lib/debug/trace_flags.h\n@com_github_grpc_grpc//src/core:lib/debug/trace_impl.h"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//src/core:glob"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:grpc_trace" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_github_grpc_grpc//:grpc_trace" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_trace" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:glob"
  "@com_github_grpc_grpc//src/core:glob" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:glob" -> "@com_github_grpc_grpc//src/core:lib/gprpp/glob.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/glob.h"
  "@com_github_grpc_grpc//src/core:glob" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:glob" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:glob" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:glob" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/gprpp/glob.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/glob.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/connectivity_state.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/slice.h\n@com_github_grpc_grpc//:include/grpc/passive_listener.h\n@com_github_grpc_grpc//:include/grpc/impl/compression_types.h\n@com_github_grpc_grpc//:include/grpc/status.h\n...and 18 more items"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/endpoint_config.h\n@com_github_grpc_grpc//:include/grpc/event_engine/extensible.h\n@com_github_grpc_grpc//:include/grpc/event_engine/port.h\n@com_github_grpc_grpc//:include/grpc/event_engine/event_engine.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/memory_allocator.h\n@com_github_grpc_grpc//:include/grpc/event_engine/memory_request.h\n@com_github_grpc_grpc//:include/grpc/event_engine/internal/memory_allocator_impl.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/internal/slice_cast.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/slice.h\n@com_github_grpc_grpc//:include/grpc/event_engine/slice_buffer.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:grpc_public_hdrs" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:gpr_public_hdrs"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_abseil.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_generic.h\n@com_github_grpc_grpc//:include/grpc/support/alloc.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_windows.h\n@com_github_grpc_grpc//:include/grpc/support/log.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/gpr_types.h\n@com_github_grpc_grpc//:include/grpc/support/sync_custom.h\n@com_github_grpc_grpc//:include/grpc/support/cpu.h\n...and 17 more items"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/support/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/support/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/support/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm.h"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@com_github_grpc_grpc//:include/grpc/impl/codegen/port_platform.h\n@com_github_grpc_grpc//:include/grpc/support/port_platform.h"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:gpr_public_hdrs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/debug/trace.cc\n@com_github_grpc_grpc//src/core:lib/debug/trace_flags.cc\n@com_github_grpc_grpc//src/core:lib/debug/trace.h\n@com_github_grpc_grpc//src/core:lib/debug/trace_flags.h\n@com_github_grpc_grpc//src/core:lib/debug/trace_impl.h"
  "@com_github_grpc_grpc//:endpoint_addresses"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//src/core:resolver/endpoint_addresses.h\n@com_github_grpc_grpc//src/core:resolver/endpoint_addresses.cc"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_google_absl//absl/functional:function_ref"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:endpoint_addresses" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:channel_args"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:lib/channel/channel_args.h\n@com_github_grpc_grpc//src/core:lib/channel/channel_args.cc"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:avl"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_google_absl//absl/meta:type_traits"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:channel_args" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:time"
  "@com_github_grpc_grpc//src/core:time" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:time" -> "@com_github_grpc_grpc//src/core:lib/gprpp/time.h\n@com_github_grpc_grpc//src/core:lib/gprpp/time.cc"
  "@com_github_grpc_grpc//src/core:time" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:time" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:time" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:time" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:time" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:time" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:time" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:time" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:time" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:time" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:time" -> "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:event_engine_base_hdrs"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/connectivity_state.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/slice.h\n@com_github_grpc_grpc//:include/grpc/passive_listener.h\n@com_github_grpc_grpc//:include/grpc/impl/compression_types.h\n@com_github_grpc_grpc//:include/grpc/status.h\n...and 18 more items"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/endpoint_config.h\n@com_github_grpc_grpc//:include/grpc/event_engine/extensible.h\n@com_github_grpc_grpc//:include/grpc/event_engine/port.h\n@com_github_grpc_grpc//:include/grpc/event_engine/event_engine.h"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/memory_allocator.h\n@com_github_grpc_grpc//:include/grpc/event_engine/memory_request.h\n@com_github_grpc_grpc//:include/grpc/event_engine/internal/memory_allocator_impl.h"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/internal/slice_cast.h"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/event_engine/slice.h\n@com_github_grpc_grpc//:include/grpc/event_engine/slice_buffer.h"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:event_engine_base_hdrs" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:channel_arg_names"
  "@com_github_grpc_grpc//:channel_arg_names" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:channel_arg_names" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:channel_arg_names" -> "@com_github_grpc_grpc//:include/grpc/impl/channel_arg_names.h"
  "@com_github_grpc_grpc//:channel_arg_names" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:channel_arg_names" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:include/grpc/impl/channel_arg_names.h"
  "@com_github_grpc_grpc//:include/grpc/slice_buffer.h"
  "@com_github_grpc_grpc//:include/grpc/slice.h"
  "@com_github_grpc_grpc//:include/grpc/grpc_security.h"
  "@com_github_grpc_grpc//:include/grpc/event_engine/slice.h\n@com_github_grpc_grpc//:include/grpc/event_engine/slice_buffer.h"
  "@com_github_grpc_grpc//:include/grpc/event_engine/internal/slice_cast.h"
  "@com_github_grpc_grpc//:include/grpc/event_engine/memory_allocator.h\n@com_github_grpc_grpc//:include/grpc/event_engine/memory_request.h\n@com_github_grpc_grpc//:include/grpc/event_engine/internal/memory_allocator_impl.h"
  "@com_github_grpc_grpc//:include/grpc/event_engine/endpoint_config.h\n@com_github_grpc_grpc//:include/grpc/event_engine/extensible.h\n@com_github_grpc_grpc//:include/grpc/event_engine/port.h\n@com_github_grpc_grpc//:include/grpc/event_engine/event_engine.h"
  "@com_github_grpc_grpc//:include/grpc/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/byte_buffer.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/connectivity_state.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/status.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/slice.h\n@com_github_grpc_grpc//:include/grpc/passive_listener.h\n@com_github_grpc_grpc//:include/grpc/impl/compression_types.h\n@com_github_grpc_grpc//:include/grpc/status.h\n...and 18 more items"
  "@com_github_grpc_grpc//src/core:lib/gprpp/time.h\n@com_github_grpc_grpc//src/core:lib/gprpp/time.cc"
  "@com_github_grpc_grpc//src/core:ref_counted_string"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted_string.h\n@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted_string.cc"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:ref_counted_string" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted_string.h\n@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted_string.cc"
  "@com_github_grpc_grpc//src/core:dual_ref_counted"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//src/core:lib/gprpp/dual_ref_counted.h"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//src/core:down_cast"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:dual_ref_counted" -> "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:orphanable"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//src/core:lib/gprpp/orphanable.h"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:orphanable" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//src/core:down_cast"
  "@com_github_grpc_grpc//:orphanable" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//:orphanable" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/gprpp/orphanable.h"
  "@com_github_grpc_grpc//src/core:lib/gprpp/dual_ref_counted.h"
  "@com_github_grpc_grpc//src/core:channel_stack_type"
  "@com_github_grpc_grpc//src/core:channel_stack_type" -> "@com_github_grpc_grpc//src/core:lib/surface/channel_stack_type.h\n@com_github_grpc_grpc//src/core:lib/surface/channel_stack_type.cc"
  "@com_github_grpc_grpc//src/core:channel_stack_type" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:channel_stack_type" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:channel_stack_type" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:channel_stack_type" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:channel_stack_type" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/surface/channel_stack_type.h\n@com_github_grpc_grpc//src/core:lib/surface/channel_stack_type.cc"
  "@com_github_grpc_grpc//src/core:avl"
  "@com_github_grpc_grpc//src/core:avl" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:avl" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:avl" -> "@com_github_grpc_grpc//src/core:lib/avl/avl.h"
  "@com_github_grpc_grpc//src/core:avl" -> "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:avl" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:avl" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:avl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:avl" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:avl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ref_counted"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted.h"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//src/core:atomic_utils"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//src/core:down_cast"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:ref_counted" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:ref_counted_ptr"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted_ptr.h"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@com_google_absl//absl/hash:hash"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:ref_counted_ptr" -> "@com_github_grpc_grpc//src/core:down_cast"
  "@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted_ptr.h"
  "@com_github_grpc_grpc//src/core:down_cast"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@com_github_grpc_grpc//src/core:lib/gprpp/down_cast.h"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@com_google_absl//absl/base:config"
  "@com_github_grpc_grpc//src/core:down_cast" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:lib/gprpp/down_cast.h"
  "@com_github_grpc_grpc//src/core:atomic_utils"
  "@com_github_grpc_grpc//src/core:atomic_utils" -> "@com_github_grpc_grpc//src/core:lib/gprpp/atomic_utils.h"
  "@com_github_grpc_grpc//src/core:atomic_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:atomic_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:atomic_utils" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:atomic_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:atomic_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/atomic_utils.h"
  "@com_github_grpc_grpc//src/core:lib/gprpp/ref_counted.h"
  "@com_github_grpc_grpc//src/core:lib/avl/avl.h"
  "@com_github_grpc_grpc//src/core:lib/channel/channel_args.h\n@com_github_grpc_grpc//src/core:lib/channel/channel_args.cc"
  "@com_github_grpc_grpc//:sockaddr_utils"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//src/core:lib/address_utils/sockaddr_utils.h\n@com_github_grpc_grpc//src/core:lib/address_utils/sockaddr_utils.cc"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:sockaddr_utils" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:resolved_address"
  "@com_github_grpc_grpc//src/core:resolved_address" -> "@com_github_grpc_grpc//src/core:lib/iomgr/resolved_address.h"
  "@com_github_grpc_grpc//src/core:resolved_address" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:resolved_address" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:resolved_address" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:resolved_address" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:resolved_address" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:resolved_address" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/iomgr/resolved_address.h"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@com_github_grpc_grpc//src/core:lib/iomgr/socket_utils_windows.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_utils_posix.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_utils.h"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_posix.h\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr.h\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_windows.h"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:grpc_sockaddr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:iomgr_port"
  "@com_github_grpc_grpc//src/core:iomgr_port" -> "@com_github_grpc_grpc//src/core:lib/iomgr/port.h"
  "@com_github_grpc_grpc//src/core:iomgr_port" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:iomgr_port" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:iomgr_port" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:iomgr_port" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:iomgr_port" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/iomgr/port.h"
  "@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_posix.h\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr.h\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_windows.h"
  "@com_github_grpc_grpc//src/core:lib/iomgr/socket_utils_windows.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/sockaddr_utils_posix.cc\n@com_github_grpc_grpc//src/core:lib/iomgr/socket_utils.h"
  "@com_github_grpc_grpc//:uri_parser"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_github_grpc_grpc//src/core:lib/uri/uri_parser.cc\n@com_github_grpc_grpc//src/core:lib/uri/uri_parser.h"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_google_absl//absl/status:statusor"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:uri_parser" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:uri_parser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:uri_parser" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//src/core:lib/uri/uri_parser.cc\n@com_github_grpc_grpc//src/core:lib/uri/uri_parser.h"
  "@com_github_grpc_grpc//src/core:lib/address_utils/sockaddr_utils.h\n@com_github_grpc_grpc//src/core:lib/address_utils/sockaddr_utils.cc"
  "@com_github_grpc_grpc//src/core:resolver/endpoint_addresses.h\n@com_github_grpc_grpc//src/core:resolver/endpoint_addresses.cc"
  "@com_github_grpc_grpc//src/core:resolver/resolver.cc\n@com_github_grpc_grpc//src/core:resolver/resolver_factory.h\n@com_github_grpc_grpc//src/core:resolver/resolver_registry.cc\n@com_github_grpc_grpc//src/core:resolver/resolver_registry.h\n@com_github_grpc_grpc//src/core:resolver/resolver.h"
  "@com_github_grpc_grpc//src/core:lib/config/core_configuration.h\n@com_github_grpc_grpc//src/core:lib/config/core_configuration.cc"
  "@com_github_grpc_grpc//:gpr"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:util/posix/log.cc\n@com_github_grpc_grpc//src/core:util/tmpfile.h\n@com_github_grpc_grpc//src/core:lib/gprpp/host_port.cc\n@com_github_grpc_grpc//src/core:util/linux/cpu.cc\n@com_github_grpc_grpc//src/core:util/string.h\n@com_github_grpc_grpc//src/core:util/posix/tmpfile.cc\n@com_github_grpc_grpc//src/core:util/posix/string.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/crash.h\n@com_github_grpc_grpc//src/core:lib/gprpp/fork.cc\n...and 38 more items"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_abseil.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_generic.h\n@com_github_grpc_grpc//:include/grpc/support/alloc.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_windows.h\n@com_github_grpc_grpc//:include/grpc/support/log.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/gpr_types.h\n@com_github_grpc_grpc//:include/grpc/support/sync_custom.h\n@com_github_grpc_grpc//:include/grpc/support/cpu.h\n...and 17 more items"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//:include/grpc/support/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/support/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/support/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm.h"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//:include/grpc/impl/codegen/port_platform.h\n@com_github_grpc_grpc//:include/grpc/support/port_platform.h"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:event_engine_thread_local"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:examine_stack"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:tchar"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//:gpr" -> "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/memory:memory"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/strings:cord"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/random:random"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/time:time"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:gpr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/status:status"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/log:log"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/log:globals"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/base:log_severity"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/base:core_headers"
  "@com_github_grpc_grpc//:gpr" -> "@com_google_absl//absl/base:base"
  "@com_github_grpc_grpc//:gpr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random:random"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl/random:random.h"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl/random:distributions"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl/random:seed_sequences"
  "@com_google_absl//absl/random:random" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random:random" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl/random/internal:randen_engine"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl/random/internal:nonsecure_base"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl/random/internal:pcg_engine"
  "@com_google_absl//absl/random:random" -> "@com_google_absl//absl/random/internal:pool_urbg"
  "@com_google_absl//absl/random/internal:pcg_engine"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl/random/internal:pcg_engine.h"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl/random/internal:fastmath"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl/random/internal:iostream_state_saver"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:pcg_engine" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:pcg_engine.h"
  "@com_google_absl//absl/random/internal:nonsecure_base"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/random/internal:nonsecure_base.h"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/random/internal:pool_urbg"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/random/internal:salted_seed_seq"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/random/internal:seed_material"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:nonsecure_base" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/random/internal:nonsecure_base.h"
  "@com_google_absl//absl/random/internal:randen_engine"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@com_google_absl//absl/random/internal:randen_engine.h"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@com_google_absl//absl/random/internal:iostream_state_saver"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@com_google_absl//absl/random/internal:randen"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:randen_engine" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:randen_engine.h"
  "@com_google_absl//absl/random:seed_sequences"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl/random:seed_sequences.cc\n@com_google_absl//absl/random:seed_sequences.h"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl/random:seed_gen_exception"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl/random/internal:pool_urbg"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl/random/internal:salted_seed_seq"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl/random/internal:seed_material"
  "@com_google_absl//absl/random:seed_sequences" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/random:seed_sequences" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random:seed_sequences" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:salted_seed_seq"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl/random/internal:salted_seed_seq.h"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl/random/internal:seed_material"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:salted_seed_seq" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/random/internal:salted_seed_seq.h"
  "@com_google_absl//absl/random/internal:pool_urbg"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/random/internal:pool_urbg.cc\n@com_google_absl//absl/random/internal:pool_urbg.h"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl:wasm"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/random/internal:randen"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/random/internal:seed_material"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/random/internal:traits"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/random:seed_gen_exception"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/random/internal:pool_urbg" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/random/internal:seed_material"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/random/internal:seed_material.h\n@com_google_absl//absl/random/internal:seed_material.cc"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/random/internal:fast_uniform_bits"
  "@com_google_absl//absl/random/internal:seed_material" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:seed_material" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:seed_material" -> "@com_google_absl//absl:mingw_compiler"
  "@com_google_absl//absl/random/internal:seed_material.h\n@com_google_absl//absl/random/internal:seed_material.cc"
  "@com_google_absl//absl/random/internal:randen"
  "@com_google_absl//absl/random/internal:randen" -> "@com_google_absl//absl/random/internal:randen.h\n@com_google_absl//absl/random/internal:randen.cc"
  "@com_google_absl//absl/random/internal:randen" -> "@com_google_absl//absl/random/internal:platform"
  "@com_google_absl//absl/random/internal:randen" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:randen" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:randen" -> "@com_google_absl//absl/random/internal:randen_hwaes"
  "@com_google_absl//absl/random/internal:randen" -> "@com_google_absl//absl/random/internal:randen_slow"
  "@com_google_absl//absl/random/internal:randen" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/random/internal:randen" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:randen" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:randen_slow"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl/random/internal:randen_slow.cc\n@com_google_absl//absl/random/internal:randen_slow.h"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl/random/internal:platform"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:randen_slow" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/random/internal:randen_slow.cc\n@com_google_absl//absl/random/internal:randen_slow.h"
  "@com_google_absl//absl/random/internal:randen_hwaes"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@com_google_absl//absl/random/internal:randen_detect.h\n@com_google_absl//absl/random/internal:randen_detect.cc"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@com_google_absl//absl/random/internal:randen_hwaes.h"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@com_google_absl//absl/random/internal:platform"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@com_google_absl//absl/random/internal:randen_hwaes_impl"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:randen_hwaes" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl/random/internal:cpu_k8\n@com_google_absl//absl/random/internal:cpu_darwin\n@com_google_absl//absl/random/internal:randen_hwaes.cc\n@com_google_absl//absl/random/internal:cpu_x64_windows_msvc\n@com_google_absl//absl/random/internal:cpu_darwin_x86_64\n@com_google_absl//absl/random/internal:cpu_ppc\n@com_google_absl//absl/random/internal:cpu_aarch64\n@com_google_absl//absl/random/internal:cpu_x64_windows"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl/random/internal:randen_hwaes.h"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl/random/internal:platform"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/random/internal:randen_hwaes_impl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:cpu_k8\n@com_google_absl//absl/random/internal:cpu_darwin\n@com_google_absl//absl/random/internal:randen_hwaes.cc\n@com_google_absl//absl/random/internal:cpu_x64_windows_msvc\n@com_google_absl//absl/random/internal:cpu_darwin_x86_64\n@com_google_absl//absl/random/internal:cpu_ppc\n@com_google_absl//absl/random/internal:cpu_aarch64\n@com_google_absl//absl/random/internal:cpu_x64_windows"
  "@com_google_absl//absl/random/internal:randen_hwaes.h"
  "@com_google_absl//absl/random/internal:randen_detect.h\n@com_google_absl//absl/random/internal:randen_detect.cc"
  "@com_google_absl//absl/random/internal:platform"
  "@com_google_absl//absl/random/internal:platform" -> "@com_google_absl//absl/random/internal:randen_round_keys.cc\n@com_google_absl//absl/random/internal:randen_traits.h\n@com_google_absl//absl/random/internal:platform.h"
  "@com_google_absl//absl/random/internal:platform" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:platform" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:platform" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:platform" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:platform" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:randen_round_keys.cc\n@com_google_absl//absl/random/internal:randen_traits.h\n@com_google_absl//absl/random/internal:platform.h"
  "@com_google_absl//absl/random/internal:randen.h\n@com_google_absl//absl/random/internal:randen.cc"
  "@com_google_absl//absl/random/internal:pool_urbg.cc\n@com_google_absl//absl/random/internal:pool_urbg.h"
  "@com_google_absl//absl/random:seed_gen_exception"
  "@com_google_absl//absl/random:seed_gen_exception" -> "@com_google_absl//absl/random:seed_gen_exception.cc\n@com_google_absl//absl/random:seed_gen_exception.h"
  "@com_google_absl//absl/random:seed_gen_exception" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random:seed_gen_exception" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random:seed_gen_exception" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random:seed_gen_exception" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random:seed_gen_exception" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random:seed_gen_exception.cc\n@com_google_absl//absl/random:seed_gen_exception.h"
  "@com_google_absl//absl/random:seed_sequences.cc\n@com_google_absl//absl/random:seed_sequences.h"
  "@com_google_absl//absl/random:distributions"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random:gaussian_distribution.cc\n@com_google_absl//absl/random:poisson_distribution.h\n@com_google_absl//absl/random:distributions.h\n@com_google_absl//absl/random:uniform_real_distribution.h\n@com_google_absl//absl/random:zipf_distribution.h\n@com_google_absl//absl/random:discrete_distribution.cc\n@com_google_absl//absl/random:discrete_distribution.h\n@com_google_absl//absl/random:gaussian_distribution.h\n...and 5 more items"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:fast_uniform_bits"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:fastmath"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:generate_real"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:distribution_caller"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:iostream_state_saver"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:traits"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:uniform_helper"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/random/internal:wide_multiply"
  "@com_google_absl//absl/random:distributions" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/random:distributions" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random:distributions" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:wide_multiply"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@com_google_absl//absl/random/internal:wide_multiply.h"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@com_google_absl//absl/random/internal:traits"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/random/internal:wide_multiply" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:wide_multiply.h"
  "@com_google_absl//absl/random/internal:uniform_helper"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@com_google_absl//absl/random/internal:uniform_helper.h"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@com_google_absl//absl/random/internal:traits"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/random/internal:uniform_helper" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:uniform_helper.h"
  "@com_google_absl//absl/random/internal:iostream_state_saver"
  "@com_google_absl//absl/random/internal:iostream_state_saver" -> "@com_google_absl//absl/random/internal:iostream_state_saver.h"
  "@com_google_absl//absl/random/internal:iostream_state_saver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:iostream_state_saver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:iostream_state_saver" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/random/internal:iostream_state_saver" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:iostream_state_saver" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:iostream_state_saver" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:iostream_state_saver.h"
  "@com_google_absl//absl/random/internal:distribution_caller"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@com_google_absl//absl/random/internal:distribution_caller.h"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@com_google_absl//absl/base:fast_type_id"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:distribution_caller" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:distribution_caller.h"
  "@com_google_absl//absl/random/internal:generate_real"
  "@com_google_absl//absl/random/internal:generate_real" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:generate_real" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:generate_real" -> "@com_google_absl//absl/random/internal:generate_real.h"
  "@com_google_absl//absl/random/internal:generate_real" -> "@com_google_absl//absl/random/internal:fastmath"
  "@com_google_absl//absl/random/internal:generate_real" -> "@com_google_absl//absl/random/internal:traits"
  "@com_google_absl//absl/random/internal:generate_real" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:generate_real" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:generate_real" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/random/internal:generate_real" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:generate_real.h"
  "@com_google_absl//absl/random/internal:fastmath"
  "@com_google_absl//absl/random/internal:fastmath" -> "@com_google_absl//absl/random/internal:fastmath.h"
  "@com_google_absl//absl/random/internal:fastmath" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:fastmath" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:fastmath" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/random/internal:fastmath" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:fastmath" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:fastmath.h"
  "@com_google_absl//absl/random/internal:fast_uniform_bits"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@com_google_absl//absl/random/internal:fast_uniform_bits.h"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@com_google_absl//absl/random/internal:traits"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:fast_uniform_bits" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:traits"
  "@com_google_absl//absl/random/internal:traits" -> "@com_google_absl//absl/random/internal:traits.h"
  "@com_google_absl//absl/random/internal:traits" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/random/internal:traits" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/random/internal:traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/random/internal:traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/random/internal:traits" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/random/internal:traits" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/random/internal:traits" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/random/internal:traits.h"
  "@com_google_absl//absl/random/internal:fast_uniform_bits.h"
  "@com_google_absl//absl/random:gaussian_distribution.cc\n@com_google_absl//absl/random:poisson_distribution.h\n@com_google_absl//absl/random:distributions.h\n@com_google_absl//absl/random:uniform_real_distribution.h\n@com_google_absl//absl/random:zipf_distribution.h\n@com_google_absl//absl/random:discrete_distribution.cc\n@com_google_absl//absl/random:discrete_distribution.h\n@com_google_absl//absl/random:gaussian_distribution.h\n...and 5 more items"
  "@com_google_absl//absl/random:random.h"
  "@com_github_grpc_grpc//src/core:strerror"
  "@com_github_grpc_grpc//src/core:strerror" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:strerror" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:strerror" -> "@com_github_grpc_grpc//src/core:lib/gprpp/strerror.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/strerror.h"
  "@com_github_grpc_grpc//src/core:strerror" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:strerror" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:strerror" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:strerror" -> "@com_google_absl//absl/strings:str_format"
  "@com_github_grpc_grpc//src/core:lib/gprpp/strerror.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/strerror.h"
  "@com_github_grpc_grpc//src/core:no_destruct"
  "@com_github_grpc_grpc//src/core:no_destruct" -> "@com_github_grpc_grpc//src/core:lib/gprpp/no_destruct.h"
  "@com_github_grpc_grpc//src/core:no_destruct" -> "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:no_destruct" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:no_destruct" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:no_destruct" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:no_destruct" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:no_destruct" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/gprpp/no_destruct.h"
  "@com_github_grpc_grpc//src/core:gpr_atm"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@com_github_grpc_grpc//src/core:util/atm.cc\n@com_github_grpc_grpc//:include/grpc/support/atm.h"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:gpr_atm" -> "@com_github_grpc_grpc//:include/grpc/support/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/support/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/support/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm.h"
  "@com_github_grpc_grpc//src/core:useful"
  "@com_github_grpc_grpc//src/core:useful" -> "@com_github_grpc_grpc//src/core:util/useful.h"
  "@com_github_grpc_grpc//src/core:useful" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:useful" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:useful" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:useful" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:useful" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:useful" -> "@com_google_absl//absl/types:variant"
  "@com_github_grpc_grpc//src/core:useful" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//src/core:util/useful.h"
  "@com_github_grpc_grpc//src/core:util/atm.cc\n@com_github_grpc_grpc//:include/grpc/support/atm.h"
  "@com_github_grpc_grpc//src/core:examine_stack"
  "@com_github_grpc_grpc//src/core:examine_stack" -> "@com_github_grpc_grpc//src/core:lib/gprpp/examine_stack.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/examine_stack.h"
  "@com_github_grpc_grpc//src/core:examine_stack" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:examine_stack" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:examine_stack" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:examine_stack" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:examine_stack" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:examine_stack" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/gprpp/examine_stack.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/examine_stack.h"
  "@com_github_grpc_grpc//src/core:event_engine_thread_local"
  "@com_github_grpc_grpc//src/core:event_engine_thread_local" -> "@com_github_grpc_grpc//src/core:lib/event_engine/thread_local.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_local.h"
  "@com_github_grpc_grpc//src/core:event_engine_thread_local" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:event_engine_thread_local" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:event_engine_thread_local" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:event_engine_thread_local" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:event_engine_thread_local" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:lib/event_engine/thread_local.cc\n@com_github_grpc_grpc//src/core:lib/event_engine/thread_local.h"
  "@com_github_grpc_grpc//src/core:construct_destruct"
  "@com_github_grpc_grpc//src/core:construct_destruct" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:construct_destruct" -> "@com_github_grpc_grpc//src/core:lib/gprpp/construct_destruct.h"
  "@com_github_grpc_grpc//src/core:construct_destruct" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:construct_destruct" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:construct_destruct" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:construct_destruct" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:lib/gprpp/construct_destruct.h"
  "@com_github_grpc_grpc//:debug_location"
  "@com_github_grpc_grpc//:debug_location" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:debug_location" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:debug_location" -> "@com_github_grpc_grpc//src/core:lib/gprpp/debug_location.h"
  "@com_github_grpc_grpc//:debug_location" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:debug_location" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:debug_location" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/debug_location.h"
  "@com_github_grpc_grpc//:config_vars"
  "@com_github_grpc_grpc//:config_vars" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:config_vars" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:config_vars" -> "@com_github_grpc_grpc//src/core:lib/config/config_vars.h\n@com_github_grpc_grpc//src/core:lib/config/config_vars.cc\n@com_github_grpc_grpc//src/core:lib/config/config_vars_non_generated.cc"
  "@com_github_grpc_grpc//:config_vars" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:config_vars" -> "@com_github_grpc_grpc//:load_config"
  "@com_github_grpc_grpc//:config_vars" -> "@com_google_absl//absl/flags:flag"
  "@com_github_grpc_grpc//:config_vars" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:config_vars" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//:config_vars" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:config_vars" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:load_config"
  "@com_github_grpc_grpc//:load_config" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:load_config" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:load_config" -> "@com_github_grpc_grpc//src/core:lib/config/load_config.h\n@com_github_grpc_grpc//src/core:lib/config/load_config.cc"
  "@com_github_grpc_grpc//:load_config" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:load_config" -> "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//:load_config" -> "@com_google_absl//absl/flags:flag"
  "@com_github_grpc_grpc//:load_config" -> "@com_google_absl//absl/log:check"
  "@com_github_grpc_grpc//:load_config" -> "@com_google_absl//absl/flags:marshalling"
  "@com_github_grpc_grpc//:load_config" -> "@com_google_absl//absl/strings:strings"
  "@com_github_grpc_grpc//:load_config" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//:load_config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:load_config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:check"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl/log:check.h"
  "@com_google_absl//absl/log:check" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:check" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl/log/internal:strip"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl/log/internal:log_message"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl/log/internal:conditions"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl/log/internal:check_op"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl/log/internal:check_impl"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:check" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:check.h"
  "@com_google_absl//absl/flags:flag"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/flags:declare.h\n@com_google_absl//absl/flags:flag.h"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/flags:config"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/flags:flag_internal"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/flags:reflection"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:flag" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:flag" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:flag" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:flag_internal"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/flags:internal/flag.cc\n@com_google_absl//absl/flags:internal/sequence_lock.h\n@com_google_absl//absl/flags:internal/flag.h"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/flags:commandlineflag"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/flags:commandlineflag_internal"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/flags:config"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/flags:marshalling"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/flags:reflection"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/flags:flag_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:flag_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/flags:flag_internal" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/flags:reflection"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/flags:reflection.h\n@com_google_absl//absl/flags:reflection.cc\n@com_google_absl//absl/flags:internal/registry.h"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/flags:commandlineflag"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/flags:commandlineflag_internal"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/flags:config"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/flags:private_handle_accessor"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/base:no_destructor"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_absl//absl/flags:reflection" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/flags:reflection" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:reflection" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:private_handle_accessor"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@com_google_absl//absl/flags:internal/private_handle_accessor.cc\n@com_google_absl//absl/flags:internal/private_handle_accessor.h"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@com_google_absl//absl/flags:commandlineflag"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@com_google_absl//absl/flags:commandlineflag_internal"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:private_handle_accessor" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:internal/private_handle_accessor.cc\n@com_google_absl//absl/flags:internal/private_handle_accessor.h"
  "@com_google_absl//absl/flags:reflection.h\n@com_google_absl//absl/flags:reflection.cc\n@com_google_absl//absl/flags:internal/registry.h"
  "@com_google_absl//absl/flags:marshalling"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/flags:marshalling.cc\n@com_google_absl//absl/flags:marshalling.h"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:marshalling" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_absl//absl/flags:marshalling" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/flags:marshalling" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:marshalling.cc\n@com_google_absl//absl/flags:marshalling.h"
  "@com_google_absl//absl/flags:commandlineflag"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl/flags:commandlineflag.cc\n@com_google_absl//absl/flags:commandlineflag.h"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl/flags:commandlineflag_internal"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl/base:fast_type_id"
  "@com_google_absl//absl/flags:commandlineflag" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:commandlineflag" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:commandlineflag" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/flags:commandlineflag_internal"
  "@com_google_absl//absl/flags:commandlineflag_internal" -> "@com_google_absl//absl/flags:internal/commandlineflag.cc\n@com_google_absl//absl/flags:internal/commandlineflag.h"
  "@com_google_absl//absl/flags:commandlineflag_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:commandlineflag_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:commandlineflag_internal" -> "@com_google_absl//absl/base:fast_type_id"
  "@com_google_absl//absl/flags:commandlineflag_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:commandlineflag_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:commandlineflag_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:fast_type_id"
  "@com_google_absl//absl/base:fast_type_id" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:fast_type_id" -> "@com_google_absl//absl/base:internal/fast_type_id.h"
  "@com_google_absl//absl/base:fast_type_id" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:fast_type_id" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:fast_type_id" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:fast_type_id" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:internal/fast_type_id.h"
  "@com_google_absl//absl/flags:internal/commandlineflag.cc\n@com_google_absl//absl/flags:internal/commandlineflag.h"
  "@com_google_absl//absl/flags:commandlineflag.cc\n@com_google_absl//absl/flags:commandlineflag.h"
  "@com_google_absl//absl/flags:internal/flag.cc\n@com_google_absl//absl/flags:internal/sequence_lock.h\n@com_google_absl//absl/flags:internal/flag.h"
  "@com_google_absl//absl/flags:config"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl/flags:config.h\n@com_google_absl//absl/flags:usage_config.h\n@com_google_absl//absl/flags:usage_config.cc"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl/flags:path_util"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl/flags:program_name"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/flags:config" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:program_name"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl/flags:internal/program_name.h\n@com_google_absl//absl/flags:internal/program_name.cc"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl/flags:path_util"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/flags:program_name" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:program_name" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:program_name" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:internal/program_name.h\n@com_google_absl//absl/flags:internal/program_name.cc"
  "@com_google_absl//absl/flags:path_util"
  "@com_google_absl//absl/flags:path_util" -> "@com_google_absl//absl/flags:internal/path_util.h"
  "@com_google_absl//absl/flags:path_util" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/flags:path_util" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/flags:path_util" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/flags:path_util" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/flags:path_util" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/flags:path_util" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/flags:internal/path_util.h"
  "@com_google_absl//absl/flags:config.h\n@com_google_absl//absl/flags:usage_config.h\n@com_google_absl//absl/flags:usage_config.cc"
  "@com_google_absl//absl/flags:declare.h\n@com_google_absl//absl/flags:flag.h"
  "@com_github_grpc_grpc//src/core:env"
  "@com_github_grpc_grpc//src/core:env" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:env" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:env" -> "@com_github_grpc_grpc//src/core:lib/gprpp/posix/env.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/windows/env.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/env.h\n@com_github_grpc_grpc//src/core:lib/gprpp/linux/env.cc"
  "@com_github_grpc_grpc//src/core:env" -> "@com_github_grpc_grpc//src/core:tchar"
  "@com_github_grpc_grpc//src/core:env" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:env" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:env" -> "@com_google_absl//absl/types:optional"
  "@com_github_grpc_grpc//src/core:env" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:tchar"
  "@com_github_grpc_grpc//src/core:tchar" -> "@com_github_grpc_grpc//src/core:lib/gprpp/tchar.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/tchar.h"
  "@com_github_grpc_grpc//src/core:tchar" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//src/core:tchar" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//src/core:tchar" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:tchar" -> "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//src/core:tchar" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//src/core:lib/gprpp/tchar.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/tchar.h"
  "@com_github_grpc_grpc//src/core:lib/gprpp/posix/env.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/windows/env.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/env.h\n@com_github_grpc_grpc//src/core:lib/gprpp/linux/env.cc"
  "@com_github_grpc_grpc//src/core:lib/config/load_config.h\n@com_github_grpc_grpc//src/core:lib/config/load_config.cc"
  "@com_github_grpc_grpc//:gpr_platform"
  "@com_github_grpc_grpc//:gpr_platform" -> "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_github_grpc_grpc//:gpr_platform" -> "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:gpr_platform" -> "@com_github_grpc_grpc//:include/grpc/impl/codegen/port_platform.h\n@com_github_grpc_grpc//:include/grpc/support/port_platform.h"
  "@com_github_grpc_grpc//:gpr_platform" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_github_grpc_grpc//:gpr_platform" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_github_grpc_grpc//src/core:lib/config/config_vars.h\n@com_github_grpc_grpc//src/core:lib/config/config_vars.cc\n@com_github_grpc_grpc//src/core:lib/config/config_vars_non_generated.cc"
  "@com_github_grpc_grpc//:include/grpc/impl/codegen/port_platform.h\n@com_github_grpc_grpc//:include/grpc/support/port_platform.h"
  "@com_github_grpc_grpc//:include/grpc/support/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_gcc_atomic.h\n@com_github_grpc_grpc//:include/grpc/support/atm_gcc_sync.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/support/atm_windows.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/atm.h"
  "@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_abseil.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_generic.h\n@com_github_grpc_grpc//:include/grpc/support/alloc.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/sync_windows.h\n@com_github_grpc_grpc//:include/grpc/support/log.h\n@com_github_grpc_grpc//:include/grpc/impl/codegen/gpr_types.h\n@com_github_grpc_grpc//:include/grpc/support/sync_custom.h\n@com_github_grpc_grpc//:include/grpc/support/cpu.h\n...and 17 more items"
  "@com_github_grpc_grpc//src/core:util/posix/log.cc\n@com_github_grpc_grpc//src/core:util/tmpfile.h\n@com_github_grpc_grpc//src/core:lib/gprpp/host_port.cc\n@com_github_grpc_grpc//src/core:util/linux/cpu.cc\n@com_github_grpc_grpc//src/core:util/string.h\n@com_github_grpc_grpc//src/core:util/posix/tmpfile.cc\n@com_github_grpc_grpc//src/core:util/posix/string.cc\n@com_github_grpc_grpc//src/core:lib/gprpp/crash.h\n@com_github_grpc_grpc//src/core:lib/gprpp/fork.cc\n...and 38 more items"
  "@com_github_grpc_grpc//src/core:service_config/service_config_impl.h\n@com_github_grpc_grpc//src/core:service_config/service_config_impl.cc"
  "@com_github_grpc_grpc//:windows_clang"
  "@com_github_grpc_grpc//:windows_clang" -> "@platforms//cpu:x86_64"
  "@com_github_grpc_grpc//:windows_clang" -> "@platforms//os:windows"
  "@com_github_grpc_grpc//:windows_clang" -> "@bazel_tools//tools/cpp:clang-cl"
  "@bazel_tools//tools/cpp:clang-cl"
  "@bazel_tools//tools/cpp:clang-cl" -> "@bazel_tools//tools/cpp:cc_compiler"
  "@bazel_tools//tools/cpp:cc_compiler"
  "@com_github_grpc_grpc//:windows\n@com_github_grpc_grpc//:use_strict_warning_windows\n@com_github_grpc_grpc//:remote_execution\n@com_github_grpc_grpc//:grpc_allow_exceptions\n@com_github_grpc_grpc//:grpc_no_ares\n@com_github_grpc_grpc//:windows_msvc\n@com_github_grpc_grpc//:use_strict_warning\n@com_github_grpc_grpc//:grpc_disallow_exceptions"
  "@com_google_protobuf//src/google/protobuf/io:printer"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_protobuf//src/google/protobuf/io:printer.cc\n@com_google_protobuf//src/google/protobuf/io:printer.h"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/types:variant"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/types:optional"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/functional:function_ref"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/io:printer" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_absl//absl/container:flat_hash_map"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl/container:flat_hash_map.h"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl/container:container_memory"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl/container:hash_function_defaults"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl/container:raw_hash_map"
  "@com_google_absl//absl/container:flat_hash_map" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:flat_hash_map" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl/algorithm:container"
  "@com_google_absl//absl/container:flat_hash_map" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/algorithm:container"
  "@com_google_absl//absl/algorithm:container" -> "@com_google_absl//absl/algorithm:container.h"
  "@com_google_absl//absl/algorithm:container" -> "@com_google_absl//absl/algorithm:algorithm"
  "@com_google_absl//absl/algorithm:container" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/algorithm:container" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/algorithm:container" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/algorithm:container" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/algorithm:container" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/algorithm:container" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/algorithm:container" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/algorithm:container.h"
  "@com_google_absl//absl/container:raw_hash_map"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl/container:internal/raw_hash_map.h"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl/container:container_memory"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl/container:raw_hash_set"
  "@com_google_absl//absl/container:raw_hash_map" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:raw_hash_map" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:raw_hash_map" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:raw_hash_set"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/container:internal/raw_hash_set.h\n@com_google_absl//absl/container:internal/raw_hash_set.cc"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/container:common"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/container:compressed_tuple"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/container:container_memory"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/container:hash_policy_traits"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/container:hashtable_debug_hooks"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/container:hashtablez_sampler"
  "@com_google_absl//absl/container:raw_hash_set" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:raw_hash_set" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/hash:hash"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/base:prefetch"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:raw_hash_set" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:hashtablez_sampler"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/container:internal/hashtablez_sampler.h\n@com_google_absl//absl/container:internal/hashtablez_sampler.cc\n@com_google_absl//absl/container:internal/hashtablez_sampler_force_weak_definition.cc"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/profiling:sample_recorder"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/profiling:exponential_biased"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/debugging:stacktrace"
  "@com_google_absl//absl/container:hashtablez_sampler" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/profiling:sample_recorder"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@com_google_absl//absl/profiling:internal/sample_recorder.h"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/profiling:sample_recorder" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/profiling:internal/sample_recorder.h"
  "@com_google_absl//absl/container:internal/hashtablez_sampler.h\n@com_google_absl//absl/container:internal/hashtablez_sampler.cc\n@com_google_absl//absl/container:internal/hashtablez_sampler_force_weak_definition.cc"
  "@com_google_absl//absl/container:hashtable_debug_hooks"
  "@com_google_absl//absl/container:hashtable_debug_hooks" -> "@com_google_absl//absl/container:internal/hashtable_debug_hooks.h"
  "@com_google_absl//absl/container:hashtable_debug_hooks" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:hashtable_debug_hooks" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:hashtable_debug_hooks" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:hashtable_debug_hooks" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:hashtable_debug_hooks" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:internal/hashtable_debug_hooks.h"
  "@com_google_absl//absl/container:hash_policy_traits"
  "@com_google_absl//absl/container:hash_policy_traits" -> "@com_google_absl//absl/container:internal/hash_policy_traits.h"
  "@com_google_absl//absl/container:hash_policy_traits" -> "@com_google_absl//absl/container:common_policy_traits"
  "@com_google_absl//absl/container:hash_policy_traits" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:hash_policy_traits" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:hash_policy_traits" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:hash_policy_traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:hash_policy_traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:common_policy_traits"
  "@com_google_absl//absl/container:common_policy_traits" -> "@com_google_absl//absl/container:internal/common_policy_traits.h"
  "@com_google_absl//absl/container:common_policy_traits" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:common_policy_traits" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:common_policy_traits" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:common_policy_traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:common_policy_traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:internal/common_policy_traits.h"
  "@com_google_absl//absl/container:internal/hash_policy_traits.h"
  "@com_google_absl//absl/container:common"
  "@com_google_absl//absl/container:common" -> "@com_google_absl//absl/container:internal/common.h"
  "@com_google_absl//absl/container:common" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:common" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:common" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:common" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/container:common" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:common" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:internal/common.h"
  "@com_google_absl//absl/container:internal/raw_hash_set.h\n@com_google_absl//absl/container:internal/raw_hash_set.cc"
  "@com_google_absl//absl/container:internal/raw_hash_map.h"
  "@com_google_absl//absl/container:hash_function_defaults"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@com_google_absl//absl/container:internal/hash_function_defaults.h"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@com_google_absl//absl/hash:hash"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@com_google_absl//absl/strings:cord"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:hash_function_defaults" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:internal/hash_function_defaults.h"
  "@com_google_absl//absl/container:flat_hash_map.h"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink" -> "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink.cc\n@com_google_protobuf//src/google/protobuf/io:zero_copy_sink.h"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink" -> "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink" -> "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@com_google_protobuf//src/google/protobuf/stubs:status_macros.h\n@com_google_protobuf//src/google/protobuf/stubs:common.h\n@com_google_protobuf//src/google/protobuf/stubs:platform_macros.h\n@com_google_protobuf//src/google/protobuf/stubs:port.h\n@com_google_protobuf//src/google/protobuf/stubs:callback.h"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@com_google_absl//absl/status:status"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/stubs:stubs" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/io:io"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_protobuf//src/google/protobuf/io:zero_copy_stream_impl_lite.cc\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream.h\n@com_google_protobuf//src/google/protobuf/io:coded_stream.cc\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream_impl.h\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream_impl.cc\n@com_google_protobuf//src/google/protobuf/io:coded_stream.h\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream.cc\n...and 1 more items"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_protobuf//src/google/protobuf/io:io_win32"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/strings:internal"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/strings:cord"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_protobuf//src/google/protobuf:arena"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/base:base"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf/io:io" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf/io:io_win32"
  "@com_google_protobuf//src/google/protobuf/io:io_win32" -> "@com_google_protobuf//src/google/protobuf/io:io_win32.h\n@com_google_protobuf//src/google/protobuf/io:io_win32.cc"
  "@com_google_protobuf//src/google/protobuf/io:io_win32" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/io:io_win32" -> "@com_google_protobuf//src/google/protobuf:arena"
  "@com_google_protobuf//src/google/protobuf/io:io_win32" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf/io:io_win32" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/io:io_win32" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/io:io_win32" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:arena"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf:arena.cc"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf:serial_arena.h\n@com_google_protobuf//src/google/protobuf:thread_safe_arena.h\n@com_google_protobuf//src/google/protobuf:arenaz_sampler.h\n@com_google_protobuf//src/google/protobuf:arena.h"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf:arena_align"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf:arena_allocation_policy"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf:arena_cleanup"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf:string_block"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/base:prefetch"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/container:layout"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/types:span"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@com_google_absl//absl/utility:if_constexpr"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:arena" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/utility:if_constexpr"
  "@com_google_absl//absl/utility:if_constexpr" -> "@com_google_absl//absl/utility:internal/if_constexpr.h"
  "@com_google_absl//absl/utility:if_constexpr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/utility:if_constexpr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/utility:if_constexpr" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/utility:if_constexpr" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/utility:if_constexpr" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/utility:internal/if_constexpr.h"
  "@com_google_protobuf//src/google/protobuf:string_block"
  "@com_google_protobuf//src/google/protobuf:string_block" -> "@com_google_protobuf//src/google/protobuf:string_block.h"
  "@com_google_protobuf//src/google/protobuf:string_block" -> "@com_google_protobuf//src/google/protobuf:arena_align"
  "@com_google_protobuf//src/google/protobuf:string_block" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf:string_block" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf:string_block" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:string_block" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:string_block.h"
  "@com_google_protobuf//src/google/protobuf:arena_cleanup"
  "@com_google_protobuf//src/google/protobuf:arena_cleanup" -> "@com_google_protobuf//src/google/protobuf:arena_cleanup.h"
  "@com_google_protobuf//src/google/protobuf:arena_cleanup" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf:arena_cleanup" -> "@com_google_absl//absl/base:prefetch"
  "@com_google_protobuf//src/google/protobuf:arena_cleanup" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:arena_cleanup" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:arena_cleanup.h"
  "@com_google_protobuf//src/google/protobuf:arena_allocation_policy"
  "@com_google_protobuf//src/google/protobuf:arena_allocation_policy" -> "@com_google_protobuf//src/google/protobuf:arena_allocation_policy.h"
  "@com_google_protobuf//src/google/protobuf:arena_allocation_policy" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf:arena_allocation_policy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:arena_allocation_policy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:arena_allocation_policy.h"
  "@com_google_protobuf//src/google/protobuf:arena_align"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_protobuf//src/google/protobuf:arena_align.cc"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_protobuf//src/google/protobuf:arena_align.h"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_absl//absl/log:absl_check"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:arena_align" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:absl_check"
  "@com_google_absl//absl/log:absl_check" -> "@com_google_absl//absl/log:absl_check.h"
  "@com_google_absl//absl/log:absl_check" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:absl_check" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:absl_check" -> "@com_google_absl//absl/log/internal:check_impl"
  "@com_google_absl//absl/log:absl_check" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:absl_check" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:check_impl"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl/log/internal:check_impl.h"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl/log/internal:check_op"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl/log/internal:conditions"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl/log/internal:log_message"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl/log/internal:strip"
  "@com_google_absl//absl/log/internal:check_impl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:check_impl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:check_impl" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:check_op"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl/log/internal:check_op.cc\n@com_google_absl//absl/log/internal:check_op.h"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl/log/internal:nullguard"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl/log/internal:nullstream"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl/log/internal:strip"
  "@com_google_absl//absl/log/internal:check_op" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:check_op" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:check_op" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:check_op.cc\n@com_google_absl//absl/log/internal:check_op.h"
  "@com_google_absl//absl/log/internal:check_impl.h"
  "@com_google_absl//absl/log:absl_check.h"
  "@com_google_protobuf//src/google/protobuf/stubs:lite"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_protobuf//src/google/protobuf/stubs:common.cc"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_protobuf//src/google/protobuf/stubs:status_macros.h\n@com_google_protobuf//src/google/protobuf/stubs:common.h\n@com_google_protobuf//src/google/protobuf/stubs:platform_macros.h\n@com_google_protobuf//src/google/protobuf/stubs:port.h\n@com_google_protobuf//src/google/protobuf/stubs:callback.h"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_absl//absl/strings:strings"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_absl//absl/status:statusor"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_protobuf//build_defs:config_android"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_protobuf//build_defs:config_android-stlport\n@com_google_protobuf//build_defs:config_android-default\n@com_google_protobuf//build_defs:config_android-gnu-libstdcpp\n@com_google_protobuf//build_defs:config_android-libcpp\n@com_google_protobuf//build_defs:config_android-legacy-default-crosstool"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@platforms//os:macos"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_absl//absl/log:absl_log"
  "@com_google_protobuf//src/google/protobuf/stubs:lite" -> "@com_google_absl//absl/status:status"
  "@com_google_absl//absl/log:absl_log"
  "@com_google_absl//absl/log:absl_log" -> "@com_google_absl//absl/log:absl_log.h"
  "@com_google_absl//absl/log:absl_log" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:absl_log" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:absl_log" -> "@com_google_absl//absl/log/internal:log_impl"
  "@com_google_absl//absl/log:absl_log" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:absl_log" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:absl_log.h"
  "@platforms//os:macos"
  "@platforms//os:macos" -> "@platforms//os:osx"
  "@com_google_protobuf//build_defs:config_android-stlport\n@com_google_protobuf//build_defs:config_android-default\n@com_google_protobuf//build_defs:config_android-gnu-libstdcpp\n@com_google_protobuf//build_defs:config_android-libcpp\n@com_google_protobuf//build_defs:config_android-legacy-default-crosstool"
  "@com_google_protobuf//build_defs:config_android"
  "@com_google_protobuf//build_defs:config_android" -> "@platforms//os:android"
  "@com_google_absl//absl/status:statusor"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/status:statusor.h\n@com_google_absl//absl/status:internal/statusor_internal.h\n@com_google_absl//absl/status:statusor.cc"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/status:status"
  "@com_google_absl//absl/status:statusor" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/status:statusor" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/types:variant"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/strings:has_ostream_operator"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/status:statusor" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:has_ostream_operator"
  "@com_google_absl//absl/strings:has_ostream_operator" -> "@com_google_absl//absl/strings:has_ostream_operator.h"
  "@com_google_absl//absl/strings:has_ostream_operator" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:has_ostream_operator" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:has_ostream_operator" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:has_ostream_operator" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:has_ostream_operator" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:has_ostream_operator.h"
  "@com_google_absl//absl/status:status"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/status:status_payload_printer.cc\n@com_google_absl//absl/status:status.h\n@com_google_absl//absl/status:status_payload_printer.h\n@com_google_absl//absl/status:internal/status_internal.h\n@com_google_absl//absl/status:status.cc\n@com_google_absl//absl/status:internal/status_internal.cc"
  "@com_google_absl//absl/status:status" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/status:status" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/strings:cord"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/functional:function_ref"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/debugging:symbolize"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/debugging:stacktrace"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/base:strerror"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/base:no_destructor"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl/base:atomic_hook"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/status:status" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cord"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:cord_buffer.h\n@com_google_absl//absl/strings:cord_analysis.h\n@com_google_absl//absl/strings:cord_buffer.cc\n@com_google_absl//absl/strings:cord.cc\n@com_google_absl//absl/strings:cord.h\n@com_google_absl//absl/strings:cord_analysis.cc"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:cord_internal"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:cordz_functions"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:cordz_info"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:cordz_statistics"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:cordz_update_scope"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:cordz_update_tracker"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:internal"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/strings:cord" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:cord" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/functional:function_ref"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/crc:crc_cord_state"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/crc:crc32c"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/strings:cord" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/strings:cordz_update_scope"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl/strings:internal/cordz_update_scope.h"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl/strings:cord_internal"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl/strings:cordz_info"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl/strings:cordz_update_tracker"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:cordz_update_scope" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:internal/cordz_update_scope.h"
  "@com_google_absl//absl/strings:cordz_info"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/strings:internal/cordz_info.h\n@com_google_absl//absl/strings:internal/cordz_info.cc"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/strings:cord_internal"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/strings:cordz_functions"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/strings:cordz_handle"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/strings:cordz_statistics"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/strings:cordz_update_tracker"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/debugging:stacktrace"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/strings:cordz_info" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:cordz_info" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:cordz_info" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cordz_statistics"
  "@com_google_absl//absl/strings:cordz_statistics" -> "@com_google_absl//absl/strings:internal/cordz_statistics.h"
  "@com_google_absl//absl/strings:cordz_statistics" -> "@com_google_absl//absl/strings:cordz_update_tracker"
  "@com_google_absl//absl/strings:cordz_statistics" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cordz_statistics" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cordz_statistics" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cordz_statistics" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:cordz_statistics" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:cordz_update_tracker"
  "@com_google_absl//absl/strings:cordz_update_tracker" -> "@com_google_absl//absl/strings:internal/cordz_update_tracker.h"
  "@com_google_absl//absl/strings:cordz_update_tracker" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cordz_update_tracker" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cordz_update_tracker" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cordz_update_tracker" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:cordz_update_tracker" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:internal/cordz_update_tracker.h"
  "@com_google_absl//absl/strings:internal/cordz_statistics.h"
  "@com_google_absl//absl/strings:cordz_handle"
  "@com_google_absl//absl/strings:cordz_handle" -> "@com_google_absl//absl/strings:internal/cordz_handle.h\n@com_google_absl//absl/strings:internal/cordz_handle.cc"
  "@com_google_absl//absl/strings:cordz_handle" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cordz_handle" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cordz_handle" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/strings:cordz_handle" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cordz_handle" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/strings:cordz_handle" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/strings:cordz_handle" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:cordz_handle" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:internal/cordz_handle.h\n@com_google_absl//absl/strings:internal/cordz_handle.cc"
  "@com_google_absl//absl/strings:internal/cordz_info.h\n@com_google_absl//absl/strings:internal/cordz_info.cc"
  "@com_google_absl//absl/strings:cordz_functions"
  "@com_google_absl//absl/strings:cordz_functions" -> "@com_google_absl//absl/strings:internal/cordz_functions.cc\n@com_google_absl//absl/strings:internal/cordz_functions.h"
  "@com_google_absl//absl/strings:cordz_functions" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cordz_functions" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cordz_functions" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cordz_functions" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:cordz_functions" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/strings:cordz_functions" -> "@com_google_absl//absl/profiling:exponential_biased"
  "@com_google_absl//absl/strings:cordz_functions" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:cordz_functions" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/profiling:exponential_biased"
  "@com_google_absl//absl/profiling:exponential_biased" -> "@com_google_absl//absl/profiling:internal/exponential_biased.cc\n@com_google_absl//absl/profiling:internal/exponential_biased.h"
  "@com_google_absl//absl/profiling:exponential_biased" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/profiling:exponential_biased" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/profiling:exponential_biased" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/profiling:exponential_biased" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/profiling:exponential_biased" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/profiling:internal/exponential_biased.cc\n@com_google_absl//absl/profiling:internal/exponential_biased.h"
  "@com_google_absl//absl/strings:internal/cordz_functions.cc\n@com_google_absl//absl/strings:internal/cordz_functions.h"
  "@com_google_absl//absl/strings:cord_internal"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/strings:internal/cord_rep_btree_navigator.h\n@com_google_absl//absl/strings:internal/cord_internal.h\n@com_google_absl//absl/strings:internal/cord_rep_consume.cc\n@com_google_absl//absl/strings:internal/cord_rep_btree_reader.h\n@com_google_absl//absl/strings:internal/cord_rep_crc.cc\n@com_google_absl//absl/strings:internal/cord_rep_crc.h\n@com_google_absl//absl/strings:internal/cord_data_edge.h\n@com_google_absl//absl/strings:internal/cord_rep_btree.h\n...and 6 more items"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/container:compressed_tuple"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/container:container_memory"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/container:layout"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/crc:crc_cord_state"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/functional:function_ref"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/strings:cord_internal" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/strings:cord_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:cord_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/crc:crc_cord_state"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@com_google_absl//absl/crc:internal/crc_cord_state.h\n@com_google_absl//absl/crc:internal/crc_cord_state.cc"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@com_google_absl//absl/crc:crc32c"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/crc:crc_cord_state" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/crc:crc32c"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/crc:crc32c.cc\n@com_google_absl//absl/crc:internal/crc_memcpy.h\n@com_google_absl//absl/crc:internal/crc_memcpy_x86_arm_combined.cc\n@com_google_absl//absl/crc:internal/crc32c.h\n@com_google_absl//absl/crc:internal/crc_non_temporal_memcpy.cc\n@com_google_absl//absl/crc:internal/crc32c_inline.h\n@com_google_absl//absl/crc:crc32c.h\n@com_google_absl//absl/crc:internal/crc_memcpy_fallback.cc"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/crc:cpu_detect"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/crc:crc_internal"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/crc:non_temporal_memcpy"
  "@com_google_absl//absl/crc:crc32c" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/crc:crc32c" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/base:prefetch"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/crc:crc32c" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/crc:non_temporal_memcpy"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@com_google_absl//absl/crc:internal/non_temporal_memcpy.h"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@com_google_absl//absl/crc:non_temporal_arm_intrinsics"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/crc:non_temporal_memcpy" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/crc:non_temporal_arm_intrinsics"
  "@com_google_absl//absl/crc:non_temporal_arm_intrinsics" -> "@com_google_absl//absl/crc:internal/non_temporal_arm_intrinsics.h"
  "@com_google_absl//absl/crc:non_temporal_arm_intrinsics" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/crc:non_temporal_arm_intrinsics" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/crc:non_temporal_arm_intrinsics" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/crc:non_temporal_arm_intrinsics" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/crc:non_temporal_arm_intrinsics" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/crc:internal/non_temporal_arm_intrinsics.h"
  "@com_google_absl//absl/crc:internal/non_temporal_memcpy.h"
  "@com_google_absl//absl/crc:crc_internal"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/crc:internal/crc_internal.h\n@com_google_absl//absl/crc:internal/crc32_x86_arm_combined_simd.h\n@com_google_absl//absl/crc:internal/crc.cc\n@com_google_absl//absl/crc:internal/crc.h\n@com_google_absl//absl/crc:internal/crc_x86_arm_combined.cc"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/crc:cpu_detect"
  "@com_google_absl//absl/crc:crc_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/crc:crc_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/base:prefetch"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/crc:crc_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/crc:internal/crc_internal.h\n@com_google_absl//absl/crc:internal/crc32_x86_arm_combined_simd.h\n@com_google_absl//absl/crc:internal/crc.cc\n@com_google_absl//absl/crc:internal/crc.h\n@com_google_absl//absl/crc:internal/crc_x86_arm_combined.cc"
  "@com_google_absl//absl/crc:cpu_detect"
  "@com_google_absl//absl/crc:cpu_detect" -> "@com_google_absl//absl/crc:internal/cpu_detect.cc\n@com_google_absl//absl/crc:internal/cpu_detect.h"
  "@com_google_absl//absl/crc:cpu_detect" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/crc:cpu_detect" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/crc:cpu_detect" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/crc:cpu_detect" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/crc:cpu_detect" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/crc:cpu_detect" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/crc:internal/cpu_detect.cc\n@com_google_absl//absl/crc:internal/cpu_detect.h"
  "@com_google_absl//absl/crc:crc32c.cc\n@com_google_absl//absl/crc:internal/crc_memcpy.h\n@com_google_absl//absl/crc:internal/crc_memcpy_x86_arm_combined.cc\n@com_google_absl//absl/crc:internal/crc32c.h\n@com_google_absl//absl/crc:internal/crc_non_temporal_memcpy.cc\n@com_google_absl//absl/crc:internal/crc32c_inline.h\n@com_google_absl//absl/crc:crc32c.h\n@com_google_absl//absl/crc:internal/crc_memcpy_fallback.cc"
  "@com_google_absl//absl/crc:internal/crc_cord_state.h\n@com_google_absl//absl/crc:internal/crc_cord_state.cc"
  "@com_google_absl//absl/container:layout"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/container:internal/layout.h"
  "@com_google_absl//absl/container:layout" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:layout" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/debugging:demangle_internal"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:layout" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:internal/layout.h"
  "@com_google_absl//absl/container:container_memory"
  "@com_google_absl//absl/container:container_memory" -> "@com_google_absl//absl/container:internal/container_memory.h"
  "@com_google_absl//absl/container:container_memory" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:container_memory" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:container_memory" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:container_memory" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:container_memory" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:container_memory" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/container:container_memory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:container_memory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:internal/container_memory.h"
  "@com_google_absl//absl/strings:internal/cord_rep_btree_navigator.h\n@com_google_absl//absl/strings:internal/cord_internal.h\n@com_google_absl//absl/strings:internal/cord_rep_consume.cc\n@com_google_absl//absl/strings:internal/cord_rep_btree_reader.h\n@com_google_absl//absl/strings:internal/cord_rep_crc.cc\n@com_google_absl//absl/strings:internal/cord_rep_crc.h\n@com_google_absl//absl/strings:internal/cord_data_edge.h\n@com_google_absl//absl/strings:internal/cord_rep_btree.h\n...and 6 more items"
  "@com_google_absl//absl/strings:cord_buffer.h\n@com_google_absl//absl/strings:cord_analysis.h\n@com_google_absl//absl/strings:cord_buffer.cc\n@com_google_absl//absl/strings:cord.cc\n@com_google_absl//absl/strings:cord.h\n@com_google_absl//absl/strings:cord_analysis.cc"
  "@com_google_absl//absl/status:status_payload_printer.cc\n@com_google_absl//absl/status:status.h\n@com_google_absl//absl/status:status_payload_printer.h\n@com_google_absl//absl/status:internal/status_internal.h\n@com_google_absl//absl/status:status.cc\n@com_google_absl//absl/status:internal/status_internal.cc"
  "@com_google_absl//absl/status:statusor.h\n@com_google_absl//absl/status:internal/statusor_internal.h\n@com_google_absl//absl/status:statusor.cc"
  "@com_google_protobuf//src/google/protobuf/stubs:status_macros.h\n@com_google_protobuf//src/google/protobuf/stubs:common.h\n@com_google_protobuf//src/google/protobuf/stubs:platform_macros.h\n@com_google_protobuf//src/google/protobuf/stubs:port.h\n@com_google_protobuf//src/google/protobuf/stubs:callback.h"
  "@com_google_protobuf//src/google/protobuf/stubs:common.cc"
  "@com_google_protobuf//src/google/protobuf:port"
  "@com_google_protobuf//src/google/protobuf:port" -> "@com_google_protobuf//src/google/protobuf:port.cc"
  "@com_google_protobuf//src/google/protobuf:port" -> "@com_google_protobuf//src/google/protobuf:port.h"
  "@com_google_protobuf//src/google/protobuf:port" -> "@com_google_protobuf//src/google/protobuf:port_undef.inc\n@com_google_protobuf//src/google/protobuf:port_def.inc"
  "@com_google_protobuf//src/google/protobuf:port" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_protobuf//src/google/protobuf:port" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_protobuf//src/google/protobuf:port" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_protobuf//src/google/protobuf:port" -> "@com_google_absl//absl/base:config"
  "@com_google_protobuf//src/google/protobuf:port" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_protobuf//src/google/protobuf:port_undef.inc\n@com_google_protobuf//src/google/protobuf:port_def.inc"
  "@com_google_protobuf//src/google/protobuf:port.h"
  "@com_google_protobuf//src/google/protobuf:port.cc"
  "@com_google_protobuf//src/google/protobuf:arena_align.h"
  "@com_google_protobuf//src/google/protobuf:arena_align.cc"
  "@com_google_protobuf//src/google/protobuf:serial_arena.h\n@com_google_protobuf//src/google/protobuf:thread_safe_arena.h\n@com_google_protobuf//src/google/protobuf:arenaz_sampler.h\n@com_google_protobuf//src/google/protobuf:arena.h"
  "@com_google_protobuf//src/google/protobuf:arena.cc"
  "@com_google_protobuf//build_defs:config_msvc"
  "@com_google_protobuf//build_defs:config_msvc" -> "@bazel_tools//tools/cpp:compiler"
  "@com_google_protobuf//src/google/protobuf/io:io_win32.h\n@com_google_protobuf//src/google/protobuf/io:io_win32.cc"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_stream_impl_lite.cc\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream.h\n@com_google_protobuf//src/google/protobuf/io:coded_stream.cc\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream_impl.h\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream_impl.cc\n@com_google_protobuf//src/google/protobuf/io:coded_stream.h\n@com_google_protobuf//src/google/protobuf/io:zero_copy_stream.cc\n...and 1 more items"
  "@com_google_protobuf//src/google/protobuf/io:zero_copy_sink.cc\n@com_google_protobuf//src/google/protobuf/io:zero_copy_sink.h"
  "@com_google_protobuf//src/google/protobuf/io:printer.cc\n@com_google_protobuf//src/google/protobuf/io:printer.h"
  "@boost//:archive"
  "@boost//:archive" -> "@boost//:windows_x86_64"
  "@boost//:archive" -> "@platforms//os:windows"
  "@boost//:archive" -> "@boost//:assert"
  "@boost//:archive" -> "@boost//:cstdint"
  "@boost//:archive" -> "@boost//:integer"
  "@boost//:archive" -> "@boost//:io"
  "@boost//:archive" -> "@boost//:iterator"
  "@boost//:archive" -> "@boost//:mpl"
  "@boost//:archive" -> "@boost//:noncopyable"
  "@boost//:archive" -> "@boost//:smart_ptr"
  "@boost//:archive" -> "@boost//:spirit"
  "@boost//:archive" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:archive" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:spirit"
  "@boost//:spirit" -> "@boost//:windows_x86_64"
  "@boost//:spirit" -> "@platforms//os:windows"
  "@boost//:spirit" -> "@boost//:libs/spirit/include/boost/spirit/include/karma_eps.hpp\n@boost//:libs/spirit/include/boost/spirit/include/classic_parser_id.hpp\n@boost//:libs/spirit/include/boost/spirit/home/classic/core/non_terminal/rule.hpp\n@boost//:libs/spirit/include/boost/spirit/include/support_istream_iterator.hpp\n@boost//:libs/spirit/include/boost/spirit/home/classic/core/composite/sequential_and.hpp\n@boost//:libs/spirit/include/boost/spirit/home/qi/auto/create_parser.hpp\n...and 1048 more items"
  "@boost//:spirit" -> "@boost//:endian"
  "@boost//:spirit" -> "@boost//:foreach"
  "@boost//:spirit" -> "@boost//:function"
  "@boost//:spirit" -> "@boost//:iostreams"
  "@boost//:spirit" -> "@boost//:optional"
  "@boost//:spirit" -> "@boost//:phoenix"
  "@boost//:spirit" -> "@boost//:range"
  "@boost//:spirit" -> "@boost//:ref"
  "@boost//:spirit" -> "@boost//:tti"
  "@boost//:spirit" -> "@boost//:utility"
  "@boost//:spirit" -> "@boost//:variant"
  "@boost//:spirit" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:spirit" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:variant"
  "@boost//:variant" -> "@boost//:windows_x86_64"
  "@boost//:variant" -> "@boost//:libs/variant/include/boost/variant/polymorphic_get.hpp\n@boost//:libs/variant/include/boost/variant/recursive_variant.hpp\n@boost//:libs/variant/include/boost/variant/static_visitor.hpp\n@boost//:libs/variant/include/boost/variant/multivisitors.hpp\n@boost//:libs/variant/include/boost/variant/detail/apply_visitor_unary.hpp\n@boost//:libs/variant/include/boost/variant/detail/substitute.hpp\n@boost//:libs/variant/include/boost/variant/detail/move.hpp\n...and 30 more items"
  "@boost//:variant" -> "@platforms//os:windows"
  "@boost//:variant" -> "@boost//:call_traits"
  "@boost//:variant" -> "@boost//:config"
  "@boost//:variant" -> "@boost//:detail"
  "@boost//:variant" -> "@boost//:functional"
  "@boost//:variant" -> "@boost//:math"
  "@boost//:variant" -> "@boost//:static_assert"
  "@boost//:variant" -> "@boost//:type_index"
  "@boost//:variant" -> "@boost//:type_traits"
  "@boost//:variant" -> "@boost//:utility"
  "@boost//:variant" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:variant" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/variant/include/boost/variant/polymorphic_get.hpp\n@boost//:libs/variant/include/boost/variant/recursive_variant.hpp\n@boost//:libs/variant/include/boost/variant/static_visitor.hpp\n@boost//:libs/variant/include/boost/variant/multivisitors.hpp\n@boost//:libs/variant/include/boost/variant/detail/apply_visitor_unary.hpp\n@boost//:libs/variant/include/boost/variant/detail/substitute.hpp\n@boost//:libs/variant/include/boost/variant/detail/move.hpp\n...and 30 more items"
  "@boost//:tti"
  "@boost//:tti" -> "@boost//:windows_x86_64"
  "@boost//:tti" -> "@boost//:libs/tti/include/boost/tti/has_template.hpp\n@boost//:libs/tti/include/boost/tti/detail/dstatic_function_type.hpp\n@boost//:libs/tti/include/boost/tti/detail/dtype.hpp\n@boost//:libs/tti/include/boost/tti/detail/dfunction.hpp\n@boost//:libs/tti/include/boost/tti/detail/dmem_fun_template.hpp\n@boost//:libs/tti/include/boost/tti/gen/namespace_gen.hpp\n@boost//:libs/tti/include/boost/tti/detail/dmacro_fun_template.hpp\n...and 60 more items"
  "@boost//:tti" -> "@platforms//os:windows"
  "@boost//:tti" -> "@boost//:config"
  "@boost//:tti" -> "@boost//:function_types"
  "@boost//:tti" -> "@boost//:mpl"
  "@boost//:tti" -> "@boost//:preprocessor"
  "@boost//:tti" -> "@boost//:type_traits"
  "@boost//:tti" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:tti" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/tti/include/boost/tti/has_template.hpp\n@boost//:libs/tti/include/boost/tti/detail/dstatic_function_type.hpp\n@boost//:libs/tti/include/boost/tti/detail/dtype.hpp\n@boost//:libs/tti/include/boost/tti/detail/dfunction.hpp\n@boost//:libs/tti/include/boost/tti/detail/dmem_fun_template.hpp\n@boost//:libs/tti/include/boost/tti/gen/namespace_gen.hpp\n@boost//:libs/tti/include/boost/tti/detail/dmacro_fun_template.hpp\n...and 60 more items"
  "@boost//:phoenix"
  "@boost//:phoenix" -> "@boost//:windows_x86_64"
  "@boost//:phoenix" -> "@platforms//os:windows"
  "@boost//:phoenix" -> "@boost//:libs/phoenix/include/boost/phoenix/core/detail/cpp03/preprocessed/function_eval_expr_30.hpp\n@boost//:libs/phoenix/include/boost/phoenix/object/delete.hpp\n@boost//:libs/phoenix/include/boost/phoenix/operator/self.hpp\n@boost//:libs/phoenix/include/boost/phoenix/core/detail/cpp03/preprocessed/argument_predefined_50.hpp\n@boost//:libs/phoenix/include/boost/phoenix/object/detail/cpp03/preprocessed/new_40.hpp\n...and 330 more items"
  "@boost//:phoenix" -> "@boost//:bind"
  "@boost//:phoenix" -> "@boost//:proto"
  "@boost//:phoenix" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:phoenix" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:proto"
  "@boost//:proto" -> "@boost//:windows_x86_64"
  "@boost//:proto" -> "@platforms//os:windows"
  "@boost//:proto" -> "@boost//:libs/proto/include/boost/proto/detail/deduce_domain_n.hpp\n@boost//:libs/proto/include/boost/proto/detail/template_arity_helper.hpp\n@boost//:libs/proto/include/boost/proto/transform/detail/make.hpp\n@boost//:libs/proto/include/boost/proto/proto.hpp\n@boost//:libs/proto/include/boost/proto/detail/poly_function.hpp\n@boost//:libs/proto/include/boost/proto/detail/decltype.hpp\n@boost//:libs/proto/include/boost/proto/traits.hpp\n...and 143 more items"
  "@boost//:proto" -> "@boost//:fusion"
  "@boost//:proto" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/proto/include/boost/proto/detail/deduce_domain_n.hpp\n@boost//:libs/proto/include/boost/proto/detail/template_arity_helper.hpp\n@boost//:libs/proto/include/boost/proto/transform/detail/make.hpp\n@boost//:libs/proto/include/boost/proto/proto.hpp\n@boost//:libs/proto/include/boost/proto/detail/poly_function.hpp\n@boost//:libs/proto/include/boost/proto/detail/decltype.hpp\n@boost//:libs/proto/include/boost/proto/traits.hpp\n...and 143 more items"
  "@boost//:libs/phoenix/include/boost/phoenix/core/detail/cpp03/preprocessed/function_eval_expr_30.hpp\n@boost//:libs/phoenix/include/boost/phoenix/object/delete.hpp\n@boost//:libs/phoenix/include/boost/phoenix/operator/self.hpp\n@boost//:libs/phoenix/include/boost/phoenix/core/detail/cpp03/preprocessed/argument_predefined_50.hpp\n@boost//:libs/phoenix/include/boost/phoenix/object/detail/cpp03/preprocessed/new_40.hpp\n...and 330 more items"
  "@boost//:iostreams"
  "@boost//:iostreams" -> "@boost//:windows_x86_64"
  "@boost//:iostreams" -> "@boost//:libs/iostreams/src/mapped_file.cpp\n@boost//:libs/iostreams/src/bzip2.cpp\n@boost//:libs/iostreams/include/boost/iostreams/detail/path.hpp\n@boost//:libs/iostreams/include/boost/iostreams/read.hpp\n@boost//:libs/iostreams/include/boost/iostreams/detail/template_params.hpp\n@boost//:libs/iostreams/include/boost/iostreams/stream.hpp\n@boost//:libs/iostreams/include/boost/iostreams/flush.hpp\n@boost//:libs/iostreams/include/boost/iostreams/slice.hpp\n...and 126 more items"
  "@boost//:iostreams" -> "@platforms//os:windows"
  "@boost//:iostreams" -> "@boost//:assert"
  "@boost//:iostreams" -> "@boost//:bind"
  "@boost//:iostreams" -> "@boost//:call_traits"
  "@boost//:iostreams" -> "@boost//:checked_delete"
  "@boost//:iostreams" -> "@boost//:config"
  "@boost//:iostreams" -> "@boost//:core"
  "@boost//:iostreams" -> "@boost//:cstdint"
  "@boost//:iostreams" -> "@boost//:detail"
  "@boost//:iostreams" -> "@boost//:function"
  "@boost//:iostreams" -> "@boost//:integer"
  "@boost//:iostreams" -> "@boost//:mpl"
  "@boost//:iostreams" -> "@boost//:noncopyable"
  "@boost//:iostreams" -> "@boost//:numeric_conversion"
  "@boost//:iostreams" -> "@boost//:preprocessor"
  "@boost//:iostreams" -> "@boost//:random"
  "@boost//:iostreams" -> "@boost//:range"
  "@boost//:iostreams" -> "@boost//:ref"
  "@boost//:iostreams" -> "@boost//:regex"
  "@boost//:iostreams" -> "@boost//:shared_ptr"
  "@boost//:iostreams" -> "@boost//:static_assert"
  "@boost//:iostreams" -> "@boost//:throw_exception"
  "@boost//:iostreams" -> "@boost//:type"
  "@boost//:iostreams" -> "@boost//:type_traits"
  "@boost//:iostreams" -> "@boost//:utility"
  "@boost//:iostreams" -> "@zstd//:zstd"
  "@boost//:iostreams" -> "@bzip2//:bz2lib"
  "@boost//:iostreams" -> "@xz//:lzma"
  "@boost//:iostreams" -> "@zlib//:zlib"
  "@boost//:iostreams" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:iostreams" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bzip2//:bz2lib"
  "@bzip2//:bz2lib" -> "@bzip2//:libbzip2"
  "@bzip2//:libbzip2"
  "@bzip2//:libbzip2" -> "@bzip2//:bz2lib_system"
  [label="@@platforms//os:ios\n@@platforms//os:watchos\n@@platforms//os:osx..."];
  "@bzip2//:libbzip2" -> "@platforms//os:osx"
  "@bzip2//:libbzip2" -> "@platforms//os:ios"
  "@bzip2//:libbzip2" -> "@platforms//os:watchos\n@platforms//os:tvos"
  "@bzip2//:libbzip2" -> "@bzip2//:bz2lib_source"
  [label="//conditions:default"];
  "@bzip2//:bz2lib_source"
  "@bzip2//:bz2lib_source" -> "@bzip2//:huffman.c\n@bzip2//:bzlib_private.h\n@bzip2//:decompress.c\n@bzip2//:crctable.c\n@bzip2//:bzlib.c\n@bzip2//:compress.c\n@bzip2//:bzlib.h\n@bzip2//:randtable.c\n@bzip2//:blocksort.c"
  "@bzip2//:bz2lib_source" -> "@bzip2//:bz_version.h"
  "@bzip2//:bz2lib_source" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bzip2//:bz2lib_source" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bzip2//:bz_version.h"
  "@bzip2//:bz_version.h" -> "@bzip2//:bz_version_h"
  "@bzip2//:bz_version_h"
  "@bzip2//:bz_version_h" -> "@bzip2//:bz_version.h.in"
  "@bzip2//:bz_version.h.in"
  "@bzip2//:huffman.c\n@bzip2//:bzlib_private.h\n@bzip2//:decompress.c\n@bzip2//:crctable.c\n@bzip2//:bzlib.c\n@bzip2//:compress.c\n@bzip2//:bzlib.h\n@bzip2//:randtable.c\n@bzip2//:blocksort.c"
  "@bzip2//:bz2lib_system"
  "@bzip2//:bz2lib_system" -> "@bazel_tools//tools/def_parser:def_parser"
  "@bzip2//:bz2lib_system" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@zstd//:zstd"
  "@zstd//:zstd" -> "@zstd//:linux_x86_64"
  "@zstd//:zstd" -> "@zstd//:lib/decompress/zstd_decompress.c\n@zstd//:lib/compress/zstd_compress_internal.h\n@zstd//:lib/common/zstd_trace.h\n@zstd//:lib/decompress/zstd_decompress_block.c\n@zstd//:lib/legacy/zstd_v01.h\n@zstd//:lib/common/portability_macros.h\n@zstd//:lib/legacy/zstd_v07.h\n@zstd//:lib/common/xxhash.c\n@zstd//:lib/compress/zstd_ldm.c\n@zstd//:lib/compress/huf_compress.c\n@zstd//:lib/common/bitstream.h\n@zstd//:lib/compress/zstd_lazy.h\n@zstd//:lib/compress/zstd_ldm.h\n...and 72 more items"
  [label="@@zstd//:linux_x86_64"];
  "@zstd//:zstd" -> "@lz4//:lz4"
  "@zstd//:zstd" -> "@xz//:lzma"
  "@zstd//:zstd" -> "@zlib//:zlib"
  "@zstd//:zstd" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@zstd//:zstd" -> "@bazel_tools//tools/def_parser:def_parser"
  "@zlib//:zlib"
  "@zlib//:zlib" -> "@zlib//:zlib_system"
  [label="@@platforms//os:android\n@@platforms//os:ios\n@@platforms//os:watchos..."];
  "@zlib//:zlib" -> "@zlib//:z"
  [label="//conditions:default"];
  "@zlib//:zlib" -> "@platforms//os:android"
  "@zlib//:zlib" -> "@platforms//os:osx"
  "@zlib//:zlib" -> "@platforms//os:ios"
  "@zlib//:zlib" -> "@platforms//os:watchos\n@platforms//os:tvos"
  "@platforms//os:watchos\n@platforms//os:tvos"
  "@platforms//os:watchos\n@platforms//os:tvos" -> "@platforms//os:os"
  "@zlib//:z"
  "@zlib//:z" -> "@zlib//:gzclose.c\n@zlib//:adler32.c\n@zlib//:inftrees.c\n@zlib//:inflate.h\n@zlib//:inffixed.h\n@zlib//:zutil.c\n@zlib//:compress.c\n@zlib//:uncompr.c\n@zlib//:gzguts.h\n@zlib//:zconf.h\n@zlib//:gzlib.c\n@zlib//:crc32.h\n@zlib//:inftrees.h\n@zlib//:trees.h\n@zlib//:inffast.c\n@zlib//:trees.c\n@zlib//:deflate.c\n@zlib//:crc32.c\n@zlib//:inffast.h\n@zlib//:deflate.h\n@zlib//:gzwrite.c\n@zlib//:inflate.c\n@zlib//:zutil.h\n@zlib//:infback.c\n@zlib//:gzread.c\n@zlib//:zlib.h"
  "@zlib//:z" -> "@platforms//os:windows"
  "@zlib//:z" -> "@bazel_tools//tools/def_parser:def_parser"
  "@zlib//:z" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@zlib//:gzclose.c\n@zlib//:adler32.c\n@zlib//:inftrees.c\n@zlib//:inflate.h\n@zlib//:inffixed.h\n@zlib//:zutil.c\n@zlib//:compress.c\n@zlib//:uncompr.c\n@zlib//:gzguts.h\n@zlib//:zconf.h\n@zlib//:gzlib.c\n@zlib//:crc32.h\n@zlib//:inftrees.h\n@zlib//:trees.h\n@zlib//:inffast.c\n@zlib//:trees.c\n@zlib//:deflate.c\n@zlib//:crc32.c\n@zlib//:inffast.h\n@zlib//:deflate.h\n@zlib//:gzwrite.c\n@zlib//:inflate.c\n@zlib//:zutil.h\n@zlib//:infback.c\n@zlib//:gzread.c\n@zlib//:zlib.h"
  "@zlib//:zlib_system"
  "@zlib//:zlib_system" -> "@bazel_tools//tools/def_parser:def_parser"
  "@zlib//:zlib_system" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@xz//:lzma"
  "@xz//:lzma" -> "@xz//:src/liblzma/common/filter_flags_encoder.c\n@xz//:src/liblzma/lzma/lzma_common.h\n@xz//:src/liblzma/common/outqueue.h\n@xz//:src/liblzma/lzma/lzma2_encoder.c\n@xz//:src/liblzma/common/index_decoder.h\n@xz//:src/liblzma/common/filter_buffer_decoder.c\n@xz//:src/liblzma/common/block_buffer_encoder.c\n@xz//:src/liblzma/check/crc_common.h\n@xz//:src/liblzma/common/stream_encoder.c\n@xz//:src/liblzma/check/crc64_table_le.h\n@xz//:src/liblzma/api/lzma/check.h\n...and 139 more items"
  [label="@@platforms//cpu:aarch64@@platforms//cpu:riscv64@@platforms//cpu:x86_64//conditions:default"];
  "@xz//:lzma" -> "@xz//:src/liblzma/api/lzma/version.h"
  "@xz//:lzma" -> "@platforms//cpu:aarch64"
  "@xz//:lzma" -> "@platforms//cpu:riscv64"
  "@xz//:lzma" -> "@platforms//os:windows"
  "@xz//:lzma" -> "@platforms//cpu:x86_64"
  "@xz//:lzma" -> "@platforms//os:android"
  "@xz//:lzma" -> "@bazel_tools//tools/def_parser:def_parser"
  "@xz//:lzma" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@platforms//cpu:aarch64"
  "@platforms//cpu:aarch64" -> "@platforms//cpu:cpu"
  "@xz//:src/liblzma/api/lzma/version.h"
  "@xz//:src/liblzma/common/filter_flags_encoder.c\n@xz//:src/liblzma/lzma/lzma_common.h\n@xz//:src/liblzma/common/outqueue.h\n@xz//:src/liblzma/lzma/lzma2_encoder.c\n@xz//:src/liblzma/common/index_decoder.h\n@xz//:src/liblzma/common/filter_buffer_decoder.c\n@xz//:src/liblzma/common/block_buffer_encoder.c\n@xz//:src/liblzma/check/crc_common.h\n@xz//:src/liblzma/common/stream_encoder.c\n@xz//:src/liblzma/check/crc64_table_le.h\n@xz//:src/liblzma/api/lzma/check.h\n...and 139 more items"
  "@lz4//:lz4"
  "@lz4//:lz4" -> "@lz4//:lib/lz4file.h\n@lz4//:lib/xxhash.c\n@lz4//:lib/xxhash.h\n@lz4//:lib/lz4frame.h\n@lz4//:lib/lz4file.c\n@lz4//:lib/lz4.h\n@lz4//:lib/lz4hc.c\n@lz4//:lib/lz4hc.h\n@lz4//:lib/lz4.c\n@lz4//:lib/lz4frame.c\n@lz4//:lib/lz4frame_static.h"
  "@lz4//:lz4" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@lz4//:lz4" -> "@bazel_tools//tools/def_parser:def_parser"
  "@lz4//:lib/lz4file.h\n@lz4//:lib/xxhash.c\n@lz4//:lib/xxhash.h\n@lz4//:lib/lz4frame.h\n@lz4//:lib/lz4file.c\n@lz4//:lib/lz4.h\n@lz4//:lib/lz4hc.c\n@lz4//:lib/lz4hc.h\n@lz4//:lib/lz4.c\n@lz4//:lib/lz4frame.c\n@lz4//:lib/lz4frame_static.h"
  "@zstd//:lib/decompress/zstd_decompress.c\n@zstd//:lib/compress/zstd_compress_internal.h\n@zstd//:lib/common/zstd_trace.h\n@zstd//:lib/decompress/zstd_decompress_block.c\n@zstd//:lib/legacy/zstd_v01.h\n@zstd//:lib/common/portability_macros.h\n@zstd//:lib/legacy/zstd_v07.h\n@zstd//:lib/common/xxhash.c\n@zstd//:lib/compress/zstd_ldm.c\n@zstd//:lib/compress/huf_compress.c\n@zstd//:lib/common/bitstream.h\n@zstd//:lib/compress/zstd_lazy.h\n@zstd//:lib/compress/zstd_ldm.h\n...and 72 more items"
  "@zstd//:linux_x86_64"
  "@zstd//:linux_x86_64" -> "@platforms//os:linux"
  "@zstd//:linux_x86_64" -> "@platforms//cpu:x86_64"
  "@platforms//os:linux"
  "@platforms//os:linux" -> "@platforms//os:os"
  "@boost//:random"
  "@boost//:random" -> "@boost//:windows_x86_64"
  "@boost//:random" -> "@boost//:libs/random/include/boost/random/fisher_f_distribution.hpp\n@boost//:libs/random/include/boost/random/uniform_real_distribution.hpp\n@boost//:libs/random/include/boost/random/chi_squared_distribution.hpp\n@boost//:libs/random/include/boost/random/detail/uniform_int_float.hpp\n@boost//:libs/random/include/boost/random/hyperexponential_distribution.hpp\n@boost//:libs/random/include/boost/random/discard_block.hpp\n@boost//:libs/random/include/boost/random/mixmax.hpp\n...and 74 more items"
  "@boost//:random" -> "@platforms//os:windows"
  "@boost//:random" -> "@boost//:assert"
  "@boost//:random" -> "@boost//:config"
  "@boost//:random" -> "@boost//:detail"
  "@boost//:random" -> "@boost//:foreach"
  "@boost//:random" -> "@boost//:integer"
  "@boost//:random" -> "@boost//:lexical_cast"
  "@boost//:random" -> "@boost//:limits"
  "@boost//:random" -> "@boost//:math"
  "@boost//:random" -> "@boost//:mpl"
  "@boost//:random" -> "@boost//:noncopyable"
  "@boost//:random" -> "@boost//:operators"
  "@boost//:random" -> "@boost//:range"
  "@boost//:random" -> "@boost//:regex"
  "@boost//:random" -> "@boost//:shared_ptr"
  "@boost//:random" -> "@boost//:static_assert"
  "@boost//:random" -> "@boost//:system"
  "@boost//:random" -> "@boost//:throw_exception"
  "@boost//:random" -> "@boost//:timer"
  "@boost//:random" -> "@boost//:tuple"
  "@boost//:random" -> "@boost//:type_traits"
  "@boost//:random" -> "@boost//:utility"
  "@boost//:random" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:random" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:timer"
  "@boost//:timer" -> "@boost//:windows_x86_64"
  "@boost//:timer" -> "@boost//:libs/timer/include/boost/timer/config.hpp\n@boost//:libs/timer/src/cpu_timer.cpp\n@boost//:libs/timer/include/boost/timer.hpp\n@boost//:libs/timer/src/auto_timers_construction.cpp\n@boost//:libs/timer/include/boost/timer/timer.hpp\n@boost//:libs/timer/include/boost/progress.hpp\n@boost//:libs/timer/include/boost/timer/progress_display.hpp"
  "@boost//:timer" -> "@boost//:cerrno"
  "@boost//:timer" -> "@boost//:chrono"
  "@boost//:timer" -> "@boost//:config"
  "@boost//:timer" -> "@boost//:cstdint"
  "@boost//:timer" -> "@boost//:io"
  "@boost//:timer" -> "@boost//:limits"
  "@boost//:timer" -> "@boost//:predef"
  "@boost//:timer" -> "@boost//:system"
  "@boost//:timer" -> "@boost//:throw_exception"
  "@boost//:timer" -> "@platforms//os:windows"
  "@boost//:timer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:timer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/timer/include/boost/timer/config.hpp\n@boost//:libs/timer/src/cpu_timer.cpp\n@boost//:libs/timer/include/boost/timer.hpp\n@boost//:libs/timer/src/auto_timers_construction.cpp\n@boost//:libs/timer/include/boost/timer/timer.hpp\n@boost//:libs/timer/include/boost/progress.hpp\n@boost//:libs/timer/include/boost/timer/progress_display.hpp"
  "@boost//:lexical_cast"
  "@boost//:lexical_cast" -> "@boost//:windows_x86_64"
  "@boost//:lexical_cast" -> "@boost//:libs/lexical_cast/include/boost/lexical_cast/detail/inf_nan.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast/lexical_cast_old.hpp\n@boost//:libs/lexical_cast/include/boost/detail/lcast_precision.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast/detail/widest_char.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast/detail/is_character.hpp\n@boost//:libs/lexical_cast/include/boost/detail/basic_pointerbuf.hpp\n...and 6 more items"
  "@boost//:lexical_cast" -> "@boost//:libs/lexical_cast/include/boost/lexical_cast/bad_lexical_cast.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast.hpp"
  "@boost//:lexical_cast" -> "@boost//:array"
  "@boost//:lexical_cast" -> "@boost//:chrono"
  "@boost//:lexical_cast" -> "@boost//:config"
  "@boost//:lexical_cast" -> "@boost//:container"
  "@boost//:lexical_cast" -> "@platforms//os:windows"
  "@boost//:lexical_cast" -> "@boost//:detail"
  "@boost//:lexical_cast" -> "@boost//:integer"
  "@boost//:lexical_cast" -> "@boost//:limits"
  "@boost//:lexical_cast" -> "@boost//:math"
  "@boost//:lexical_cast" -> "@boost//:mpl"
  "@boost//:lexical_cast" -> "@boost//:noncopyable"
  "@boost//:lexical_cast" -> "@boost//:numeric_conversion"
  "@boost//:lexical_cast" -> "@boost//:range"
  "@boost//:lexical_cast" -> "@boost//:static_assert"
  "@boost//:lexical_cast" -> "@boost//:throw_exception"
  "@boost//:lexical_cast" -> "@boost//:type_traits"
  "@boost//:lexical_cast" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:lexical_cast" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:math"
  "@boost//:math" -> "@boost//:windows_x86_64"
  "@boost//:math" -> "@platforms//os:windows"
  "@boost//:math" -> "@boost//:libs/math/include/boost/math/interpolators/detail/quintic_hermite_detail.hpp\n@boost//:libs/math/include_private/boost/math/tools/solve.hpp\n@boost//:libs/math/include/boost/math/special_functions/polygamma.hpp\n@boost//:libs/math/include/boost/math/tools/detail/rational_horner1_15.hpp\n@boost//:libs/math/include/boost/math/quadrature/detail/sinh_sinh_detail.hpp\n@boost//:libs/math/include/boost/math/special_functions/ellint_rg.hpp\n...and 482 more items"
  "@boost//:math" -> "@boost//:array"
  "@boost//:math" -> "@boost//:assert"
  "@boost//:math" -> "@boost//:atomic"
  "@boost//:math" -> "@boost//:concept_check"
  "@boost//:math" -> "@boost//:config"
  "@boost//:math" -> "@boost//:core"
  "@boost//:math" -> "@boost//:cstdint"
  "@boost//:math" -> "@boost//:detail"
  "@boost//:math" -> "@boost//:fusion"
  "@boost//:math" -> "@boost//:integer"
  "@boost//:math" -> "@boost//:lambda"
  "@boost//:math" -> "@boost//:limits"
  "@boost//:math" -> "@boost//:mp11"
  "@boost//:math" -> "@boost//:mpl"
  "@boost//:math" -> "@boost//:predef"
  "@boost//:math" -> "@boost//:range"
  "@boost//:math" -> "@boost//:scoped_array"
  "@boost//:math" -> "@boost//:static_assert"
  "@boost//:math" -> "@boost//:throw_exception"
  "@boost//:math" -> "@boost//:tuple"
  "@boost//:math" -> "@boost//:type"
  "@boost//:math" -> "@boost//:type_traits"
  "@boost//:math" -> "@boost//:utility"
  "@boost//:math" -> "@boost//:version"
  "@boost//:math" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:math" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:lambda"
  "@boost//:lambda" -> "@boost//:windows_x86_64"
  "@boost//:lambda" -> "@platforms//os:windows"
  "@boost//:lambda" -> "@boost//:libs/lambda/include/boost/lambda/detail/lambda_functors.hpp\n@boost//:libs/lambda/include/boost/lambda/lambda.hpp\n@boost//:libs/lambda/include/boost/lambda/detail/select_functions.hpp\n@boost//:libs/lambda/include/boost/lambda/detail/operators.hpp\n@boost//:libs/lambda/include/boost/lambda/casts.hpp\n@boost//:libs/lambda/include/boost/lambda/if.hpp\n@boost//:libs/lambda/include/boost/lambda/detail/lambda_fwd.hpp\n...and 26 more items"
  "@boost//:lambda" -> "@boost//:is_placeholder"
  "@boost//:lambda" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:lambda" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/lambda/include/boost/lambda/detail/lambda_functors.hpp\n@boost//:libs/lambda/include/boost/lambda/lambda.hpp\n@boost//:libs/lambda/include/boost/lambda/detail/select_functions.hpp\n@boost//:libs/lambda/include/boost/lambda/detail/operators.hpp\n@boost//:libs/lambda/include/boost/lambda/casts.hpp\n@boost//:libs/lambda/include/boost/lambda/if.hpp\n@boost//:libs/lambda/include/boost/lambda/detail/lambda_fwd.hpp\n...and 26 more items"
  "@boost//:fusion"
  "@boost//:fusion" -> "@boost//:windows_x86_64"
  "@boost//:fusion" -> "@boost//:libs/fusion/include/boost/fusion/view/nview/detail/advance_impl.hpp\n@boost//:libs/fusion/include/boost/fusion/container/vector/vector_fwd.hpp\n@boost//:libs/fusion/include/boost/fusion/functional/adapter/unfused.hpp\n@boost//:libs/fusion/include/boost/fusion/include/io.hpp\n@boost//:libs/fusion/include/boost/fusion/container/map/detail/build_map.hpp\n@boost//:libs/fusion/include/boost/fusion/include/segmented_iterator.hpp\n...and 1015 more items"
  "@boost//:fusion" -> "@platforms//os:windows"
  "@boost//:fusion" -> "@boost//:call_traits"
  "@boost//:fusion" -> "@boost//:config"
  "@boost//:fusion" -> "@boost//:core"
  "@boost//:fusion" -> "@boost//:detail"
  "@boost//:fusion" -> "@boost//:function_types"
  "@boost//:fusion" -> "@boost//:functional"
  "@boost//:fusion" -> "@boost//:get_pointer"
  "@boost//:fusion" -> "@boost//:mpl"
  "@boost//:fusion" -> "@boost//:preprocessor"
  "@boost//:fusion" -> "@boost//:ref"
  "@boost//:fusion" -> "@boost//:static_assert"
  "@boost//:fusion" -> "@boost//:tuple"
  "@boost//:fusion" -> "@boost//:type_traits"
  "@boost//:fusion" -> "@boost//:typeof"
  "@boost//:fusion" -> "@boost//:utility"
  "@boost//:fusion" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:fusion" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:typeof"
  "@boost//:typeof" -> "@boost//:windows_x86_64"
  "@boost//:typeof" -> "@platforms//os:windows"
  "@boost//:typeof" -> "@boost//:libs/typeof/include/boost/typeof/dmc/typeof_impl.hpp\n@boost//:libs/typeof/include/boost/typeof/encode_decode.hpp\n@boost//:libs/typeof/include/boost/typeof/std/ostream.hpp\n@boost//:libs/typeof/include/boost/typeof/std/functional.hpp\n@boost//:libs/typeof/include/boost/typeof/typeof.hpp\n@boost//:libs/typeof/include/boost/typeof/std/vector.hpp\n@boost//:libs/typeof/include/boost/typeof/template_encoding.hpp\n@boost//:libs/typeof/include/boost/typeof/std/stack.hpp\n...and 44 more items"
  "@boost//:typeof" -> "@boost//:config"
  "@boost//:typeof" -> "@boost//:detail"
  "@boost//:typeof" -> "@boost//:mpl"
  "@boost//:typeof" -> "@boost//:preprocessor"
  "@boost//:typeof" -> "@boost//:type_traits"
  "@boost//:typeof" -> "@boost//:utility"
  "@boost//:typeof" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:typeof" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/typeof/include/boost/typeof/dmc/typeof_impl.hpp\n@boost//:libs/typeof/include/boost/typeof/encode_decode.hpp\n@boost//:libs/typeof/include/boost/typeof/std/ostream.hpp\n@boost//:libs/typeof/include/boost/typeof/std/functional.hpp\n@boost//:libs/typeof/include/boost/typeof/typeof.hpp\n@boost//:libs/typeof/include/boost/typeof/std/vector.hpp\n@boost//:libs/typeof/include/boost/typeof/template_encoding.hpp\n@boost//:libs/typeof/include/boost/typeof/std/stack.hpp\n...and 44 more items"
  "@boost//:function_types"
  "@boost//:function_types" -> "@boost//:windows_x86_64"
  "@boost//:function_types" -> "@boost//:libs/function_types/include/boost/function_types/components.hpp\n@boost//:libs/function_types/include/boost/function_types/detail/components_impl/arity20_0.hpp\n@boost//:libs/function_types/include/boost/function_types/detail/pp_tags/preprocessed.hpp\n@boost//:libs/function_types/include/boost/function_types/parameter_types.hpp\n@boost//:libs/function_types/include/boost/function_types/detail/components_impl/arity30_1.hpp\n...and 71 more items"
  "@boost//:function_types" -> "@platforms//os:windows"
  "@boost//:function_types" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:function_types" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/function_types/include/boost/function_types/components.hpp\n@boost//:libs/function_types/include/boost/function_types/detail/components_impl/arity20_0.hpp\n@boost//:libs/function_types/include/boost/function_types/detail/pp_tags/preprocessed.hpp\n@boost//:libs/function_types/include/boost/function_types/parameter_types.hpp\n@boost//:libs/function_types/include/boost/function_types/detail/components_impl/arity30_1.hpp\n...and 71 more items"
  "@boost//:libs/fusion/include/boost/fusion/view/nview/detail/advance_impl.hpp\n@boost//:libs/fusion/include/boost/fusion/container/vector/vector_fwd.hpp\n@boost//:libs/fusion/include/boost/fusion/functional/adapter/unfused.hpp\n@boost//:libs/fusion/include/boost/fusion/include/io.hpp\n@boost//:libs/fusion/include/boost/fusion/container/map/detail/build_map.hpp\n@boost//:libs/fusion/include/boost/fusion/include/segmented_iterator.hpp\n...and 1015 more items"
  "@boost//:atomic"
  "@boost//:atomic" -> "@boost//:windows_x86_64"
  "@boost//:atomic" -> "@boost//:libs/atomic/include/boost/atomic/detail/core_arch_ops_gcc_arm.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/extending_cas_based_arithmetic.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/core_arch_operations_fwd.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/ops_gcc_arm_common.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/caps_arch_gcc_ppc.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/core_arch_ops_msvc_x86.hpp\n...and 118 more items"
  "@boost//:atomic" -> "@boost//:libs/atomic/include/boost/atomic/atomic_ref.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/type_traits/is_trivially_default_constructible.hpp\n@boost//:libs/atomic/include/boost/atomic/ipc_atomic.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/type_traits/is_floating_point.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/type_traits/alignment_of.hpp\n@boost//:libs/atomic/src/lock_pool_init1.ipp\n@boost//:libs/atomic/include/boost/atomic.hpp\n...and 23 more items"
  [label="@@boost//:windows_x86_64"];
  "@boost//:atomic" -> "@platforms//os:windows"
  "@boost//:atomic" -> "@platforms//cpu:x86_64"
  "@boost//:atomic" -> "@boost//:align"
  "@boost//:atomic" -> "@boost//:assert"
  "@boost//:atomic" -> "@boost//:config"
  "@boost//:atomic" -> "@boost//:cstdint"
  "@boost//:atomic" -> "@boost//:predef"
  "@boost//:atomic" -> "@boost//:type_traits"
  "@boost//:atomic" -> "@boost//:winapi"
  "@boost//:atomic" -> "@boost//:static_assert"
  "@boost//:atomic" -> "@boost//:preprocessor"
  "@boost//:atomic" -> "@boost//:atomic_sse"
  [label="@@platforms//cpu:x86_64"];
  "@boost//:atomic" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:atomic" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:atomic_sse"
  "@boost//:atomic_sse" -> "@boost//:windows_x86_64"
  "@boost//:atomic_sse" -> "@boost//:libs/atomic/src/find_address_sse41.cpp\n@boost//:libs/atomic/src/find_address_sse2.cpp"
  "@boost//:atomic_sse" -> "@boost//:libs/atomic/include/boost/atomic/detail/core_arch_ops_gcc_arm.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/extending_cas_based_arithmetic.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/core_arch_operations_fwd.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/ops_gcc_arm_common.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/caps_arch_gcc_ppc.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/core_arch_ops_msvc_x86.hpp\n...and 118 more items"
  "@boost//:atomic_sse" -> "@platforms//os:windows"
  "@boost//:atomic_sse" -> "@boost//:align"
  "@boost//:atomic_sse" -> "@boost//:assert"
  "@boost//:atomic_sse" -> "@boost//:config"
  "@boost//:atomic_sse" -> "@boost//:cstdint"
  "@boost//:atomic_sse" -> "@boost//:predef"
  "@boost//:atomic_sse" -> "@boost//:type_traits"
  "@boost//:atomic_sse" -> "@boost//:winapi"
  "@boost//:atomic_sse" -> "@boost//:static_assert"
  "@boost//:atomic_sse" -> "@boost//:preprocessor"
  "@boost//:atomic_sse" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:atomic_sse" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/atomic/src/find_address_sse41.cpp\n@boost//:libs/atomic/src/find_address_sse2.cpp"
  "@boost//:libs/atomic/include/boost/atomic/atomic_ref.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/type_traits/is_trivially_default_constructible.hpp\n@boost//:libs/atomic/include/boost/atomic/ipc_atomic.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/type_traits/is_floating_point.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/type_traits/alignment_of.hpp\n@boost//:libs/atomic/src/lock_pool_init1.ipp\n@boost//:libs/atomic/include/boost/atomic.hpp\n...and 23 more items"
  "@boost//:libs/atomic/include/boost/atomic/detail/core_arch_ops_gcc_arm.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/extending_cas_based_arithmetic.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/core_arch_operations_fwd.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/ops_gcc_arm_common.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/caps_arch_gcc_ppc.hpp\n@boost//:libs/atomic/include/boost/atomic/detail/core_arch_ops_msvc_x86.hpp\n...and 118 more items"
  "@boost//:libs/math/include/boost/math/interpolators/detail/quintic_hermite_detail.hpp\n@boost//:libs/math/include_private/boost/math/tools/solve.hpp\n@boost//:libs/math/include/boost/math/special_functions/polygamma.hpp\n@boost//:libs/math/include/boost/math/tools/detail/rational_horner1_15.hpp\n@boost//:libs/math/include/boost/math/quadrature/detail/sinh_sinh_detail.hpp\n@boost//:libs/math/include/boost/math/special_functions/ellint_rg.hpp\n...and 482 more items"
  "@boost//:container"
  "@boost//:container" -> "@boost//:windows_x86_64"
  "@boost//:container" -> "@boost//:libs/container/include/boost/container/pmr/stable_vector.hpp\n@boost//:libs/container/src/dlmalloc.cpp\n@boost//:libs/container/include/boost/container/detail/pool_common.hpp\n@boost//:libs/container/include/boost/container/detail/config_begin.hpp\n@boost//:libs/container/include/boost/container/scoped_allocator.hpp\n@boost//:libs/container/include/boost/container/new_allocator.hpp\n@boost//:libs/container/include/boost/container/detail/config_end.hpp\n...and 107 more items"
  "@boost//:container" -> "@platforms//os:windows"
  "@boost//:container" -> "@boost//:config"
  "@boost//:container" -> "@boost//:core"
  "@boost//:container" -> "@boost//:intrusive"
  "@boost//:container" -> "@boost//:move"
  "@boost//:container" -> "@boost//:static_assert"
  "@boost//:container" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:container" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:intrusive"
  "@boost//:intrusive" -> "@boost//:windows_x86_64"
  "@boost//:intrusive" -> "@boost//:libs/intrusive/include/boost/intrusive/detail/slist_node.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/tree_node.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/algorithm.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/config_begin.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/node_holder.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/common_slist_algorithms.hpp\n...and 89 more items"
  "@boost//:intrusive" -> "@platforms//os:windows"
  "@boost//:intrusive" -> "@boost//:assert"
  "@boost//:intrusive" -> "@boost//:cstdint"
  "@boost//:intrusive" -> "@boost//:noncopyable"
  "@boost//:intrusive" -> "@boost//:static_assert"
  "@boost//:intrusive" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:intrusive" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/intrusive/include/boost/intrusive/detail/slist_node.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/tree_node.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/algorithm.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/config_begin.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/node_holder.hpp\n@boost//:libs/intrusive/include/boost/intrusive/detail/common_slist_algorithms.hpp\n...and 89 more items"
  "@boost//:libs/container/include/boost/container/pmr/stable_vector.hpp\n@boost//:libs/container/src/dlmalloc.cpp\n@boost//:libs/container/include/boost/container/detail/pool_common.hpp\n@boost//:libs/container/include/boost/container/detail/config_begin.hpp\n@boost//:libs/container/include/boost/container/scoped_allocator.hpp\n@boost//:libs/container/include/boost/container/new_allocator.hpp\n@boost//:libs/container/include/boost/container/detail/config_end.hpp\n...and 107 more items"
  "@boost//:chrono"
  "@boost//:chrono" -> "@boost//:windows_x86_64"
  "@boost//:chrono" -> "@boost//:libs/chrono/include/boost/chrono/thread_clock.hpp\n@boost//:libs/chrono/include/boost/chrono/ceil.hpp\n@boost//:libs/chrono/include/boost/chrono/io/utility/manip_base.hpp\n@boost//:libs/chrono/src/thread_clock.cpp\n@boost//:libs/chrono/include/boost/chrono/io/duration_style.hpp\n@boost//:libs/chrono/include/boost/chrono/include.hpp\n@boost//:libs/chrono/include/boost/chrono/detail/inlined/posix/chrono.hpp\n...and 45 more items"
  "@boost//:chrono" -> "@platforms//os:windows"
  "@boost//:chrono" -> "@boost//:assert"
  "@boost//:chrono" -> "@boost//:config"
  "@boost//:chrono" -> "@boost//:cstdint"
  "@boost//:chrono" -> "@boost//:detail"
  "@boost//:chrono" -> "@boost//:integer"
  "@boost//:chrono" -> "@boost//:mpl"
  "@boost//:chrono" -> "@boost//:operators"
  "@boost//:chrono" -> "@boost//:predef"
  "@boost//:chrono" -> "@boost//:ratio"
  "@boost//:chrono" -> "@boost//:system"
  "@boost//:chrono" -> "@boost//:throw_exception"
  "@boost//:chrono" -> "@boost//:type_traits"
  "@boost//:chrono" -> "@boost//:utility"
  "@boost//:chrono" -> "@boost//:version"
  "@boost//:chrono" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:chrono" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:system"
  "@boost//:system" -> "@boost//:windows_x86_64"
  "@boost//:system" -> "@platforms//os:windows"
  "@boost//:system" -> "@boost//:libs/system/include/boost/system/is_error_code_enum.hpp\n@boost//:libs/system/include/boost/system/windows_error.hpp\n@boost//:libs/system/include/boost/system/api_config.hpp\n@boost//:libs/system/include/boost/system/error_condition.hpp\n@boost//:libs/system/include/boost/system/detail/is_same.hpp\n@boost//:libs/system/include/boost/system/detail/throws.hpp\n@boost//:libs/system/include/boost/system/error_code.hpp\n...and 35 more items"
  "@boost//:system" -> "@boost//:assert"
  "@boost//:system" -> "@boost//:cerrno"
  "@boost//:system" -> "@boost//:config"
  "@boost//:system" -> "@boost//:core"
  "@boost//:system" -> "@boost//:cstdint"
  "@boost//:system" -> "@boost//:noncopyable"
  "@boost//:system" -> "@boost//:predef"
  "@boost//:system" -> "@boost//:utility"
  "@boost//:system" -> "@boost//:variant2"
  "@boost//:system" -> "@boost//:winapi"
  "@boost//:system" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:system" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:variant2"
  "@boost//:variant2" -> "@boost//:windows_x86_64"
  "@boost//:variant2" -> "@boost//:libs/variant2/include/boost/variant2/variant.hpp\n@boost//:libs/variant2/include/boost/variant2.hpp"
  "@boost//:variant2" -> "@platforms//os:windows"
  "@boost//:variant2" -> "@boost//:assert"
  "@boost//:variant2" -> "@boost//:cstdint"
  "@boost//:variant2" -> "@boost//:mp11"
  "@boost//:variant2" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:variant2" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/variant2/include/boost/variant2/variant.hpp\n@boost//:libs/variant2/include/boost/variant2.hpp"
  "@boost//:cerrno"
  "@boost//:cerrno" -> "@boost//:windows_x86_64"
  "@boost//:cerrno" -> "@platforms//os:windows"
  "@boost//:cerrno" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:cerrno" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/system/include/boost/system/is_error_code_enum.hpp\n@boost//:libs/system/include/boost/system/windows_error.hpp\n@boost//:libs/system/include/boost/system/api_config.hpp\n@boost//:libs/system/include/boost/system/error_condition.hpp\n@boost//:libs/system/include/boost/system/detail/is_same.hpp\n@boost//:libs/system/include/boost/system/detail/throws.hpp\n@boost//:libs/system/include/boost/system/error_code.hpp\n...and 35 more items"
  "@boost//:ratio"
  "@boost//:ratio" -> "@boost//:windows_x86_64"
  "@boost//:ratio" -> "@boost//:libs/ratio/include/boost/ratio/mpl/sign.hpp\n@boost//:libs/ratio/include/boost/ratio/ratio_io.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/not_equal_to.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/less_equal.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/greater.hpp\n@boost//:libs/ratio/include/boost/ratio/detail/mpl/sign.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/plus.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/minus.hpp\n...and 25 more items"
  "@boost//:ratio" -> "@platforms//os:windows"
  "@boost//:ratio" -> "@boost//:integer"
  "@boost//:ratio" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:ratio" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/ratio/include/boost/ratio/mpl/sign.hpp\n@boost//:libs/ratio/include/boost/ratio/ratio_io.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/not_equal_to.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/less_equal.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/greater.hpp\n@boost//:libs/ratio/include/boost/ratio/detail/mpl/sign.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/plus.hpp\n@boost//:libs/ratio/include/boost/ratio/mpl/minus.hpp\n...and 25 more items"
  "@boost//:operators"
  "@boost//:operators" -> "@boost//:windows_x86_64"
  "@boost//:operators" -> "@boost//:config"
  "@boost//:operators" -> "@boost//:core"
  "@boost//:operators" -> "@boost//:detail"
  "@boost//:operators" -> "@platforms//os:windows"
  "@boost//:operators" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:operators" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/chrono/include/boost/chrono/thread_clock.hpp\n@boost//:libs/chrono/include/boost/chrono/ceil.hpp\n@boost//:libs/chrono/include/boost/chrono/io/utility/manip_base.hpp\n@boost//:libs/chrono/src/thread_clock.cpp\n@boost//:libs/chrono/include/boost/chrono/io/duration_style.hpp\n@boost//:libs/chrono/include/boost/chrono/include.hpp\n@boost//:libs/chrono/include/boost/chrono/detail/inlined/posix/chrono.hpp\n...and 45 more items"
  "@boost//:libs/lexical_cast/include/boost/lexical_cast/bad_lexical_cast.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast.hpp"
  "@boost//:libs/lexical_cast/include/boost/lexical_cast/detail/inf_nan.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast/lexical_cast_old.hpp\n@boost//:libs/lexical_cast/include/boost/detail/lcast_precision.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast/detail/widest_char.hpp\n@boost//:libs/lexical_cast/include/boost/lexical_cast/detail/is_character.hpp\n@boost//:libs/lexical_cast/include/boost/detail/basic_pointerbuf.hpp\n...and 6 more items"
  "@boost//:libs/random/include/boost/random/fisher_f_distribution.hpp\n@boost//:libs/random/include/boost/random/uniform_real_distribution.hpp\n@boost//:libs/random/include/boost/random/chi_squared_distribution.hpp\n@boost//:libs/random/include/boost/random/detail/uniform_int_float.hpp\n@boost//:libs/random/include/boost/random/hyperexponential_distribution.hpp\n@boost//:libs/random/include/boost/random/discard_block.hpp\n@boost//:libs/random/include/boost/random/mixmax.hpp\n...and 74 more items"
  "@boost//:numeric_conversion"
  "@boost//:numeric_conversion" -> "@boost//:windows_x86_64"
  "@boost//:numeric_conversion" -> "@boost//:libs/numeric/conversion/include/boost/cast.hpp"
  "@boost//:numeric_conversion" -> "@boost//:libs/numeric/conversion/include/boost/numeric/conversion/numeric_cast_traits.hpp\n@boost//:libs/numeric/conversion/include/boost/numeric/conversion/int_float_mixture.hpp\n@boost//:libs/numeric/conversion/include/boost/numeric/conversion/int_float_mixture_enum.hpp\n@boost//:libs/numeric/conversion/include/boost/numeric/conversion/detail/conversion_traits.hpp\n...and 21 more items"
  "@boost//:numeric_conversion" -> "@boost//:config"
  "@boost//:numeric_conversion" -> "@boost//:detail"
  "@boost//:numeric_conversion" -> "@boost//:integer"
  "@boost//:numeric_conversion" -> "@boost//:limits"
  "@boost//:numeric_conversion" -> "@boost//:mpl"
  "@boost//:numeric_conversion" -> "@boost//:throw_exception"
  "@boost//:numeric_conversion" -> "@boost//:type"
  "@boost//:numeric_conversion" -> "@boost//:type_traits"
  "@boost//:numeric_conversion" -> "@platforms//os:windows"
  "@boost//:numeric_conversion" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:numeric_conversion" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/numeric/conversion/include/boost/numeric/conversion/numeric_cast_traits.hpp\n@boost//:libs/numeric/conversion/include/boost/numeric/conversion/int_float_mixture.hpp\n@boost//:libs/numeric/conversion/include/boost/numeric/conversion/int_float_mixture_enum.hpp\n@boost//:libs/numeric/conversion/include/boost/numeric/conversion/detail/conversion_traits.hpp\n...and 21 more items"
  "@boost//:libs/numeric/conversion/include/boost/cast.hpp"
  "@boost//:call_traits"
  "@boost//:call_traits" -> "@boost//:windows_x86_64"
  "@boost//:call_traits" -> "@platforms//os:windows"
  "@boost//:call_traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:call_traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/iostreams/src/mapped_file.cpp\n@boost//:libs/iostreams/src/bzip2.cpp\n@boost//:libs/iostreams/include/boost/iostreams/detail/path.hpp\n@boost//:libs/iostreams/include/boost/iostreams/read.hpp\n@boost//:libs/iostreams/include/boost/iostreams/detail/template_params.hpp\n@boost//:libs/iostreams/include/boost/iostreams/stream.hpp\n@boost//:libs/iostreams/include/boost/iostreams/flush.hpp\n@boost//:libs/iostreams/include/boost/iostreams/slice.hpp\n...and 126 more items"
  "@boost//:function"
  "@boost//:function" -> "@boost//:windows_x86_64"
  "@boost//:function" -> "@boost//:libs/function/include/boost/function/function6.hpp\n@boost//:libs/function/include/boost/function/function4.hpp\n@boost//:libs/function/include/boost/function/function2.hpp\n@boost//:libs/function/include/boost/function/detail/gen_maybe_include.pl\n@boost//:libs/function/include/boost/function/detail/maybe_include.hpp\n@boost//:libs/function/include/boost/function_equal.hpp\n@boost//:libs/function/include/boost/function/function5.hpp\n...and 17 more items"
  "@boost//:function" -> "@boost//:bind"
  "@boost//:function" -> "@platforms//os:windows"
  "@boost//:function" -> "@boost//:integer"
  "@boost//:function" -> "@boost//:type_index"
  "@boost//:function" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:function" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:type_index"
  "@boost//:type_index" -> "@boost//:windows_x86_64"
  "@boost//:type_index" -> "@platforms//os:windows"
  "@boost//:type_index" -> "@boost//:libs/type_index/include/boost/type_index/detail/compile_time_type_info.hpp\n@boost//:libs/type_index/include/boost/type_index/runtime_cast/boost_shared_ptr_cast.hpp\n@boost//:libs/type_index/include/boost/type_index/stl_type_index.hpp\n@boost//:libs/type_index/include/boost/type_index/ctti_type_index.hpp\n@boost//:libs/type_index/include/boost/type_index/runtime_cast.hpp\n@boost//:libs/type_index/include/boost/type_index.hpp\n...and 8 more items"
  "@boost//:type_index" -> "@boost//:container_hash"
  "@boost//:type_index" -> "@boost//:core"
  "@boost//:type_index" -> "@boost//:functional"
  "@boost//:type_index" -> "@boost//:throw_exception"
  "@boost//:type_index" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:type_index" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/type_index/include/boost/type_index/detail/compile_time_type_info.hpp\n@boost//:libs/type_index/include/boost/type_index/runtime_cast/boost_shared_ptr_cast.hpp\n@boost//:libs/type_index/include/boost/type_index/stl_type_index.hpp\n@boost//:libs/type_index/include/boost/type_index/ctti_type_index.hpp\n@boost//:libs/type_index/include/boost/type_index/runtime_cast.hpp\n@boost//:libs/type_index/include/boost/type_index.hpp\n...and 8 more items"
  "@boost//:bind"
  "@boost//:bind" -> "@boost//:windows_x86_64"
  "@boost//:bind" -> "@boost//:libs/bind/include/boost/bind/bind_cc.hpp\n@boost//:libs/bind/include/boost/bind/detail/requires_cxx11.hpp\n@boost//:libs/bind/include/boost/bind/detail/result_traits.hpp\n@boost//:libs/bind/include/boost/bind/storage.hpp\n@boost//:libs/bind/include/boost/bind/bind_template.hpp\n@boost//:libs/bind/include/boost/bind/apply.hpp\n@boost//:libs/bind/include/boost/mem_fn.hpp\n@boost//:libs/bind/include/boost/bind/make_adaptable.hpp\n...and 14 more items"
  "@boost//:bind" -> "@boost//:get_pointer"
  "@boost//:bind" -> "@boost//:is_placeholder"
  "@boost//:bind" -> "@boost//:mem_fn\n@boost//:visit_each"
  "@boost//:bind" -> "@boost//:ref"
  "@boost//:bind" -> "@platforms//os:windows"
  "@boost//:bind" -> "@boost//:type"
  "@boost//:bind" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:bind" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:mem_fn\n@boost//:visit_each"
  "@boost//:mem_fn\n@boost//:visit_each" -> "@boost//:windows_x86_64"
  "@boost//:mem_fn\n@boost//:visit_each" -> "@platforms//os:windows"
  "@boost//:mem_fn\n@boost//:visit_each" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:mem_fn\n@boost//:visit_each" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:is_placeholder"
  "@boost//:is_placeholder" -> "@boost//:windows_x86_64"
  "@boost//:is_placeholder" -> "@platforms//os:windows"
  "@boost//:is_placeholder" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:is_placeholder" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:get_pointer"
  "@boost//:get_pointer" -> "@boost//:windows_x86_64"
  "@boost//:get_pointer" -> "@platforms//os:windows"
  "@boost//:get_pointer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:get_pointer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/bind/include/boost/bind/bind_cc.hpp\n@boost//:libs/bind/include/boost/bind/detail/requires_cxx11.hpp\n@boost//:libs/bind/include/boost/bind/detail/result_traits.hpp\n@boost//:libs/bind/include/boost/bind/storage.hpp\n@boost//:libs/bind/include/boost/bind/bind_template.hpp\n@boost//:libs/bind/include/boost/bind/apply.hpp\n@boost//:libs/bind/include/boost/mem_fn.hpp\n@boost//:libs/bind/include/boost/bind/make_adaptable.hpp\n...and 14 more items"
  "@boost//:libs/function/include/boost/function/function6.hpp\n@boost//:libs/function/include/boost/function/function4.hpp\n@boost//:libs/function/include/boost/function/function2.hpp\n@boost//:libs/function/include/boost/function/detail/gen_maybe_include.pl\n@boost//:libs/function/include/boost/function/detail/maybe_include.hpp\n@boost//:libs/function/include/boost/function_equal.hpp\n@boost//:libs/function/include/boost/function/function5.hpp\n...and 17 more items"
  "@boost//:foreach"
  "@boost//:foreach" -> "@boost//:windows_x86_64"
  "@boost//:foreach" -> "@boost//:libs/foreach/include/boost/foreach_fwd.hpp\n@boost//:libs/foreach/include/boost/foreach.hpp"
  "@boost//:foreach" -> "@platforms//os:windows"
  "@boost//:foreach" -> "@boost//:config"
  "@boost//:foreach" -> "@boost//:detail"
  "@boost//:foreach" -> "@boost//:iterator"
  "@boost//:foreach" -> "@boost//:mpl"
  "@boost//:foreach" -> "@boost//:noncopyable"
  "@boost//:foreach" -> "@boost//:range"
  "@boost//:foreach" -> "@boost//:type_traits"
  "@boost//:foreach" -> "@boost//:utility"
  "@boost//:foreach" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:foreach" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:range"
  "@boost//:range" -> "@boost//:windows_x86_64"
  "@boost//:range" -> "@platforms//os:windows"
  "@boost//:range" -> "@boost//:libs/range/include/boost/range/any_range.hpp\n@boost//:libs/range/include/boost/range/detail/combine_cxx11.hpp\n@boost//:libs/range/include/boost/range/algorithm/heap_algorithm.hpp\n@boost//:libs/range/include/boost/range/detail/empty.hpp\n@boost//:libs/range/include/boost/range/algorithm/copy.hpp\n@boost//:libs/range/include/boost/range/algorithm/count.hpp\n@boost//:libs/range/include/boost/range/algorithm/upper_bound.hpp\n...and 150 more items"
  "@boost//:range" -> "@boost//:array"
  "@boost//:range" -> "@boost//:assert"
  "@boost//:range" -> "@boost//:concept_check"
  "@boost//:range" -> "@boost//:config"
  "@boost//:range" -> "@boost//:detail"
  "@boost//:range" -> "@boost//:functional"
  "@boost//:range" -> "@boost//:integer"
  "@boost//:range" -> "@boost//:iterator"
  "@boost//:range" -> "@boost//:mpl"
  "@boost//:range" -> "@boost//:noncopyable"
  "@boost//:range" -> "@boost//:optional"
  "@boost//:range" -> "@boost//:preprocessor"
  "@boost//:range" -> "@boost//:ref"
  "@boost//:range" -> "@boost//:regex"
  "@boost//:range" -> "@boost//:static_assert"
  "@boost//:range" -> "@boost//:tuple"
  "@boost//:range" -> "@boost//:type_traits"
  "@boost//:range" -> "@boost//:utility"
  "@boost//:range" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:range" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:regex"
  "@boost//:regex" -> "@boost//:windows_x86_64"
  "@boost//:regex" -> "@boost//:libs/regex/include/boost/regex/v4/regex_raw_buffer.hpp\n@boost//:libs/regex/include/boost/regex/v5/states.hpp\n@boost//:libs/regex/include/boost/regex/v5/basic_regex_creator.hpp\n@boost//:libs/regex/include/boost/regex/v4/regex_split.hpp\n@boost//:libs/regex/include/boost/regex/v4/regex.hpp\n@boost//:libs/regex/include/boost/regex/v5/cregex.hpp\n@boost//:libs/regex/include/boost/regex/v5/object_cache.hpp\n@boost//:libs/regex/include/boost/regex/v5/regbase.hpp\n...and 103 more items"
  "@boost//:regex" -> "@platforms//os:windows"
  "@boost//:regex" -> "@boost//:assert"
  "@boost//:regex" -> "@boost//:config"
  "@boost//:regex" -> "@boost//:core"
  "@boost//:regex" -> "@boost//:cstdint"
  "@boost//:regex" -> "@boost//:detail"
  "@boost//:regex" -> "@boost//:exception"
  "@boost//:regex" -> "@boost//:functional"
  "@boost//:regex" -> "@boost//:integer"
  "@boost//:regex" -> "@boost//:limits"
  "@boost//:regex" -> "@boost//:mpl"
  "@boost//:regex" -> "@boost//:predef"
  "@boost//:regex" -> "@boost//:ref"
  "@boost//:regex" -> "@boost//:smart_ptr"
  "@boost//:regex" -> "@boost//:throw_exception"
  "@boost//:regex" -> "@boost//:type_traits"
  "@boost//:regex" -> "@boost//:version"
  "@boost//:regex" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:regex" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:exception"
  "@boost//:exception" -> "@boost//:windows_x86_64"
  "@boost//:exception" -> "@boost//:libs/exception/include/boost/exception/errinfo_file_name.hpp\n@boost//:libs/exception/include/boost/exception/errinfo_type_info_name.hpp\n@boost//:libs/exception/include/boost/exception/detail/clone_current_exception.hpp\n@boost//:libs/exception/include/boost/exception/detail/error_info_impl.hpp\n@boost//:libs/exception/include/boost/exception/diagnostic_information.hpp\n@boost//:libs/exception/include/boost/exception/enable_current_exception.hpp\n...and 22 more items"
  "@boost//:exception" -> "@platforms//os:windows"
  "@boost//:exception" -> "@boost//:assert"
  "@boost//:exception" -> "@boost//:config"
  "@boost//:exception" -> "@boost//:current_function"
  "@boost//:exception" -> "@boost//:detail"
  "@boost//:exception" -> "@boost//:smart_ptr"
  "@boost//:exception" -> "@boost//:tuple"
  "@boost//:exception" -> "@boost//:type_traits"
  "@boost//:exception" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:exception" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:tuple"
  "@boost//:tuple" -> "@boost//:windows_x86_64"
  "@boost//:tuple" -> "@boost//:libs/tuple/include/boost/tuple/tuple_io.hpp\n@boost//:libs/tuple/include/boost/tuple/tuple_comparison.hpp\n@boost//:libs/tuple/include/boost/tuple/tuple.hpp\n@boost//:libs/tuple/include/boost/tuple/detail/tuple_basic.hpp"
  "@boost//:tuple" -> "@platforms//os:windows"
  "@boost//:tuple" -> "@boost//:ref"
  "@boost//:tuple" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:tuple" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/tuple/include/boost/tuple/tuple_io.hpp\n@boost//:libs/tuple/include/boost/tuple/tuple_comparison.hpp\n@boost//:libs/tuple/include/boost/tuple/tuple.hpp\n@boost//:libs/tuple/include/boost/tuple/detail/tuple_basic.hpp"
  "@boost//:libs/exception/include/boost/exception/errinfo_file_name.hpp\n@boost//:libs/exception/include/boost/exception/errinfo_type_info_name.hpp\n@boost//:libs/exception/include/boost/exception/detail/clone_current_exception.hpp\n@boost//:libs/exception/include/boost/exception/detail/error_info_impl.hpp\n@boost//:libs/exception/include/boost/exception/diagnostic_information.hpp\n@boost//:libs/exception/include/boost/exception/enable_current_exception.hpp\n...and 22 more items"
  "@boost//:libs/regex/include/boost/regex/v4/regex_raw_buffer.hpp\n@boost//:libs/regex/include/boost/regex/v5/states.hpp\n@boost//:libs/regex/include/boost/regex/v5/basic_regex_creator.hpp\n@boost//:libs/regex/include/boost/regex/v4/regex_split.hpp\n@boost//:libs/regex/include/boost/regex/v4/regex.hpp\n@boost//:libs/regex/include/boost/regex/v5/cregex.hpp\n@boost//:libs/regex/include/boost/regex/v5/object_cache.hpp\n@boost//:libs/regex/include/boost/regex/v5/regbase.hpp\n...and 103 more items"
  "@boost//:ref"
  "@boost//:ref" -> "@boost//:windows_x86_64"
  "@boost//:ref" -> "@boost//:config"
  "@boost//:ref" -> "@boost//:core"
  "@boost//:ref" -> "@boost//:detail"
  "@boost//:ref" -> "@boost//:utility"
  "@boost//:ref" -> "@platforms//os:windows"
  "@boost//:ref" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:ref" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:optional"
  "@boost//:optional" -> "@boost//:windows_x86_64"
  "@boost//:optional" -> "@boost//:libs/optional/include/boost/optional/detail/optional_swap.hpp\n@boost//:libs/optional/include/boost/optional/detail/optional_config.hpp\n@boost//:libs/optional/include/boost/optional/optional.hpp\n@boost//:libs/optional/include/boost/none.hpp\n@boost//:libs/optional/include/boost/optional/detail/optional_factory_support.hpp\n@boost//:libs/optional/include/boost/optional/optional_io.hpp\n@boost//:libs/optional/include/boost/optional/bad_optional_access.hpp\n...and 9 more items"
  "@boost//:optional" -> "@boost//:libs/optional/include/boost/none_t.hpp"
  "@boost//:optional" -> "@platforms//os:windows"
  "@boost//:optional" -> "@boost//:assert"
  "@boost//:optional" -> "@boost//:config"
  "@boost//:optional" -> "@boost//:detail"
  "@boost//:optional" -> "@boost//:none"
  "@boost//:optional" -> "@boost//:static_assert"
  "@boost//:optional" -> "@boost//:throw_exception"
  "@boost//:optional" -> "@boost//:type"
  "@boost//:optional" -> "@boost//:type_traits"
  "@boost//:optional" -> "@boost//:utility"
  "@boost//:optional" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:optional" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:type"
  "@boost//:type" -> "@boost//:windows_x86_64"
  "@boost//:type" -> "@platforms//os:windows"
  "@boost//:type" -> "@boost//:core"
  "@boost//:type" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:type" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:none"
  "@boost//:none" -> "@boost//:windows_x86_64"
  "@boost//:none" -> "@boost//:libs/optional/include/boost/none_t.hpp"
  "@boost//:none" -> "@platforms//os:windows"
  "@boost//:none" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:none" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/optional/include/boost/none_t.hpp"
  "@boost//:libs/optional/include/boost/optional/detail/optional_swap.hpp\n@boost//:libs/optional/include/boost/optional/detail/optional_config.hpp\n@boost//:libs/optional/include/boost/optional/optional.hpp\n@boost//:libs/optional/include/boost/none.hpp\n@boost//:libs/optional/include/boost/optional/detail/optional_factory_support.hpp\n@boost//:libs/optional/include/boost/optional/optional_io.hpp\n@boost//:libs/optional/include/boost/optional/bad_optional_access.hpp\n...and 9 more items"
  "@boost//:array"
  "@boost//:array" -> "@boost//:windows_x86_64"
  "@boost//:array" -> "@boost//:libs/array/include/boost/array.hpp"
  "@boost//:array" -> "@boost//:assert"
  "@boost//:array" -> "@boost//:concept_check"
  "@boost//:array" -> "@platforms//os:windows"
  "@boost//:array" -> "@boost//:config"
  "@boost//:array" -> "@boost//:core"
  "@boost//:array" -> "@boost//:functional"
  "@boost//:array" -> "@boost//:swap"
  "@boost//:array" -> "@boost//:throw_exception"
  "@boost//:array" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:array" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:functional"
  "@boost//:functional" -> "@boost//:windows_x86_64"
  "@boost//:functional" -> "@boost//:libs/functional/include/boost/functional/overloaded_function/detail/function_type.hpp\n@boost//:libs/functional/include/boost/functional/lightweight_forward_adapter.hpp\n@boost//:libs/functional/include/boost/functional/factory.hpp\n@boost//:libs/functional/include/boost/functional.hpp\n@boost//:libs/functional/include/boost/functional/overloaded_function.hpp\n@boost//:libs/functional/include/boost/functional/overloaded_function/detail/base.hpp\n...and 4 more items"
  "@boost//:functional" -> "@boost//:container_hash"
  "@boost//:functional" -> "@boost//:detail"
  "@boost//:functional" -> "@boost//:integer"
  "@boost//:functional" -> "@platforms//os:windows"
  "@boost//:functional" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:functional" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/functional/include/boost/functional/overloaded_function/detail/function_type.hpp\n@boost//:libs/functional/include/boost/functional/lightweight_forward_adapter.hpp\n@boost//:libs/functional/include/boost/functional/factory.hpp\n@boost//:libs/functional/include/boost/functional.hpp\n@boost//:libs/functional/include/boost/functional/overloaded_function.hpp\n@boost//:libs/functional/include/boost/functional/overloaded_function/detail/base.hpp\n...and 4 more items"
  "@boost//:concept_check"
  "@boost//:concept_check" -> "@boost//:windows_x86_64"
  "@boost//:concept_check" -> "@boost//:libs/concept_check/include/boost/concept/detail/concept_undef.hpp\n@boost//:libs/concept_check/include/boost/concept/detail/concept_def.hpp\n@boost//:libs/concept_check/include/boost/concept/usage.hpp\n@boost//:libs/concept_check/include/boost/concept_archetype.hpp\n@boost//:libs/concept_check/include/boost/concept/detail/borland.hpp\n@boost//:libs/concept_check/include/boost/concept_check/general.hpp\n@boost//:libs/concept_check/include/boost/concept_check/msvc.hpp\n...and 9 more items"
  "@boost//:concept_check" -> "@platforms//os:windows"
  "@boost//:concept_check" -> "@boost//:concept"
  "@boost//:concept_check" -> "@boost//:concept_archetype"
  "@boost//:concept_check" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:concept_check" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:concept_archetype"
  "@boost//:concept_archetype" -> "@boost//:windows_x86_64"
  "@boost//:concept_archetype" -> "@boost//:config"
  "@boost//:concept_archetype" -> "@boost//:iterator"
  "@boost//:concept_archetype" -> "@boost//:mpl"
  "@boost//:concept_archetype" -> "@platforms//os:windows"
  "@boost//:concept_archetype" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:concept_archetype" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:concept"
  "@boost//:concept" -> "@boost//:windows_x86_64"
  "@boost//:concept" -> "@platforms//os:windows"
  "@boost//:concept" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:concept" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/concept_check/include/boost/concept/detail/concept_undef.hpp\n@boost//:libs/concept_check/include/boost/concept/detail/concept_def.hpp\n@boost//:libs/concept_check/include/boost/concept/usage.hpp\n@boost//:libs/concept_check/include/boost/concept_archetype.hpp\n@boost//:libs/concept_check/include/boost/concept/detail/borland.hpp\n@boost//:libs/concept_check/include/boost/concept_check/general.hpp\n@boost//:libs/concept_check/include/boost/concept_check/msvc.hpp\n...and 9 more items"
  "@boost//:libs/array/include/boost/array.hpp"
  "@boost//:libs/range/include/boost/range/any_range.hpp\n@boost//:libs/range/include/boost/range/detail/combine_cxx11.hpp\n@boost//:libs/range/include/boost/range/algorithm/heap_algorithm.hpp\n@boost//:libs/range/include/boost/range/detail/empty.hpp\n@boost//:libs/range/include/boost/range/algorithm/copy.hpp\n@boost//:libs/range/include/boost/range/algorithm/count.hpp\n@boost//:libs/range/include/boost/range/algorithm/upper_bound.hpp\n...and 150 more items"
  "@boost//:libs/foreach/include/boost/foreach_fwd.hpp\n@boost//:libs/foreach/include/boost/foreach.hpp"
  "@boost//:endian"
  "@boost//:endian" -> "@boost//:windows_x86_64"
  "@boost//:endian" -> "@platforms//os:windows"
  "@boost//:endian" -> "@boost//:libs/endian/include/boost/endian/detail/is_trivially_copyable.hpp\n@boost//:libs/endian/include/boost/endian/detail/endian_store.hpp\n@boost//:libs/endian/include/boost/endian/detail/integral_by_size.hpp\n@boost//:libs/endian/include/boost/endian/detail/requires_cxx11.hpp\n@boost//:libs/endian/include/boost/endian.hpp\n@boost//:libs/endian/include/boost/endian/detail/endian_reverse.hpp\n@boost//:libs/endian/include/boost/endian/endian.hpp\n...and 9 more items"
  "@boost//:endian" -> "@boost//:config"
  "@boost//:endian" -> "@boost//:core"
  "@boost//:endian" -> "@boost//:cstdint"
  "@boost//:endian" -> "@boost//:detail"
  "@boost//:endian" -> "@boost//:predef"
  "@boost//:endian" -> "@boost//:type_traits"
  "@boost//:endian" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:endian" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/endian/include/boost/endian/detail/is_trivially_copyable.hpp\n@boost//:libs/endian/include/boost/endian/detail/endian_store.hpp\n@boost//:libs/endian/include/boost/endian/detail/integral_by_size.hpp\n@boost//:libs/endian/include/boost/endian/detail/requires_cxx11.hpp\n@boost//:libs/endian/include/boost/endian.hpp\n@boost//:libs/endian/include/boost/endian/detail/endian_reverse.hpp\n@boost//:libs/endian/include/boost/endian/endian.hpp\n...and 9 more items"
  "@boost//:libs/spirit/include/boost/spirit/include/karma_eps.hpp\n@boost//:libs/spirit/include/boost/spirit/include/classic_parser_id.hpp\n@boost//:libs/spirit/include/boost/spirit/home/classic/core/non_terminal/rule.hpp\n@boost//:libs/spirit/include/boost/spirit/include/support_istream_iterator.hpp\n@boost//:libs/spirit/include/boost/spirit/home/classic/core/composite/sequential_and.hpp\n@boost//:libs/spirit/include/boost/spirit/home/qi/auto/create_parser.hpp\n...and 1048 more items"
  "@boost//:smart_ptr"
  "@boost//:smart_ptr" -> "@boost//:windows_x86_64"
  "@boost//:smart_ptr" -> "@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/sp_counted_base_acc_ia64.hpp\n@boost//:libs/smart_ptr/include/boost/detail/atomic_count.hpp\n@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/sp_typeinfo_.hpp\n@boost//:libs/smart_ptr/include/boost/intrusive_ptr.hpp\n@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/atomic_count.hpp\n@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp\n...and 99 more items"
  "@boost//:smart_ptr" -> "@platforms//os:windows"
  "@boost//:smart_ptr" -> "@boost//:align"
  "@boost//:smart_ptr" -> "@boost//:core"
  "@boost//:smart_ptr" -> "@boost//:predef"
  "@boost//:smart_ptr" -> "@boost//:scoped_array"
  "@boost//:smart_ptr" -> "@boost//:shared_array\n@boost//:scoped_ptr"
  "@boost//:smart_ptr" -> "@boost//:shared_ptr"
  "@boost//:smart_ptr" -> "@boost//:throw_exception"
  "@boost//:smart_ptr" -> "@boost//:utility"
  "@boost//:smart_ptr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:smart_ptr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:shared_ptr"
  "@boost//:shared_ptr" -> "@boost//:windows_x86_64"
  "@boost//:shared_ptr" -> "@platforms//os:windows"
  "@boost//:shared_ptr" -> "@boost//:checked_delete"
  "@boost//:shared_ptr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:shared_ptr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:shared_array\n@boost//:scoped_ptr"
  "@boost//:shared_array\n@boost//:scoped_ptr" -> "@boost//:windows_x86_64"
  "@boost//:shared_array\n@boost//:scoped_ptr" -> "@platforms//os:windows"
  "@boost//:shared_array\n@boost//:scoped_ptr" -> "@boost//:checked_delete"
  "@boost//:shared_array\n@boost//:scoped_ptr" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:shared_array\n@boost//:scoped_ptr" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:scoped_array"
  "@boost//:scoped_array" -> "@boost//:windows_x86_64"
  "@boost//:scoped_array" -> "@platforms//os:windows"
  "@boost//:scoped_array" -> "@boost//:checked_delete"
  "@boost//:scoped_array" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:scoped_array" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:checked_delete"
  "@boost//:checked_delete" -> "@boost//:windows_x86_64"
  "@boost//:checked_delete" -> "@platforms//os:windows"
  "@boost//:checked_delete" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:checked_delete" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:predef"
  "@boost//:predef" -> "@boost//:windows_x86_64"
  "@boost//:predef" -> "@boost//:libs/predef/include/boost/predef/library/std/stdcpp3.h\n@boost//:libs/predef/include/boost/predef/architecture/e2k.h\n@boost//:libs/predef/include/boost/predef/compiler/metrowerks.h\n@boost//:libs/predef/include/boost/predef/make.h\n@boost//:libs/predef/include/boost/predef/platform/windows_phone.h\n@boost//:libs/predef/include/boost/predef/architecture/x86/64.h\n@boost//:libs/predef/include/boost/predef/os/haiku.h\n...and 135 more items"
  "@boost//:predef" -> "@platforms//os:windows"
  "@boost//:predef" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:predef" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/predef/include/boost/predef/library/std/stdcpp3.h\n@boost//:libs/predef/include/boost/predef/architecture/e2k.h\n@boost//:libs/predef/include/boost/predef/compiler/metrowerks.h\n@boost//:libs/predef/include/boost/predef/make.h\n@boost//:libs/predef/include/boost/predef/platform/windows_phone.h\n@boost//:libs/predef/include/boost/predef/architecture/x86/64.h\n@boost//:libs/predef/include/boost/predef/os/haiku.h\n...and 135 more items"
  "@boost//:align"
  "@boost//:align" -> "@boost//:windows_x86_64"
  "@boost//:align" -> "@boost//:libs/align/include/boost/align/detail/is_aligned.hpp\n@boost//:libs/align/include/boost/align/detail/integral_constant.hpp\n@boost//:libs/align/include/boost/align/detail/assume_aligned_msvc.hpp\n@boost//:libs/align/include/boost/align/detail/aligned_alloc_new.hpp\n@boost//:libs/align/include/boost/align/aligned_alloc.hpp\n@boost//:libs/align/include/boost/align/detail/add_reference.hpp\n@boost//:libs/align/include/boost/align/aligned_allocator_forward.hpp\n...and 43 more items"
  "@boost//:align" -> "@platforms//os:windows"
  "@boost//:align" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:align" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/align/include/boost/align/detail/is_aligned.hpp\n@boost//:libs/align/include/boost/align/detail/integral_constant.hpp\n@boost//:libs/align/include/boost/align/detail/assume_aligned_msvc.hpp\n@boost//:libs/align/include/boost/align/detail/aligned_alloc_new.hpp\n@boost//:libs/align/include/boost/align/aligned_alloc.hpp\n@boost//:libs/align/include/boost/align/detail/add_reference.hpp\n@boost//:libs/align/include/boost/align/aligned_allocator_forward.hpp\n...and 43 more items"
  "@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/sp_counted_base_acc_ia64.hpp\n@boost//:libs/smart_ptr/include/boost/detail/atomic_count.hpp\n@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/sp_typeinfo_.hpp\n@boost//:libs/smart_ptr/include/boost/intrusive_ptr.hpp\n@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/atomic_count.hpp\n@boost//:libs/smart_ptr/include/boost/smart_ptr/detail/atomic_count_gcc_x86.hpp\n...and 99 more items"
  "@boost//:noncopyable"
  "@boost//:noncopyable" -> "@boost//:windows_x86_64"
  "@boost//:noncopyable" -> "@boost//:core"
  "@boost//:noncopyable" -> "@platforms//os:windows"
  "@boost//:noncopyable" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:noncopyable" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:iterator"
  "@boost//:iterator" -> "@boost//:windows_x86_64"
  "@boost//:iterator" -> "@platforms//os:windows"
  "@boost//:iterator" -> "@boost//:libs/iterator/include/boost/iterator/filter_iterator.hpp\n@boost//:libs/iterator/include/boost/iterator/zip_iterator.hpp\n@boost//:libs/iterator/include/boost/iterator/distance.hpp\n@boost//:libs/iterator/include/boost/iterator/iterator_facade.hpp\n@boost//:libs/iterator/include/boost/iterator/iterator_adaptor.hpp\n@boost//:libs/iterator/include/boost/iterator/is_iterator.hpp\n@boost//:libs/iterator/include/boost/iterator/iterator_categories.hpp\n...and 32 more items"
  "@boost//:iterator" -> "@boost//:detail"
  "@boost//:iterator" -> "@boost//:static_assert"
  "@boost//:iterator" -> "@boost//:type_traits"
  "@boost//:iterator" -> "@boost//:utility"
  "@boost//:iterator" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:iterator" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:utility"
  "@boost//:utility" -> "@boost//:windows_x86_64"
  "@boost//:utility" -> "@boost//:libs/utility/include/boost/utility/detail/result_of_variadic.hpp\n@boost//:libs/utility/include/boost/utility/string_ref_fwd.hpp\n@boost//:libs/utility/include/boost/utility.hpp\n@boost//:libs/utility/include/boost/detail/compressed_pair.hpp\n@boost//:libs/utility/include/boost/detail/ob_compressed_pair.hpp\n@boost//:libs/utility/include/boost/utility/in_place_factory.hpp\n@boost//:libs/utility/include/boost/utility/value_init.hpp\n...and 18 more items"
  "@boost//:utility" -> "@boost//:config"
  "@boost//:utility" -> "@boost//:container_hash"
  "@boost//:utility" -> "@platforms//os:windows"
  "@boost//:utility" -> "@boost//:core"
  "@boost//:utility" -> "@boost//:cstdint"
  "@boost//:utility" -> "@boost//:detail"
  "@boost//:utility" -> "@boost//:io"
  "@boost//:utility" -> "@boost//:preprocessor"
  "@boost//:utility" -> "@boost//:static_assert"
  "@boost//:utility" -> "@boost//:swap"
  "@boost//:utility" -> "@boost//:throw_exception"
  "@boost//:utility" -> "@boost//:type_traits"
  "@boost//:utility" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:utility" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:throw_exception"
  "@boost//:throw_exception" -> "@boost//:windows_x86_64"
  "@boost//:throw_exception" -> "@boost//:libs/throw_exception/include/boost/exception/exception.hpp\n@boost//:libs/throw_exception/include/boost/throw_exception.hpp"
  "@boost//:throw_exception" -> "@platforms//os:windows"
  "@boost//:throw_exception" -> "@boost//:assert"
  "@boost//:throw_exception" -> "@boost//:config"
  "@boost//:throw_exception" -> "@boost//:cstdint"
  "@boost//:throw_exception" -> "@boost//:current_function"
  "@boost//:throw_exception" -> "@boost//:detail"
  "@boost//:throw_exception" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:throw_exception" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/throw_exception/include/boost/exception/exception.hpp\n@boost//:libs/throw_exception/include/boost/throw_exception.hpp"
  "@boost//:swap"
  "@boost//:swap" -> "@boost//:windows_x86_64"
  "@boost//:swap" -> "@boost//:core"
  "@boost//:swap" -> "@platforms//os:windows"
  "@boost//:swap" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:swap" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:container_hash"
  "@boost//:container_hash" -> "@boost//:windows_x86_64"
  "@boost//:container_hash" -> "@boost//:libs/container_hash/include/boost/container_hash/detail/limits.hpp\n@boost//:libs/container_hash/include/boost/container_hash/hash.hpp\n@boost//:libs/container_hash/include/boost/container_hash/detail/hash_mix.hpp\n@boost//:libs/container_hash/include/boost/container_hash/detail/mulx.hpp\n@boost//:libs/container_hash/include/boost/container_hash/extensions.hpp\n@boost//:libs/container_hash/include/boost/container_hash/is_described_class.hpp\n...and 13 more items"
  "@boost//:container_hash" -> "@boost//:assert"
  "@boost//:container_hash" -> "@boost//:config"
  "@boost//:container_hash" -> "@boost//:core"
  "@boost//:container_hash" -> "@boost//:describe"
  "@boost//:container_hash" -> "@platforms//os:windows"
  "@boost//:container_hash" -> "@boost//:integer"
  "@boost//:container_hash" -> "@boost//:limits"
  "@boost//:container_hash" -> "@boost//:type_traits"
  "@boost//:container_hash" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:container_hash" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:describe"
  "@boost//:describe" -> "@boost//:windows_x86_64"
  "@boost//:describe" -> "@boost//:libs/describe/include/boost/describe/enum_to_string.hpp\n@boost//:libs/describe/include/boost/describe/detail/pp_utilities.hpp\n@boost//:libs/describe/include/boost/describe/enum_from_string.hpp\n@boost//:libs/describe/include/boost/describe/modifier_description.hpp\n@boost//:libs/describe/include/boost/describe/descriptor_by_pointer.hpp\n@boost//:libs/describe/include/boost/describe/detail/config.hpp\n@boost//:libs/describe/include/boost/describe/modifiers.hpp\n...and 15 more items"
  "@boost//:describe" -> "@boost//:mp11"
  "@boost//:describe" -> "@platforms//os:windows"
  "@boost//:describe" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:describe" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:mp11"
  "@boost//:mp11" -> "@boost//:windows_x86_64"
  "@boost//:mp11" -> "@boost//:libs/mp11/include/boost/mp11/detail/mp_min_element.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_defer.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_append.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_copy_if.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_rename.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_with_index.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_is_list.hpp\n...and 28 more items"
  "@boost//:mp11" -> "@platforms//os:windows"
  "@boost//:mp11" -> "@boost//:config"
  "@boost//:mp11" -> "@boost//:detail"
  "@boost//:mp11" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:mp11" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/mp11/include/boost/mp11/detail/mp_min_element.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_defer.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_append.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_copy_if.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_rename.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_with_index.hpp\n@boost//:libs/mp11/include/boost/mp11/detail/mp_is_list.hpp\n...and 28 more items"
  "@boost//:libs/describe/include/boost/describe/enum_to_string.hpp\n@boost//:libs/describe/include/boost/describe/detail/pp_utilities.hpp\n@boost//:libs/describe/include/boost/describe/enum_from_string.hpp\n@boost//:libs/describe/include/boost/describe/modifier_description.hpp\n@boost//:libs/describe/include/boost/describe/descriptor_by_pointer.hpp\n@boost//:libs/describe/include/boost/describe/detail/config.hpp\n@boost//:libs/describe/include/boost/describe/modifiers.hpp\n...and 15 more items"
  "@boost//:libs/container_hash/include/boost/container_hash/detail/limits.hpp\n@boost//:libs/container_hash/include/boost/container_hash/hash.hpp\n@boost//:libs/container_hash/include/boost/container_hash/detail/hash_mix.hpp\n@boost//:libs/container_hash/include/boost/container_hash/detail/mulx.hpp\n@boost//:libs/container_hash/include/boost/container_hash/extensions.hpp\n@boost//:libs/container_hash/include/boost/container_hash/is_described_class.hpp\n...and 13 more items"
  "@boost//:libs/utility/include/boost/utility/detail/result_of_variadic.hpp\n@boost//:libs/utility/include/boost/utility/string_ref_fwd.hpp\n@boost//:libs/utility/include/boost/utility.hpp\n@boost//:libs/utility/include/boost/detail/compressed_pair.hpp\n@boost//:libs/utility/include/boost/detail/ob_compressed_pair.hpp\n@boost//:libs/utility/include/boost/utility/in_place_factory.hpp\n@boost//:libs/utility/include/boost/utility/value_init.hpp\n...and 18 more items"
  "@boost//:type_traits"
  "@boost//:type_traits" -> "@boost//:windows_x86_64"
  "@boost//:type_traits" -> "@platforms//os:windows"
  "@boost//:type_traits" -> "@boost//:libs/type_traits/include/boost/type_traits/is_abstract.hpp\n@boost//:libs/type_traits/include/boost/type_traits/broken_compiler_spec.hpp\n@boost//:libs/type_traits/include/boost/type_traits/intrinsics.hpp\n@boost//:libs/type_traits/include/boost/type_traits/is_copy_constructible.hpp\n@boost//:libs/type_traits/include/boost/type_traits/has_equal_to.hpp\n@boost//:libs/type_traits/include/boost/type_traits/has_new_operator.hpp\n...and 195 more items"
  "@boost//:type_traits" -> "@boost//:config"
  "@boost//:type_traits" -> "@boost//:core"
  "@boost//:type_traits" -> "@boost//:mpl"
  "@boost//:type_traits" -> "@boost//:static_assert"
  "@boost//:type_traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:type_traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:mpl"
  "@boost//:mpl" -> "@boost//:windows_x86_64"
  "@boost//:mpl" -> "@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/bcc551/reverse_fold_impl.hpp\n@boost//:libs/mpl/include/boost/mpl/base.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/bcc551/times.hpp\n@boost//:libs/mpl/include/boost/mpl/key_type.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/bcc_pre590/vector_c.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/msvc70/bind.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/adl_barrier.hpp\n...and 1038 more items"
  "@boost//:mpl" -> "@platforms//os:windows"
  "@boost//:mpl" -> "@boost//:move"
  "@boost//:mpl" -> "@boost//:preprocessor"
  "@boost//:mpl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:mpl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:preprocessor"
  "@boost//:preprocessor" -> "@boost//:windows_x86_64"
  "@boost//:preprocessor" -> "@platforms//os:windows"
  "@boost//:preprocessor" -> "@boost//:libs/preprocessor/include/boost/preprocessor/seq/fold_right.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/control/detail/msvc/while.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/seq/detail/binary_transform.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/seq/pop_back.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/slot/counter.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/punctuation/remove_parens.hpp\n...and 395 more items"
  "@boost//:preprocessor" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:preprocessor" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/preprocessor/include/boost/preprocessor/seq/fold_right.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/control/detail/msvc/while.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/seq/detail/binary_transform.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/seq/pop_back.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/slot/counter.hpp\n@boost//:libs/preprocessor/include/boost/preprocessor/punctuation/remove_parens.hpp\n...and 395 more items"
  "@boost//:move"
  "@boost//:move" -> "@boost//:windows_x86_64"
  "@boost//:move" -> "@boost//:libs/move/include/boost/move/detail/std_ns_begin.hpp\n@boost//:libs/move/include/boost/move/utility.hpp\n@boost//:libs/move/include/boost/move/detail/reverse_iterator.hpp\n@boost//:libs/move/include/boost/move/detail/to_raw_pointer.hpp\n@boost//:libs/move/include/boost/move/detail/iterator_to_raw_pointer.hpp\n@boost//:libs/move/include/boost/move/make_unique.hpp\n@boost//:libs/move/include/boost/move/detail/type_traits.hpp\n...and 40 more items"
  "@boost//:move" -> "@platforms//os:windows"
  "@boost//:move" -> "@boost//:assert"
  "@boost//:move" -> "@boost//:detail"
  "@boost//:move" -> "@boost//:static_assert"
  "@boost//:move" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:move" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/move/include/boost/move/detail/std_ns_begin.hpp\n@boost//:libs/move/include/boost/move/utility.hpp\n@boost//:libs/move/include/boost/move/detail/reverse_iterator.hpp\n@boost//:libs/move/include/boost/move/detail/to_raw_pointer.hpp\n@boost//:libs/move/include/boost/move/detail/iterator_to_raw_pointer.hpp\n@boost//:libs/move/include/boost/move/make_unique.hpp\n@boost//:libs/move/include/boost/move/detail/type_traits.hpp\n...and 40 more items"
  "@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/bcc551/reverse_fold_impl.hpp\n@boost//:libs/mpl/include/boost/mpl/base.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/bcc551/times.hpp\n@boost//:libs/mpl/include/boost/mpl/key_type.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/bcc_pre590/vector_c.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/preprocessed/msvc70/bind.hpp\n@boost//:libs/mpl/include/boost/mpl/aux_/adl_barrier.hpp\n...and 1038 more items"
  "@boost//:core"
  "@boost//:core" -> "@boost//:windows_x86_64"
  "@boost//:core" -> "@boost//:libs/core/include/boost/core/memory_resource.hpp\n@boost//:libs/core/include/boost/core/serialization.hpp\n@boost//:libs/core/include/boost/type.hpp\n@boost//:libs/core/include/boost/core/null_deleter.hpp\n@boost//:libs/core/include/boost/core/addressof.hpp\n@boost//:libs/core/include/boost/core/size.hpp\n@boost//:libs/core/include/boost/core/typeinfo.hpp\n@boost//:libs/core/include/boost/core/launder.hpp\n@boost//:libs/core/include/boost/detail/sp_typeinfo.hpp\n...and 64 more items"
  "@boost//:core" -> "@boost//:config"
  "@boost//:core" -> "@platforms//os:windows"
  "@boost//:core" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:core" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/core/include/boost/core/memory_resource.hpp\n@boost//:libs/core/include/boost/core/serialization.hpp\n@boost//:libs/core/include/boost/type.hpp\n@boost//:libs/core/include/boost/core/null_deleter.hpp\n@boost//:libs/core/include/boost/core/addressof.hpp\n@boost//:libs/core/include/boost/core/size.hpp\n@boost//:libs/core/include/boost/core/typeinfo.hpp\n@boost//:libs/core/include/boost/core/launder.hpp\n@boost//:libs/core/include/boost/detail/sp_typeinfo.hpp\n...and 64 more items"
  "@boost//:libs/type_traits/include/boost/type_traits/is_abstract.hpp\n@boost//:libs/type_traits/include/boost/type_traits/broken_compiler_spec.hpp\n@boost//:libs/type_traits/include/boost/type_traits/intrinsics.hpp\n@boost//:libs/type_traits/include/boost/type_traits/is_copy_constructible.hpp\n@boost//:libs/type_traits/include/boost/type_traits/has_equal_to.hpp\n@boost//:libs/type_traits/include/boost/type_traits/has_new_operator.hpp\n...and 195 more items"
  "@boost//:detail"
  "@boost//:detail" -> "@boost//:windows_x86_64"
  "@boost//:detail" -> "@boost//:libs/detail/include/boost/cstdlib.hpp\n@boost//:libs/detail/include/boost/detail/numeric_traits.hpp\n@boost//:libs/detail/include/boost/detail/allocator_utilities.hpp\n@boost//:libs/detail/include/boost/blank.hpp\n@boost//:libs/detail/include/boost/detail/reference_content.hpp\n@boost//:libs/detail/include/boost/detail/is_xxx.hpp\n@boost//:libs/detail/include/boost/detail/container_fwd.hpp\n@boost//:libs/detail/include/boost/detail/has_default_constructor.hpp\n...and 16 more items"
  "@boost//:detail" -> "@boost//:limits"
  "@boost//:detail" -> "@boost//:winapi"
  "@boost//:detail" -> "@platforms//os:windows"
  "@boost//:detail" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:detail" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:winapi"
  "@boost//:winapi" -> "@boost//:windows_x86_64"
  "@boost//:winapi" -> "@boost//:libs/winapi/include/boost/winapi/jobs.hpp\n@boost//:libs/winapi/include/boost/winapi/pipes.hpp\n@boost//:libs/winapi/include/boost/detail/winapi/wait.hpp\n@boost//:libs/winapi/include/boost/winapi/get_current_thread.hpp\n@boost//:libs/winapi/include/boost/winapi/basic_types.hpp\n@boost//:libs/winapi/include/boost/detail/winapi/character_code_conversion.hpp\n@boost//:libs/winapi/include/boost/detail/winapi/get_current_thread_id.hpp\n...and 113 more items"
  "@boost//:winapi" -> "@platforms//os:windows"
  "@boost//:winapi" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:winapi" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/winapi/include/boost/winapi/jobs.hpp\n@boost//:libs/winapi/include/boost/winapi/pipes.hpp\n@boost//:libs/winapi/include/boost/detail/winapi/wait.hpp\n@boost//:libs/winapi/include/boost/winapi/get_current_thread.hpp\n@boost//:libs/winapi/include/boost/winapi/basic_types.hpp\n@boost//:libs/winapi/include/boost/detail/winapi/character_code_conversion.hpp\n@boost//:libs/winapi/include/boost/detail/winapi/get_current_thread_id.hpp\n...and 113 more items"
  "@boost//:libs/detail/include/boost/cstdlib.hpp\n@boost//:libs/detail/include/boost/detail/numeric_traits.hpp\n@boost//:libs/detail/include/boost/detail/allocator_utilities.hpp\n@boost//:libs/detail/include/boost/blank.hpp\n@boost//:libs/detail/include/boost/detail/reference_content.hpp\n@boost//:libs/detail/include/boost/detail/is_xxx.hpp\n@boost//:libs/detail/include/boost/detail/container_fwd.hpp\n@boost//:libs/detail/include/boost/detail/has_default_constructor.hpp\n...and 16 more items"
  "@boost//:libs/iterator/include/boost/iterator/filter_iterator.hpp\n@boost//:libs/iterator/include/boost/iterator/zip_iterator.hpp\n@boost//:libs/iterator/include/boost/iterator/distance.hpp\n@boost//:libs/iterator/include/boost/iterator/iterator_facade.hpp\n@boost//:libs/iterator/include/boost/iterator/iterator_adaptor.hpp\n@boost//:libs/iterator/include/boost/iterator/is_iterator.hpp\n@boost//:libs/iterator/include/boost/iterator/iterator_categories.hpp\n...and 32 more items"
  "@boost//:io"
  "@boost//:io" -> "@boost//:windows_x86_64"
  "@boost//:io" -> "@platforms//os:windows"
  "@boost//:io" -> "@boost//:libs/io/include/boost/io/nullstream.hpp\n@boost//:libs/io/include/boost/io_fwd.hpp\n@boost//:libs/io/include/boost/io/ostream_put.hpp\n@boost//:libs/io/include/boost/io/quoted.hpp\n@boost//:libs/io/include/boost/io/ios_state.hpp\n@boost//:libs/io/include/boost/io/detail/ostream_guard.hpp\n@boost//:libs/io/include/boost/io/ostream_joiner.hpp\n@boost//:libs/io/include/boost/io/detail/buffer_fill.hpp"
  "@boost//:io" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:io" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/io/include/boost/io/nullstream.hpp\n@boost//:libs/io/include/boost/io_fwd.hpp\n@boost//:libs/io/include/boost/io/ostream_put.hpp\n@boost//:libs/io/include/boost/io/quoted.hpp\n@boost//:libs/io/include/boost/io/ios_state.hpp\n@boost//:libs/io/include/boost/io/detail/ostream_guard.hpp\n@boost//:libs/io/include/boost/io/ostream_joiner.hpp\n@boost//:libs/io/include/boost/io/detail/buffer_fill.hpp"
  "@boost//:integer"
  "@boost//:integer" -> "@boost//:windows_x86_64"
  "@boost//:integer" -> "@boost//:libs/integer/include/boost/integer_fwd.hpp\n@boost//:libs/integer/include/boost/integer/mod_inverse.hpp\n@boost//:libs/integer/include/boost/integer_traits.hpp\n@boost//:libs/integer/include/boost/integer/extended_euclidean.hpp\n@boost//:libs/integer/include/boost/integer/integer_mask.hpp\n@boost//:libs/integer/include/boost/integer.hpp\n@boost//:libs/integer/include/boost/pending/integer_log2.hpp\n@boost//:libs/integer/include/boost/integer/integer_log2.hpp\n...and 5 more items"
  "@boost//:integer" -> "@platforms//os:windows"
  "@boost//:integer" -> "@boost//:cstdint"
  "@boost//:integer" -> "@boost//:static_assert"
  "@boost//:integer" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:integer" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:static_assert"
  "@boost//:static_assert" -> "@boost//:windows_x86_64"
  "@boost//:static_assert" -> "@boost//:libs/config/include/boost/config/workaround.hpp"
  "@boost//:static_assert" -> "@boost//:libs/static_assert/include/boost/static_assert.hpp"
  "@boost//:static_assert" -> "@platforms//os:windows"
  "@boost//:static_assert" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:static_assert" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/static_assert/include/boost/static_assert.hpp"
  "@boost//:libs/integer/include/boost/integer_fwd.hpp\n@boost//:libs/integer/include/boost/integer/mod_inverse.hpp\n@boost//:libs/integer/include/boost/integer_traits.hpp\n@boost//:libs/integer/include/boost/integer/extended_euclidean.hpp\n@boost//:libs/integer/include/boost/integer/integer_mask.hpp\n@boost//:libs/integer/include/boost/integer.hpp\n@boost//:libs/integer/include/boost/pending/integer_log2.hpp\n@boost//:libs/integer/include/boost/integer/integer_log2.hpp\n...and 5 more items"
  "@boost//:cstdint"
  "@boost//:cstdint" -> "@boost//:windows_x86_64"
  "@boost//:cstdint" -> "@boost//:config"
  "@boost//:cstdint" -> "@boost//:limits"
  "@boost//:cstdint" -> "@platforms//os:windows"
  "@boost//:cstdint" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:cstdint" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:limits"
  "@boost//:limits" -> "@boost//:windows_x86_64"
  "@boost//:limits" -> "@platforms//os:windows"
  "@boost//:limits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:limits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:config"
  "@boost//:config" -> "@boost//:windows_x86_64"
  "@boost//:config" -> "@boost//:libs/config/include/boost/config/platform/cray.hpp\n@boost//:libs/config/include/boost/config/no_tr1/complex.hpp\n@boost//:libs/config/include/boost/config.hpp\n@boost//:libs/config/include/boost/config/no_tr1/functional.hpp\n@boost//:libs/config/include/boost/config/compiler/common_edg.hpp\n@boost//:libs/config/include/boost/config/stdlib/stlport.hpp\n@boost//:libs/config/include/boost/config/assert_cxx17.hpp\n@boost//:libs/config/include/boost/config/no_tr1/cmath.hpp\n...and 86 more items"
  "@boost//:config" -> "@boost//:libs/config/include/boost/config/workaround.hpp"
  "@boost//:config" -> "@boost//:version"
  "@boost//:config" -> "@platforms//os:windows"
  "@boost//:config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:version"
  "@boost//:version" -> "@boost//:windows_x86_64"
  "@boost//:version" -> "@platforms//os:windows"
  "@boost//:version" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:version" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/config/include/boost/config/workaround.hpp"
  "@boost//:libs/config/include/boost/config/platform/cray.hpp\n@boost//:libs/config/include/boost/config/no_tr1/complex.hpp\n@boost//:libs/config/include/boost/config.hpp\n@boost//:libs/config/include/boost/config/no_tr1/functional.hpp\n@boost//:libs/config/include/boost/config/compiler/common_edg.hpp\n@boost//:libs/config/include/boost/config/stdlib/stlport.hpp\n@boost//:libs/config/include/boost/config/assert_cxx17.hpp\n@boost//:libs/config/include/boost/config/no_tr1/cmath.hpp\n...and 86 more items"
  "@boost//:assert"
  "@boost//:assert" -> "@boost//:windows_x86_64"
  "@boost//:assert" -> "@boost//:libs/assert/include/boost/assert/source_location.hpp\n@boost//:libs/assert/include/boost/current_function.hpp\n@boost//:libs/assert/include/boost/assert.hpp"
  "@boost//:assert" -> "@boost//:current_function"
  "@boost//:assert" -> "@platforms//os:windows"
  "@boost//:assert" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:assert" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:current_function"
  "@boost//:current_function" -> "@boost//:windows_x86_64"
  "@boost//:current_function" -> "@platforms//os:windows"
  "@boost//:current_function" -> "@bazel_tools//tools/def_parser:def_parser"
  "@boost//:current_function" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@boost//:libs/assert/include/boost/assert/source_location.hpp\n@boost//:libs/assert/include/boost/current_function.hpp\n@boost//:libs/assert/include/boost/assert.hpp"
  "@boost//:windows_x86_64"
  "@boost//:windows_x86_64" -> "@platforms//os:windows"
  "@boost//:windows_x86_64" -> "@platforms//cpu:x86_64"
  "@platforms//cpu:x86_64"
  "@platforms//cpu:x86_64" -> "@platforms//cpu:cpu"
  "@platforms//os:windows"
  "@platforms//os:windows" -> "@platforms//os:os"
  "@platforms//cpu:riscv64"
  "@platforms//cpu:riscv64" -> "@platforms//cpu:cpu"
  "@com_google_absl//absl/log:log"
  "@com_google_absl//absl/log:log" -> "@com_google_absl//absl/log:log.h"
  "@com_google_absl//absl/log:log" -> "@com_google_absl//absl/log:vlog_is_on"
  "@com_google_absl//absl/log:log" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:log" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:log" -> "@com_google_absl//absl/log/internal:log_impl"
  "@com_google_absl//absl/log:log" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:log" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:log_impl"
  "@com_google_absl//absl/log/internal:log_impl" -> "@com_google_absl//absl/log/internal:log_impl.h"
  "@com_google_absl//absl/log/internal:log_impl" -> "@com_google_absl//absl/log/internal:conditions"
  "@com_google_absl//absl/log/internal:log_impl" -> "@com_google_absl//absl/log/internal:log_message"
  "@com_google_absl//absl/log/internal:log_impl" -> "@com_google_absl//absl/log/internal:strip"
  "@com_google_absl//absl/log/internal:log_impl" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:log_impl" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:log_impl" -> "@com_google_absl//absl/log:absl_vlog_is_on"
  "@com_google_absl//absl/log/internal:log_impl" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:log_impl" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:strip"
  "@com_google_absl//absl/log/internal:strip" -> "@com_google_absl//absl/log/internal:strip.h"
  "@com_google_absl//absl/log/internal:strip" -> "@com_google_absl//absl/log/internal:log_message"
  "@com_google_absl//absl/log/internal:strip" -> "@com_google_absl//absl/log/internal:nullstream"
  "@com_google_absl//absl/log/internal:strip" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:strip" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:strip" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log/internal:strip" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:strip" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:nullstream"
  "@com_google_absl//absl/log/internal:nullstream" -> "@com_google_absl//absl/log/internal:nullstream.h"
  "@com_google_absl//absl/log/internal:nullstream" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:nullstream" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:nullstream" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:nullstream" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log/internal:nullstream" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:nullstream" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:nullstream" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:nullstream" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:nullstream.h"
  "@com_google_absl//absl/log/internal:strip.h"
  "@com_google_absl//absl/log/internal:log_message"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log/internal:log_message.cc\n@com_google_absl//absl/log/internal:log_message.h"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log/internal:append_truncated"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log/internal:format"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log/internal:globals"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log/internal:log_sink_set"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log/internal:nullguard"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log/internal:proto"
  "@com_google_absl//absl/log/internal:log_message" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:log_message" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log:log_sink_registry"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log:log_sink"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log:log_entry"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/log:globals"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/debugging:examine_stack"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/base:strerror"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/base:errno_saver"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:log_message" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/base:strerror"
  "@com_google_absl//absl/base:strerror" -> "@com_google_absl//absl/base:internal/strerror.cc\n@com_google_absl//absl/base:internal/strerror.h"
  "@com_google_absl//absl/base:strerror" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:strerror" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:strerror" -> "@com_google_absl//absl/base:errno_saver"
  "@com_google_absl//absl/base:strerror" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:strerror" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:strerror" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:strerror" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:internal/strerror.cc\n@com_google_absl//absl/base:internal/strerror.h"
  "@com_google_absl//absl/debugging:examine_stack"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl/debugging:internal/examine_stack.h\n@com_google_absl//absl/debugging:internal/examine_stack.cc"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl/debugging:stacktrace"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl/debugging:symbolize"
  "@com_google_absl//absl/debugging:examine_stack" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/debugging:examine_stack" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/debugging:examine_stack" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/debugging:internal/examine_stack.h\n@com_google_absl//absl/debugging:internal/examine_stack.cc"
  "@com_google_absl//absl/log:log_sink_registry"
  "@com_google_absl//absl/log:log_sink_registry" -> "@com_google_absl//absl/log:log_sink_registry.h"
  "@com_google_absl//absl/log:log_sink_registry" -> "@com_google_absl//absl/log:log_sink"
  "@com_google_absl//absl/log:log_sink_registry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:log_sink_registry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:log_sink_registry" -> "@com_google_absl//absl/log/internal:log_sink_set"
  "@com_google_absl//absl/log:log_sink_registry" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log:log_sink_registry" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:log_sink_registry" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:log_sink_registry.h"
  "@com_google_absl//absl/log/internal:proto"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl/log/internal:proto.cc\n@com_google_absl//absl/log/internal:proto.h"
  "@com_google_absl//absl/log/internal:proto" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:proto" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:proto" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/log/internal:proto.cc\n@com_google_absl//absl/log/internal:proto.h"
  "@com_google_absl//absl/log/internal:nullguard"
  "@com_google_absl//absl/log/internal:nullguard" -> "@com_google_absl//absl/log/internal:nullguard.cc\n@com_google_absl//absl/log/internal:nullguard.h"
  "@com_google_absl//absl/log/internal:nullguard" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:nullguard" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:nullguard" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:nullguard" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:nullguard" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:nullguard" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:nullguard.cc\n@com_google_absl//absl/log/internal:nullguard.h"
  "@com_google_absl//absl/log/internal:log_sink_set"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/log/internal:log_sink_set.cc\n@com_google_absl//absl/log/internal:log_sink_set.h"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/log/internal:config"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/log/internal:globals"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@platforms//os:android"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/base:no_destructor"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/cleanup:cleanup"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/log:globals"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/log:log_entry"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/log:log_sink"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:log_sink_set" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:log_sink"
  "@com_google_absl//absl/log:log_sink" -> "@com_google_absl//absl/log:log_sink.h\n@com_google_absl//absl/log:log_sink.cc"
  "@com_google_absl//absl/log:log_sink" -> "@com_google_absl//absl/log:log_entry"
  "@com_google_absl//absl/log:log_sink" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:log_sink" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:log_sink" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log:log_sink" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:log_sink" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:log_sink.h\n@com_google_absl//absl/log:log_sink.cc"
  "@com_google_absl//absl/log:log_entry"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/log:log_entry.h\n@com_google_absl//absl/log:log_entry.cc"
  "@com_google_absl//absl/log:log_entry" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:log_entry" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/log/internal:config"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:log_entry" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:log_entry.h\n@com_google_absl//absl/log:log_entry.cc"
  "@com_google_absl//absl/log:globals"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/log:globals.h\n@com_google_absl//absl/log:globals.cc"
  "@com_google_absl//absl/log:globals" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:globals" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/log/internal:vlog_config"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/hash:hash"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl/base:atomic_hook"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:globals" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/hash:hash"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/hash:internal/hash.cc\n@com_google_absl//absl/hash:internal/hash.h\n@com_google_absl//absl/hash:hash.h"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/hash:city"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/hash:low_level_hash"
  "@com_google_absl//absl/hash:hash" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/hash:hash" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/types:variant"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/functional:function_ref"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/container:fixed_array"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/hash:hash" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:variant"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl/types:internal/variant.h\n@com_google_absl//absl/types:variant.h"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl/types:bad_variant_access"
  "@com_google_absl//absl/types:variant" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:variant" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:variant" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:bad_variant_access"
  "@com_google_absl//absl/types:bad_variant_access" -> "@com_google_absl//absl/types:bad_variant_access.h\n@com_google_absl//absl/types:bad_variant_access.cc"
  "@com_google_absl//absl/types:bad_variant_access" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:bad_variant_access" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:bad_variant_access" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/types:bad_variant_access" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:bad_variant_access" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:bad_variant_access" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:bad_variant_access.h\n@com_google_absl//absl/types:bad_variant_access.cc"
  "@com_google_absl//absl/types:internal/variant.h\n@com_google_absl//absl/types:variant.h"
  "@com_google_absl//absl/hash:low_level_hash"
  "@com_google_absl//absl/hash:low_level_hash" -> "@com_google_absl//absl/hash:internal/low_level_hash.cc\n@com_google_absl//absl/hash:internal/low_level_hash.h"
  "@com_google_absl//absl/hash:low_level_hash" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/hash:low_level_hash" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/hash:low_level_hash" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/hash:low_level_hash" -> "@com_google_absl//absl/base:prefetch"
  "@com_google_absl//absl/hash:low_level_hash" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/hash:low_level_hash" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/hash:low_level_hash" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/hash:low_level_hash" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:prefetch"
  "@com_google_absl//absl/base:prefetch" -> "@com_google_absl//absl/base:prefetch.h"
  "@com_google_absl//absl/base:prefetch" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:prefetch" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:prefetch" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:prefetch" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:prefetch" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:prefetch" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:prefetch.h"
  "@com_google_absl//absl/hash:internal/low_level_hash.cc\n@com_google_absl//absl/hash:internal/low_level_hash.h"
  "@com_google_absl//absl/hash:city"
  "@com_google_absl//absl/hash:city" -> "@com_google_absl//absl/hash:internal/city.h\n@com_google_absl//absl/hash:internal/city.cc"
  "@com_google_absl//absl/hash:city" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/hash:city" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/hash:city" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/hash:city" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/hash:city" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/hash:city" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/hash:city" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/hash:internal/city.h\n@com_google_absl//absl/hash:internal/city.cc"
  "@com_google_absl//absl/hash:internal/hash.cc\n@com_google_absl//absl/hash:internal/hash.h\n@com_google_absl//absl/hash:hash.h"
  "@com_google_absl//absl/log:globals.h\n@com_google_absl//absl/log:globals.cc"
  "@com_google_absl//absl/cleanup:cleanup"
  "@com_google_absl//absl/cleanup:cleanup" -> "@com_google_absl//absl/cleanup:cleanup.h"
  "@com_google_absl//absl/cleanup:cleanup" -> "@com_google_absl//absl/cleanup:cleanup_internal"
  "@com_google_absl//absl/cleanup:cleanup" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/cleanup:cleanup" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/cleanup:cleanup" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/cleanup:cleanup" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/cleanup:cleanup" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/cleanup:cleanup" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/cleanup:cleanup_internal"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@com_google_absl//absl/cleanup:internal/cleanup.h"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/cleanup:cleanup_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/cleanup:internal/cleanup.h"
  "@com_google_absl//absl/cleanup:cleanup.h"
  "@platforms//os:android"
  "@platforms//os:android" -> "@platforms//os:os"
  "@com_google_absl//absl/log/internal:log_sink_set.cc\n@com_google_absl//absl/log/internal:log_sink_set.h"
  "@com_google_absl//absl/log/internal:format"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/log/internal:log_format.h\n@com_google_absl//absl/log/internal:log_format.cc"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/log/internal:append_truncated"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/log/internal:config"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/log/internal:globals"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/strings:str_format"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/log/internal:format" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/log/internal:format" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:format" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:str_format"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl/strings:str_format.h"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl/strings:str_format_internal"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl/strings:string_view"
  "@com_google_absl//absl/strings:str_format" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:str_format" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:str_format" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:str_format_internal"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/strings:internal/str_format/constexpr_parser.h\n@com_google_absl//absl/strings:internal/str_format/extension.cc\n@com_google_absl//absl/strings:internal/str_format/output.h\n@com_google_absl//absl/strings:internal/str_format/arg.cc\n@com_google_absl//absl/strings:internal/str_format/bind.cc\n@com_google_absl//absl/strings:internal/str_format/float_conversion.h\n@com_google_absl//absl/strings:internal/str_format/parser.cc\n...and 7 more items"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/strings:str_format_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:str_format_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/numeric:representation"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/functional:function_ref"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/container:fixed_array"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:str_format_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:fixed_array"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/container:fixed_array.h"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/container:compressed_tuple"
  "@com_google_absl//absl/container:fixed_array" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:fixed_array" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl/algorithm:algorithm"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:fixed_array" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:fixed_array.h"
  "@com_google_absl//absl/container:inlined_vector"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl/container:inlined_vector.h"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl/container:inlined_vector_internal"
  "@com_google_absl//absl/container:inlined_vector" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:inlined_vector" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl/algorithm:algorithm"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:inlined_vector" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:inlined_vector_internal"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl/container:internal/inlined_vector.h"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl/container:compressed_tuple"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:inlined_vector_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:compressed_tuple"
  "@com_google_absl//absl/container:compressed_tuple" -> "@com_google_absl//absl/container:internal/compressed_tuple.h"
  "@com_google_absl//absl/container:compressed_tuple" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/container:compressed_tuple" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/container:compressed_tuple" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/container:compressed_tuple" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/container:compressed_tuple" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/container:internal/compressed_tuple.h"
  "@com_google_absl//absl/container:internal/inlined_vector.h"
  "@com_google_absl//absl/container:inlined_vector.h"
  "@com_google_absl//absl/functional:function_ref"
  "@com_google_absl//absl/functional:function_ref" -> "@com_google_absl//absl/functional:function_ref.h\n@com_google_absl//absl/functional:internal/function_ref.h"
  "@com_google_absl//absl/functional:function_ref" -> "@com_google_absl//absl/functional:any_invocable"
  "@com_google_absl//absl/functional:function_ref" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/functional:function_ref" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/functional:function_ref" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/functional:function_ref" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/functional:function_ref" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/functional:function_ref" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/functional:function_ref" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/functional:any_invocable"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl/functional:internal/any_invocable.h\n@com_google_absl//absl/functional:any_invocable.h"
  "@com_google_absl//absl/functional:any_invocable" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/functional:any_invocable" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/functional:any_invocable" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/functional:internal/any_invocable.h\n@com_google_absl//absl/functional:any_invocable.h"
  "@com_google_absl//absl/functional:function_ref.h\n@com_google_absl//absl/functional:internal/function_ref.h"
  "@com_google_absl//absl/numeric:representation"
  "@com_google_absl//absl/numeric:representation" -> "@com_google_absl//absl/numeric:internal/representation.h"
  "@com_google_absl//absl/numeric:representation" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/numeric:representation" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/numeric:representation" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/numeric:representation" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/numeric:representation" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/numeric:internal/representation.h"
  "@com_google_absl//absl/strings:internal/str_format/constexpr_parser.h\n@com_google_absl//absl/strings:internal/str_format/extension.cc\n@com_google_absl//absl/strings:internal/str_format/output.h\n@com_google_absl//absl/strings:internal/str_format/arg.cc\n@com_google_absl//absl/strings:internal/str_format/bind.cc\n@com_google_absl//absl/strings:internal/str_format/float_conversion.h\n@com_google_absl//absl/strings:internal/str_format/parser.cc\n...and 7 more items"
  "@com_google_absl//absl/strings:str_format.h"
  "@com_google_absl//absl/log/internal:globals"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl/log/internal:globals.cc\n@com_google_absl//absl/log/internal:globals.h"
  "@com_google_absl//absl/log/internal:globals" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:globals" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:globals" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:globals.cc\n@com_google_absl//absl/log/internal:globals.h"
  "@com_google_absl//absl/log/internal:config"
  "@com_google_absl//absl/log/internal:config" -> "@com_google_absl//absl/log/internal:config.h"
  "@com_google_absl//absl/log/internal:config" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:config" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:config" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:config" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:config.h"
  "@com_google_absl//absl/log/internal:log_format.h\n@com_google_absl//absl/log/internal:log_format.cc"
  "@com_google_absl//absl/log/internal:append_truncated"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@com_google_absl//absl/log/internal:append_truncated.h"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:append_truncated" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:span"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl/types:span.h\n@com_google_absl//absl/types:internal/span.h"
  "@com_google_absl//absl/types:span" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:span" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl/algorithm:algorithm"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:span" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/algorithm:algorithm"
  "@com_google_absl//absl/algorithm:algorithm" -> "@com_google_absl//absl/algorithm:algorithm.h"
  "@com_google_absl//absl/algorithm:algorithm" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/algorithm:algorithm" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/algorithm:algorithm" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/algorithm:algorithm" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/algorithm:algorithm" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/algorithm:algorithm.h"
  "@com_google_absl//absl/types:span.h\n@com_google_absl//absl/types:internal/span.h"
  "@com_google_absl//absl/log/internal:append_truncated.h"
  "@com_google_absl//absl/log/internal:log_message.cc\n@com_google_absl//absl/log/internal:log_message.h"
  "@com_google_absl//absl/log/internal:conditions"
  "@com_google_absl//absl/log/internal:conditions" -> "@com_google_absl//absl/log/internal:conditions.cc\n@com_google_absl//absl/log/internal:conditions.h"
  "@com_google_absl//absl/log/internal:conditions" -> "@com_google_absl//absl/log/internal:voidify"
  "@com_google_absl//absl/log/internal:conditions" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:conditions" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:conditions" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/log/internal:conditions" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:conditions" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:conditions" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:conditions" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:voidify"
  "@com_google_absl//absl/log/internal:voidify" -> "@com_google_absl//absl/log/internal:voidify.h"
  "@com_google_absl//absl/log/internal:voidify" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:voidify" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:voidify" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:voidify" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:voidify" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:voidify.h"
  "@com_google_absl//absl/log/internal:conditions.cc\n@com_google_absl//absl/log/internal:conditions.h"
  "@com_google_absl//absl/log/internal:log_impl.h"
  "@com_google_absl//absl/log:vlog_is_on"
  "@com_google_absl//absl/log:vlog_is_on" -> "@com_google_absl//absl/log:vlog_is_on.h"
  "@com_google_absl//absl/log:vlog_is_on" -> "@com_google_absl//absl/log:absl_vlog_is_on"
  "@com_google_absl//absl/log:vlog_is_on" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:vlog_is_on" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:vlog_is_on" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:vlog_is_on" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log:absl_vlog_is_on"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@com_google_absl//absl/log:absl_vlog_is_on.h"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@com_google_absl//absl/log/internal:vlog_config"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log:absl_vlog_is_on" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:vlog_config"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/log/internal:vlog_config.cc\n@com_google_absl//absl/log/internal:vlog_config.h"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/log/internal:fnmatch"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/base:no_destructor"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:vlog_config" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:no_destructor"
  "@com_google_absl//absl/base:no_destructor" -> "@com_google_absl//absl/base:no_destructor.h"
  "@com_google_absl//absl/base:no_destructor" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:no_destructor" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:no_destructor" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:no_destructor" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:no_destructor" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:no_destructor.h"
  "@com_google_absl//absl/synchronization:synchronization"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/synchronization:blocking_counter.h\n@com_google_absl//absl/synchronization:internal/win32_waiter.h\n@com_google_absl//absl/synchronization:barrier.h\n@com_google_absl//absl/synchronization:mutex.cc\n@com_google_absl//absl/synchronization:internal/futex.h\n@com_google_absl//absl/synchronization:internal/stdcpp_waiter.h\n@com_google_absl//absl/synchronization:internal/pthread_waiter.cc\n@com_google_absl//absl/synchronization:internal/futex_waiter.h\n...and 18 more items"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl:wasm"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/synchronization:graphcycles_internal"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/synchronization:kernel_timeout_internal"
  "@com_google_absl//absl/synchronization:synchronization" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/synchronization:synchronization" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/debugging:symbolize"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/debugging:stacktrace"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:malloc_internal"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:atomic_hook"
  "@com_google_absl//absl/synchronization:synchronization" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/debugging:stacktrace"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl/debugging:stacktrace.cc\n@com_google_absl//absl/debugging:internal/stacktrace_x86-inl.inc\n@com_google_absl//absl/debugging:internal/stacktrace_riscv-inl.inc\n@com_google_absl//absl/debugging:internal/stacktrace_unimplemented-inl.inc\n@com_google_absl//absl/debugging:stacktrace.h\n@com_google_absl//absl/debugging:internal/stacktrace_win32-inl.inc\n@com_google_absl//absl/debugging:internal/stacktrace_arm-inl.inc\n...and 5 more items"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl/debugging:debugging_internal"
  "@com_google_absl//absl/debugging:stacktrace" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/debugging:stacktrace" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/debugging:stacktrace" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/debugging:stacktrace.cc\n@com_google_absl//absl/debugging:internal/stacktrace_x86-inl.inc\n@com_google_absl//absl/debugging:internal/stacktrace_riscv-inl.inc\n@com_google_absl//absl/debugging:internal/stacktrace_unimplemented-inl.inc\n@com_google_absl//absl/debugging:stacktrace.h\n@com_google_absl//absl/debugging:internal/stacktrace_win32-inl.inc\n@com_google_absl//absl/debugging:internal/stacktrace_arm-inl.inc\n...and 5 more items"
  "@com_google_absl//absl/debugging:symbolize"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/debugging:internal/symbolize.h\n@com_google_absl//absl/debugging:symbolize_emscripten.inc\n@com_google_absl//absl/debugging:symbolize_darwin.inc\n@com_google_absl//absl/debugging:symbolize_unimplemented.inc\n@com_google_absl//absl/debugging:symbolize.cc\n@com_google_absl//absl/debugging:symbolize_win32.inc\n@com_google_absl//absl/debugging:symbolize_elf.inc\n@com_google_absl//absl/debugging:symbolize.h"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/debugging:debugging_internal"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/debugging:demangle_internal"
  "@com_google_absl//absl/debugging:symbolize" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/debugging:symbolize" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/base:malloc_internal"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/debugging:symbolize" -> "@com_google_absl//absl:mingw_compiler"
  "@com_google_absl//absl/debugging:demangle_internal"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@com_google_absl//absl/debugging:internal/demangle.h\n@com_google_absl//absl/debugging:internal/demangle.cc"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/debugging:demangle_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/debugging:internal/demangle.h\n@com_google_absl//absl/debugging:internal/demangle.cc"
  "@com_google_absl//absl/debugging:debugging_internal"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl/debugging:internal/address_is_readable.cc\n@com_google_absl//absl/debugging:internal/elf_mem_image.cc\n@com_google_absl//absl/debugging:internal/vdso_support.h\n@com_google_absl//absl/debugging:internal/vdso_support.cc\n@com_google_absl//absl/debugging:internal/address_is_readable.h\n@com_google_absl//absl/debugging:internal/elf_mem_image.h"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl/base:errno_saver"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/debugging:debugging_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/debugging:internal/address_is_readable.cc\n@com_google_absl//absl/debugging:internal/elf_mem_image.cc\n@com_google_absl//absl/debugging:internal/vdso_support.h\n@com_google_absl//absl/debugging:internal/vdso_support.cc\n@com_google_absl//absl/debugging:internal/address_is_readable.h\n@com_google_absl//absl/debugging:internal/elf_mem_image.h"
  "@com_google_absl//absl/debugging:internal/symbolize.h\n@com_google_absl//absl/debugging:symbolize_emscripten.inc\n@com_google_absl//absl/debugging:symbolize_darwin.inc\n@com_google_absl//absl/debugging:symbolize_unimplemented.inc\n@com_google_absl//absl/debugging:symbolize.cc\n@com_google_absl//absl/debugging:symbolize_win32.inc\n@com_google_absl//absl/debugging:symbolize_elf.inc\n@com_google_absl//absl/debugging:symbolize.h"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl/synchronization:internal/kernel_timeout.cc\n@com_google_absl//absl/synchronization:internal/kernel_timeout.h"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/synchronization:kernel_timeout_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/time:time"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/time:internal/get_current_time_posix.inc\n@com_google_absl//absl/time:clock.h\n@com_google_absl//absl/time:internal/get_current_time_chrono.inc\n@com_google_absl//absl/time:time.cc\n@com_google_absl//absl/time:format.cc\n@com_google_absl//absl/time:civil_time.h\n@com_google_absl//absl/time:duration.cc\n@com_google_absl//absl/time:time.h\n@com_google_absl//absl/time:clock.cc\n@com_google_absl//absl/time:civil_time.cc"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/time:time" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/time:time" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/time/internal/cctz:time_zone"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/time:time" -> "@com_google_absl//absl/time/internal/cctz:civil_time"
  "@com_google_absl//absl/time/internal/cctz:time_zone"
  "@com_google_absl//absl/time/internal/cctz:time_zone" -> "@com_google_absl//absl/time/internal/cctz:src/time_zone_libc.h\n@com_google_absl//absl/time/internal/cctz:src/tzfile.h\n@com_google_absl//absl/time/internal/cctz:src/time_zone_posix.cc\n@com_google_absl//absl/time/internal/cctz:src/zone_info_source.cc\n@com_google_absl//absl/time/internal/cctz:src/time_zone_fixed.h\n@com_google_absl//absl/time/internal/cctz:src/time_zone_impl.cc\n@com_google_absl//absl/time/internal/cctz:src/time_zone_info.cc\n...and 11 more items"
  "@com_google_absl//absl/time/internal/cctz:time_zone" -> "@com_google_absl//absl/time/internal/cctz:civil_time"
  "@com_google_absl//absl/time/internal/cctz:time_zone" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/time/internal/cctz:time_zone" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/time/internal/cctz:time_zone" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/time/internal/cctz:time_zone" -> "@platforms//os:osx"
  "@com_google_absl//absl/time/internal/cctz:time_zone" -> "@platforms//os:ios"
  "@platforms//os:ios"
  "@platforms//os:ios" -> "@platforms//os:os"
  "@platforms//os:osx"
  "@platforms//os:osx" -> "@platforms//os:os"
  "@platforms//os:os"
  "@com_google_absl//absl/time/internal/cctz:civil_time"
  "@com_google_absl//absl/time/internal/cctz:civil_time" -> "@com_google_absl//absl/time/internal/cctz:include/cctz/civil_time_detail.h\n@com_google_absl//absl/time/internal/cctz:src/civil_time_detail.cc\n@com_google_absl//absl/time/internal/cctz:include/cctz/civil_time.h"
  "@com_google_absl//absl/time/internal/cctz:civil_time" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/time/internal/cctz:civil_time" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/time/internal/cctz:civil_time" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/time/internal/cctz:include/cctz/civil_time_detail.h\n@com_google_absl//absl/time/internal/cctz:src/civil_time_detail.cc\n@com_google_absl//absl/time/internal/cctz:include/cctz/civil_time.h"
  "@com_google_absl//absl/time/internal/cctz:src/time_zone_libc.h\n@com_google_absl//absl/time/internal/cctz:src/tzfile.h\n@com_google_absl//absl/time/internal/cctz:src/time_zone_posix.cc\n@com_google_absl//absl/time/internal/cctz:src/zone_info_source.cc\n@com_google_absl//absl/time/internal/cctz:src/time_zone_fixed.h\n@com_google_absl//absl/time/internal/cctz:src/time_zone_impl.cc\n@com_google_absl//absl/time/internal/cctz:src/time_zone_info.cc\n...and 11 more items"
  "@com_google_absl//absl/time:internal/get_current_time_posix.inc\n@com_google_absl//absl/time:clock.h\n@com_google_absl//absl/time:internal/get_current_time_chrono.inc\n@com_google_absl//absl/time:time.cc\n@com_google_absl//absl/time:format.cc\n@com_google_absl//absl/time:civil_time.h\n@com_google_absl//absl/time:duration.cc\n@com_google_absl//absl/time:time.h\n@com_google_absl//absl/time:clock.cc\n@com_google_absl//absl/time:civil_time.cc"
  "@com_google_absl//absl/synchronization:internal/kernel_timeout.cc\n@com_google_absl//absl/synchronization:internal/kernel_timeout.h"
  "@com_google_absl//absl/synchronization:graphcycles_internal"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl/synchronization:internal/graphcycles.cc\n@com_google_absl//absl/synchronization:internal/graphcycles.h"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl/base:malloc_internal"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/synchronization:graphcycles_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:malloc_internal"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl/base:internal/low_level_alloc.cc\n@com_google_absl//absl/base:internal/direct_mmap.h\n@com_google_absl//absl/base:internal/low_level_alloc.h"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/base:malloc_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:malloc_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:malloc_internal" -> "@com_google_absl//absl:wasm"
  "@com_google_absl//absl/base:internal/low_level_alloc.cc\n@com_google_absl//absl/base:internal/direct_mmap.h\n@com_google_absl//absl/base:internal/low_level_alloc.h"
  "@com_google_absl//absl/synchronization:internal/graphcycles.cc\n@com_google_absl//absl/synchronization:internal/graphcycles.h"
  "@com_google_absl//absl/synchronization:blocking_counter.h\n@com_google_absl//absl/synchronization:internal/win32_waiter.h\n@com_google_absl//absl/synchronization:barrier.h\n@com_google_absl//absl/synchronization:mutex.cc\n@com_google_absl//absl/synchronization:internal/futex.h\n@com_google_absl//absl/synchronization:internal/stdcpp_waiter.h\n@com_google_absl//absl/synchronization:internal/pthread_waiter.cc\n@com_google_absl//absl/synchronization:internal/futex_waiter.h\n...and 18 more items"
  "@com_google_absl//absl/types:optional"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/types:optional.h\n@com_google_absl//absl/types:internal/optional.h"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/types:bad_optional_access"
  "@com_google_absl//absl/types:optional" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:optional" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:optional" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/utility:utility"
  "@com_google_absl//absl/utility:utility" -> "@com_google_absl//absl/utility:utility.h"
  "@com_google_absl//absl/utility:utility" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/utility:utility" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/utility:utility" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/utility:utility" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/utility:utility" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/utility:utility" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/utility:utility" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/utility:utility.h"
  "@com_google_absl//absl/types:bad_optional_access"
  "@com_google_absl//absl/types:bad_optional_access" -> "@com_google_absl//absl/types:bad_optional_access.h\n@com_google_absl//absl/types:bad_optional_access.cc"
  "@com_google_absl//absl/types:bad_optional_access" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/types:bad_optional_access" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/types:bad_optional_access" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/types:bad_optional_access" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/types:bad_optional_access" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/types:bad_optional_access" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/types:bad_optional_access.h\n@com_google_absl//absl/types:bad_optional_access.cc"
  "@com_google_absl//absl/types:optional.h\n@com_google_absl//absl/types:internal/optional.h"
  "@com_google_absl//absl/log/internal:fnmatch"
  "@com_google_absl//absl/log/internal:fnmatch" -> "@com_google_absl//absl/log/internal:fnmatch.cc\n@com_google_absl//absl/log/internal:fnmatch.h"
  "@com_google_absl//absl/log/internal:fnmatch" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/log/internal:fnmatch" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/log/internal:fnmatch" -> "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/log/internal:fnmatch" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/log/internal:fnmatch" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/log/internal:fnmatch" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/log/internal:fnmatch.cc\n@com_google_absl//absl/log/internal:fnmatch.h"
  "@com_google_absl//absl/log/internal:vlog_config.cc\n@com_google_absl//absl/log/internal:vlog_config.h"
  "@com_google_absl//absl/strings:strings"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/strings:str_split.h\n@com_google_absl//absl/strings:numbers.h\n@com_google_absl//absl/strings:internal/has_absl_stringify.h\n@com_google_absl//absl/strings:ascii.h\n@com_google_absl//absl/strings:numbers.cc\n@com_google_absl//absl/strings:internal/string_constant.h\n@com_google_absl//absl/strings:internal/memutil.h\n@com_google_absl//absl/strings:has_absl_stringify.h\n@com_google_absl//absl/strings:ascii.cc\n...and 27 more items"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/strings:string_view.h"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/strings:charset"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/strings:internal"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/strings:string_view"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:strings" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/strings:strings" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/strings:strings" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/numeric:int128"
  "@com_google_absl//absl/numeric:int128" -> "@com_google_absl//absl/numeric:int128.h\n@com_google_absl//absl/numeric:int128.cc\n@com_google_absl//absl/numeric:int128_have_intrinsic.inc\n@com_google_absl//absl/numeric:int128_no_intrinsic.inc"
  "@com_google_absl//absl/numeric:int128" -> "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/numeric:int128" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/numeric:int128" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/numeric:int128" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/numeric:int128" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/numeric:int128" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/numeric:int128" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/numeric:bits"
  "@com_google_absl//absl/numeric:bits" -> "@com_google_absl//absl/numeric:bits.h\n@com_google_absl//absl/numeric:internal/bits.h"
  "@com_google_absl//absl/numeric:bits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/numeric:bits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/numeric:bits" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/numeric:bits" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/numeric:bits" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/numeric:bits" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/numeric:bits.h\n@com_google_absl//absl/numeric:internal/bits.h"
  "@com_google_absl//absl/numeric:int128.h\n@com_google_absl//absl/numeric:int128.cc\n@com_google_absl//absl/numeric:int128_have_intrinsic.inc\n@com_google_absl//absl/numeric:int128_no_intrinsic.inc"
  "@com_google_absl//absl/memory:memory"
  "@com_google_absl//absl/memory:memory" -> "@com_google_absl//absl/memory:memory.h"
  "@com_google_absl//absl/memory:memory" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/memory:memory" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/memory:memory" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/memory:memory" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/memory:memory" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/memory:memory" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/memory:memory.h"
  "@com_google_absl//absl/strings:internal"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl/strings:internal/escaping.h\n@com_google_absl//absl/strings:internal/escaping.cc\n@com_google_absl//absl/strings:internal/utf8.h\n@com_google_absl//absl/strings:internal/resize_uninitialized.h\n@com_google_absl//absl/strings:internal/ostringstream.cc\n@com_google_absl//absl/strings:internal/utf8.cc\n@com_google_absl//absl/strings:internal/ostringstream.h"
  "@com_google_absl//absl/strings:internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:endian"
  "@com_google_absl//absl/base:endian" -> "@com_google_absl//absl/base:internal/endian.h\n@com_google_absl//absl/base:internal/unaligned_access.h"
  "@com_google_absl//absl/base:endian" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/base:endian" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:endian" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:endian" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/base:endian" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:endian" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:endian" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:endian" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:internal/endian.h\n@com_google_absl//absl/base:internal/unaligned_access.h"
  "@com_google_absl//absl/strings:internal/escaping.h\n@com_google_absl//absl/strings:internal/escaping.cc\n@com_google_absl//absl/strings:internal/utf8.h\n@com_google_absl//absl/strings:internal/resize_uninitialized.h\n@com_google_absl//absl/strings:internal/ostringstream.cc\n@com_google_absl//absl/strings:internal/utf8.cc\n@com_google_absl//absl/strings:internal/ostringstream.h"
  "@com_google_absl//absl/strings:charset"
  "@com_google_absl//absl/strings:charset" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/strings:charset" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:charset" -> "@com_google_absl//absl/strings:charset.h"
  "@com_google_absl//absl/strings:charset" -> "@com_google_absl//absl/strings:string_view"
  "@com_google_absl//absl/strings:charset" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:charset" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:charset" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:string_view"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl/strings:string_view.cc"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl/strings:string_view.h"
  "@com_google_absl//absl/strings:string_view" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/strings:string_view" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/strings:string_view" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:base"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:casts.h\n@com_google_absl//absl/base:internal/cycleclock.cc\n@com_google_absl//absl/base:internal/unscaledcycleclock.cc\n@com_google_absl//absl/base:internal/spinlock.cc\n@com_google_absl//absl/base:internal/tsan_mutex_interface.h\n@com_google_absl//absl/base:internal/thread_identity.cc\n@com_google_absl//absl/base:internal/thread_identity.h\n@com_google_absl//absl/base:internal/per_thread_tls.h\n@com_google_absl//absl/base:call_once.h\n...and 6 more items"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:atomic_hook"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:cycleclock_internal"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl:mingw_compiler"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl:wasm"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/base:spinlock_wait"
  "@com_google_absl//absl/base:base" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:base" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:base" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/base:spinlock_wait"
  "@com_google_absl//absl/base:spinlock_wait" -> "@com_google_absl//absl/base:internal/spinlock_wait.h\n@com_google_absl//absl/base:internal/spinlock_win32.inc\n@com_google_absl//absl/base:internal/spinlock_posix.inc\n@com_google_absl//absl/base:internal/spinlock_linux.inc\n@com_google_absl//absl/base:internal/spinlock_akaros.inc\n@com_google_absl//absl/base:internal/spinlock_wait.cc"
  "@com_google_absl//absl/base:spinlock_wait" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/base:spinlock_wait" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:spinlock_wait" -> "@com_google_absl//absl/base:errno_saver"
  "@com_google_absl//absl/base:spinlock_wait" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:spinlock_wait" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:spinlock_wait" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:spinlock_wait" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:internal/spinlock_wait.h\n@com_google_absl//absl/base:internal/spinlock_win32.inc\n@com_google_absl//absl/base:internal/spinlock_posix.inc\n@com_google_absl//absl/base:internal/spinlock_linux.inc\n@com_google_absl//absl/base:internal/spinlock_akaros.inc\n@com_google_absl//absl/base:internal/spinlock_wait.cc"
  "@com_google_absl//absl:wasm"
  "@com_google_absl//absl:wasm" -> "@com_google_absl//absl:cpu_wasm"
  [label="@@com_google_absl//absl:cpu_wasm"];
  "@com_google_absl//absl:wasm" -> "@com_google_absl//absl:wasm_2"
  [label="//conditions:default"];
  "@com_google_absl//absl:wasm_2"
  "@com_google_absl//absl:wasm_2" -> "@com_google_absl//absl:cpu_wasm32"
  [label="@@com_google_absl//absl:cpu_wasm32"];
  "@com_google_absl//absl:wasm_2" -> "@com_google_absl//absl:wasm_3"
  [label="//conditions:default"];
  "@com_google_absl//absl:wasm_3"
  "@com_google_absl//absl:wasm_3" -> "@com_google_absl//absl:platforms_wasm32"
  [label="@@com_google_absl//absl:platforms_wasm32"];
  "@com_google_absl//absl:wasm_3" -> "@com_google_absl//absl:platforms_wasm64"
  [label="//conditions:default"];
  "@com_google_absl//absl:platforms_wasm64"
  "@com_google_absl//absl:platforms_wasm64" -> "@platforms//cpu:wasm64"
  "@platforms//cpu:wasm64"
  "@platforms//cpu:wasm64" -> "@platforms//cpu:cpu"
  "@com_google_absl//absl:platforms_wasm32"
  "@com_google_absl//absl:platforms_wasm32" -> "@platforms//cpu:wasm32"
  "@platforms//cpu:wasm32"
  "@platforms//cpu:wasm32" -> "@platforms//cpu:cpu"
  "@platforms//cpu:cpu"
  "@com_google_absl//absl:cpu_wasm32"
  "@com_google_absl//absl:cpu_wasm"
  "@com_google_absl//absl:mingw_compiler"
  "@com_google_absl//absl:mingw_compiler" -> "@com_google_absl//absl:mingw_unspecified_compiler\n@com_google_absl//absl:mingw-gcc_compiler"
  [label="@@com_google_absl//absl:mingw_unspecified_compiler//conditions:default"];
  "@com_google_absl//absl:mingw_unspecified_compiler\n@com_google_absl//absl:mingw-gcc_compiler"
  "@com_google_absl//absl:mingw_unspecified_compiler\n@com_google_absl//absl:mingw-gcc_compiler" -> "@bazel_tools//tools/cpp:compiler"
  "@com_google_absl//absl/base:dynamic_annotations"
  "@com_google_absl//absl/base:dynamic_annotations" -> "@com_google_absl//absl/base:internal/dynamic_annotations.h\n@com_google_absl//absl/base:dynamic_annotations.h"
  "@com_google_absl//absl/base:dynamic_annotations" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:dynamic_annotations" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:dynamic_annotations" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:dynamic_annotations" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:dynamic_annotations" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:dynamic_annotations" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:internal/dynamic_annotations.h\n@com_google_absl//absl/base:dynamic_annotations.h"
  "@com_google_absl//absl/base:cycleclock_internal"
  "@com_google_absl//absl/base:cycleclock_internal" -> "@com_google_absl//absl/base:internal/cycleclock_config.h\n@com_google_absl//absl/base:internal/unscaledcycleclock_config.h"
  "@com_google_absl//absl/base:cycleclock_internal" -> "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/base:cycleclock_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:cycleclock_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:cycleclock_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:cycleclock_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:cycleclock_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:internal/cycleclock_config.h\n@com_google_absl//absl/base:internal/unscaledcycleclock_config.h"
  "@com_google_absl//absl/base:base_internal"
  "@com_google_absl//absl/base:base_internal" -> "@com_google_absl//absl/base:internal/hide_ptr.h\n@com_google_absl//absl/base:internal/identity.h\n@com_google_absl//absl/base:internal/invoke.h\n@com_google_absl//absl/base:internal/scheduling_mode.h\n@com_google_absl//absl/base:internal/inline_variable.h"
  "@com_google_absl//absl/base:base_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:base_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:base_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:base_internal" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/base:base_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:base_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:internal/hide_ptr.h\n@com_google_absl//absl/base:internal/identity.h\n@com_google_absl//absl/base:internal/invoke.h\n@com_google_absl//absl/base:internal/scheduling_mode.h\n@com_google_absl//absl/base:internal/inline_variable.h"
  "@com_google_absl//absl/base:casts.h\n@com_google_absl//absl/base:internal/cycleclock.cc\n@com_google_absl//absl/base:internal/unscaledcycleclock.cc\n@com_google_absl//absl/base:internal/spinlock.cc\n@com_google_absl//absl/base:internal/tsan_mutex_interface.h\n@com_google_absl//absl/base:internal/thread_identity.cc\n@com_google_absl//absl/base:internal/thread_identity.h\n@com_google_absl//absl/base:internal/per_thread_tls.h\n@com_google_absl//absl/base:call_once.h\n...and 6 more items"
  "@com_google_absl//absl/base:nullability"
  "@com_google_absl//absl/base:nullability" -> "@com_google_absl//absl/base:internal/nullability_impl.h\n@com_google_absl//absl/base:nullability.h"
  "@com_google_absl//absl/base:nullability" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:nullability" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:nullability" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:nullability" -> "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/base:nullability" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:nullability" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/meta:type_traits"
  "@com_google_absl//absl/meta:type_traits" -> "@com_google_absl//absl/meta:type_traits.h"
  "@com_google_absl//absl/meta:type_traits" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/meta:type_traits" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/meta:type_traits" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/meta:type_traits" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/meta:type_traits" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/meta:type_traits" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/meta:type_traits.h"
  "@com_google_absl//absl/base:internal/nullability_impl.h\n@com_google_absl//absl/base:nullability.h"
  "@com_google_absl//absl/base:throw_delegate"
  "@com_google_absl//absl/base:throw_delegate" -> "@com_google_absl//absl/base:internal/throw_delegate.h\n@com_google_absl//absl/base:internal/throw_delegate.cc"
  "@com_google_absl//absl/base:throw_delegate" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:throw_delegate" -> "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/base:throw_delegate" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:throw_delegate" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:throw_delegate" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:throw_delegate" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:raw_logging_internal"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl/base:internal/raw_logging.h\n@com_google_absl//absl/base:internal/raw_logging.cc"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl/base:atomic_hook"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl/base:errno_saver"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:raw_logging_internal" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:log_severity"
  "@com_google_absl//absl/base:log_severity" -> "@com_google_absl//absl/base:log_severity.cc\n@com_google_absl//absl/base:log_severity.h"
  "@com_google_absl//absl/base:log_severity" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:log_severity" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:log_severity" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:log_severity" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:log_severity" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:log_severity" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:log_severity.cc\n@com_google_absl//absl/base:log_severity.h"
  "@com_google_absl//absl/base:errno_saver"
  "@com_google_absl//absl/base:errno_saver" -> "@com_google_absl//absl/base:internal/errno_saver.h"
  "@com_google_absl//absl/base:errno_saver" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:errno_saver" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:errno_saver" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:errno_saver" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:errno_saver" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:internal/errno_saver.h"
  "@com_google_absl//absl/base:atomic_hook"
  "@com_google_absl//absl/base:atomic_hook" -> "@com_google_absl//absl/base:internal/atomic_hook.h"
  "@com_google_absl//absl/base:atomic_hook" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:atomic_hook" -> "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:atomic_hook" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:atomic_hook" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:atomic_hook" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:atomic_hook" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:core_headers"
  "@com_google_absl//absl/base:core_headers" -> "@com_google_absl//absl/base:thread_annotations.h\n@com_google_absl//absl/base:port.h\n@com_google_absl//absl/base:const_init.h\n@com_google_absl//absl/base:attributes.h\n@com_google_absl//absl/base:macros.h\n@com_google_absl//absl/base:optimization.h"
  "@com_google_absl//absl/base:core_headers" -> "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:core_headers" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:core_headers" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:core_headers" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:core_headers" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:thread_annotations.h\n@com_google_absl//absl/base:port.h\n@com_google_absl//absl/base:const_init.h\n@com_google_absl//absl/base:attributes.h\n@com_google_absl//absl/base:macros.h\n@com_google_absl//absl/base:optimization.h"
  "@com_google_absl//absl/base:internal/atomic_hook.h"
  "@com_google_absl//absl/base:internal/raw_logging.h\n@com_google_absl//absl/base:internal/raw_logging.cc"
  "@com_google_absl//absl/base:config"
  "@com_google_absl//absl/base:config" -> "@com_google_absl//absl/base:config.h\n@com_google_absl//absl/base:options.h\n@com_google_absl//absl/base:policy_checks.h"
  "@com_google_absl//absl/base:config" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@com_google_absl//absl/base:config" -> "@bazel_tools//tools/def_parser:def_parser"
  "@com_google_absl//absl/base:config" -> "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl/base:config" -> "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl/base:config.h\n@com_google_absl//absl/base:options.h\n@com_google_absl//absl/base:policy_checks.h"
  "@com_google_absl//absl/base:internal/throw_delegate.h\n@com_google_absl//absl/base:internal/throw_delegate.cc"
  "@com_google_absl//absl/strings:string_view.cc"
  "@com_google_absl//absl/strings:charset.h"
  "@com_google_absl//absl/strings:string_view.h"
  "@com_google_absl//absl/strings:str_split.h\n@com_google_absl//absl/strings:numbers.h\n@com_google_absl//absl/strings:internal/has_absl_stringify.h\n@com_google_absl//absl/strings:ascii.h\n@com_google_absl//absl/strings:numbers.cc\n@com_google_absl//absl/strings:internal/string_constant.h\n@com_google_absl//absl/strings:internal/memutil.h\n@com_google_absl//absl/strings:has_absl_stringify.h\n@com_google_absl//absl/strings:ascii.cc\n...and 27 more items"
  "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler"
  "@com_google_absl//absl:clang-cl_compiler\n@com_google_absl//absl:clang_compiler\n@com_google_absl//absl:gcc_compiler" -> "@bazel_tools//tools/cpp:compiler"
  "@com_google_absl//absl:msvc_compiler"
  "@com_google_absl//absl:msvc_compiler" -> "@bazel_tools//tools/cpp:compiler"
  "@bazel_tools//tools/cpp:compiler"
  "@bazel_tools//tools/cpp:compiler" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//tools/def_parser:def_parser"
  "@bazel_tools//tools/def_parser:def_parser" -> "@bazel_tools//tools/def_parser:def_parser_windows"
  [label="@@bazel_tools//src/conditions:host_windows"];
  "@bazel_tools//tools/def_parser:def_parser" -> "@bazel_tools//tools/def_parser:no_op.bat"
  [label="//conditions:default"];
  "@bazel_tools//tools/def_parser:def_parser" -> "@bazel_tools//src/conditions:host_windows"
  "@bazel_tools//src/conditions:host_windows"
  "@bazel_tools//src/conditions:host_windows" -> "@bazel_tools//src/conditions:host_windows_arm64_constraint\n@bazel_tools//src/conditions:host_windows_x64_constraint"
  [label="@@bazel_tools//src/conditions:host_windows_arm64_constraint//conditions:default"];
  "@bazel_tools//src/conditions:host_windows_arm64_constraint\n@bazel_tools//src/conditions:host_windows_x64_constraint"
  "@bazel_tools//tools/def_parser:no_op.bat"
  "@bazel_tools//tools/def_parser:def_parser_windows"
  "@bazel_tools//tools/def_parser:def_parser_windows" -> "@bazel_tools//tools/def_parser:def_parser.exe"
  [label="//conditions:default"];
  "@bazel_tools//tools/def_parser:def_parser_windows" -> "@bazel_tools//third_party/def_parser:def_parser"
  [label="@@bazel_tools//src/conditions:remote"];
  "@bazel_tools//tools/def_parser:def_parser_windows" -> "@bazel_tools//src/conditions:remote"
  "@bazel_tools//src/conditions:remote"
  "@bazel_tools//third_party/def_parser:def_parser"
  "@bazel_tools//third_party/def_parser:def_parser" -> "@bazel_tools//third_party/def_parser:def_parser_main.cc"
  "@bazel_tools//third_party/def_parser:def_parser" -> "@bazel_tools//third_party/def_parser:def_parser_lib"
  "@bazel_tools//third_party/def_parser:def_parser" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@bazel_tools//third_party/def_parser:def_parser" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//third_party/def_parser:def_parser" -> "@bazel_tools//tools/cpp:link_extra_lib"
  "@bazel_tools//third_party/def_parser:def_parser" -> "@bazel_tools//tools/cpp:malloc"
  "@bazel_tools//tools/cpp:malloc"
  "@bazel_tools//tools/cpp:malloc" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//tools/cpp:link_extra_lib"
  "@bazel_tools//tools/cpp:link_extra_lib" -> "@bazel_tools//tools/cpp:link_extra_libs"
  "@bazel_tools//tools/cpp:link_extra_lib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//tools/cpp:link_extra_libs"
  "@bazel_tools//tools/cpp:link_extra_libs" -> "@bazel_tools//tools/cpp:empty_lib"
  "@bazel_tools//tools/cpp:empty_lib"
  "@bazel_tools//tools/cpp:empty_lib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//third_party/def_parser:def_parser_lib"
  "@bazel_tools//third_party/def_parser:def_parser_lib" -> "@bazel_tools//third_party/def_parser:def_parser.cc\n@bazel_tools//third_party/def_parser:def_parser.h"
  "@bazel_tools//third_party/def_parser:def_parser_lib" -> "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//third_party/def_parser:def_parser.cc\n@bazel_tools//third_party/def_parser:def_parser.h"
  "@bazel_tools//third_party/def_parser:def_parser_main.cc"
  "@bazel_tools//tools/def_parser:def_parser.exe"
  "@bazel_tools//tools/cpp:current_cc_toolchain"
  "@bazel_tools//tools/cpp:current_cc_toolchain" -> "@bazel_tools//tools/cpp:toolchain"
  "@bazel_tools//tools/cpp:current_cc_toolchain" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@bazel_tools//tools/cpp:toolchain"
  "@bazel_tools//tools/cpp:toolchain" -> "@local_config_cc//:toolchain"
  "@local_config_cc//:toolchain"
  "@local_config_cc//:toolchain" -> "@local_config_cc//:cc-compiler-k8"
  "@local_config_cc//:toolchain" -> "@local_config_cc//:cc-compiler-armeabi-v7a"
  "@local_config_cc//:cc-compiler-armeabi-v7a"
  "@local_config_cc//:cc-compiler-armeabi-v7a" -> "@local_config_cc//:empty\n@bazel_tools//tools/build_defs/cc/whitelists/parse_headers_and_layering_check:disabling_parse_headers_and_layering_check_allowed"
  "@local_config_cc//:cc-compiler-armeabi-v7a" -> "@local_config_cc//:stub_armeabi-v7a"
  "@local_config_cc//:cc-compiler-armeabi-v7a" -> "@bazel_tools//tools/build_defs/build_info:cc_build_info"
  "@local_config_cc//:cc-compiler-armeabi-v7a" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@local_config_cc//:cc-compiler-armeabi-v7a" -> "@bazel_tools//tools/cpp:link_dynamic_library"
  "@local_config_cc//:cc-compiler-armeabi-v7a" -> "@bazel_tools//tools/cpp:interface_library_builder"
  "@local_config_cc//:stub_armeabi-v7a"
  "@local_config_cc//:cc-compiler-k8"
  "@local_config_cc//:cc-compiler-k8" -> "@local_config_cc//:compiler_deps"
  "@local_config_cc//:cc-compiler-k8" -> "@local_config_cc//:empty\n@bazel_tools//tools/build_defs/cc/whitelists/parse_headers_and_layering_check:disabling_parse_headers_and_layering_check_allowed"
  "@local_config_cc//:cc-compiler-k8" -> "@local_config_cc//:local"
  "@local_config_cc//:cc-compiler-k8" -> "@bazel_tools//tools/cpp:interface_library_builder"
  "@local_config_cc//:cc-compiler-k8" -> "@bazel_tools//tools/cpp:link_dynamic_library"
  "@local_config_cc//:cc-compiler-k8" -> "@bazel_tools//tools/cpp:toolchain_type"
  "@local_config_cc//:cc-compiler-k8" -> "@bazel_tools//tools/build_defs/build_info:cc_build_info"
  "@bazel_tools//tools/build_defs/build_info:cc_build_info"
  "@bazel_tools//tools/build_defs/build_info:cc_build_info" -> "@bazel_tools//tools/build_defs/build_info/templates:redacted_file.h.template\n@bazel_tools//tools/build_defs/build_info/templates:volatile_file.h.template\n@bazel_tools//tools/build_defs/build_info/templates:non_volatile_file.h.template"
  "@bazel_tools//tools/build_defs/build_info/templates:redacted_file.h.template\n@bazel_tools//tools/build_defs/build_info/templates:volatile_file.h.template\n@bazel_tools//tools/build_defs/build_info/templates:non_volatile_file.h.template"
  "@bazel_tools//tools/cpp:toolchain_type"
  "@bazel_tools//tools/cpp:link_dynamic_library"
  "@bazel_tools//tools/cpp:link_dynamic_library" -> "@bazel_tools//tools/cpp:link_dynamic_library.sh"
  "@bazel_tools//tools/cpp:link_dynamic_library.sh"
  "@bazel_tools//tools/cpp:interface_library_builder"
  "@bazel_tools//tools/cpp:interface_library_builder" -> "@bazel_tools//tools/cpp:build_interface_so"
  "@bazel_tools//tools/cpp:build_interface_so"
  "@local_config_cc//:local"
  "@local_config_cc//:local" -> "@bazel_tools//tools/objc:host_xcodes"
  "@bazel_tools//tools/objc:host_xcodes"
  "@local_config_cc//:empty\n@bazel_tools//tools/build_defs/cc/whitelists/parse_headers_and_layering_check:disabling_parse_headers_and_layering_check_allowed"
  "@local_config_cc//:compiler_deps"
  "@local_config_cc//:compiler_deps" -> "@local_config_cc//:builtin_include_directory_paths"
  "@local_config_cc//:compiler_deps" -> "@local_config_cc//:cc_wrapper"
  "@local_config_cc//:cc_wrapper"
  "@local_config_cc//:cc_wrapper" -> "@local_config_cc//:cc_wrapper.sh"
  "@local_config_cc//:cc_wrapper.sh"
  "@local_config_cc//:builtin_include_directory_paths"
  "@com_google_absl//absl/log:absl_vlog_is_on.h"
  "@com_google_absl//absl/log:vlog_is_on.h"
  "@com_google_absl//absl/log:log.h"
  "@com_github_grpc_grpc//src/core:lib/promise/detail/promise_factory.h"
}
