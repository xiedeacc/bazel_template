##### less some binary

load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@bazel_skylib//lib:selects.bzl", "selects")

cc_library(
    name = "lzma",
    srcs = [
        "src/common/tuklib_cpucores.c",
        "src/common/tuklib_physmem.c",
        "src/liblzma/check/check.c",
        "src/liblzma/check/crc32_fast.c",
        "src/liblzma/check/crc32_table.c",
        "src/liblzma/check/crc64_fast.c",
        "src/liblzma/check/crc64_table.c",
        "src/liblzma/check/sha256.c",
        "src/liblzma/common/alone_decoder.c",
        "src/liblzma/common/alone_encoder.c",
        "src/liblzma/common/auto_decoder.c",
        "src/liblzma/common/block_buffer_decoder.c",
        "src/liblzma/common/block_buffer_encoder.c",
        "src/liblzma/common/block_decoder.c",
        "src/liblzma/common/block_encoder.c",
        "src/liblzma/common/block_header_decoder.c",
        "src/liblzma/common/block_header_encoder.c",
        "src/liblzma/common/block_util.c",
        "src/liblzma/common/common.c",
        "src/liblzma/common/easy_buffer_encoder.c",
        "src/liblzma/common/easy_decoder_memusage.c",
        "src/liblzma/common/easy_encoder.c",
        "src/liblzma/common/easy_encoder_memusage.c",
        "src/liblzma/common/easy_preset.c",
        "src/liblzma/common/file_info.c",
        "src/liblzma/common/filter_buffer_decoder.c",
        "src/liblzma/common/filter_buffer_encoder.c",
        "src/liblzma/common/filter_common.c",
        "src/liblzma/common/filter_decoder.c",
        "src/liblzma/common/filter_encoder.c",
        "src/liblzma/common/filter_flags_decoder.c",
        "src/liblzma/common/filter_flags_encoder.c",
        "src/liblzma/common/hardware_cputhreads.c",
        "src/liblzma/common/hardware_physmem.c",
        "src/liblzma/common/index.c",
        "src/liblzma/common/index_decoder.c",
        "src/liblzma/common/index_encoder.c",
        "src/liblzma/common/index_hash.c",
        "src/liblzma/common/lzip_decoder.c",
        "src/liblzma/common/microlzma_decoder.c",
        "src/liblzma/common/microlzma_encoder.c",
        "src/liblzma/common/outqueue.c",
        "src/liblzma/common/stream_buffer_decoder.c",
        "src/liblzma/common/stream_buffer_encoder.c",
        "src/liblzma/common/stream_decoder.c",
        "src/liblzma/common/stream_decoder_mt.c",
        "src/liblzma/common/stream_encoder.c",
        "src/liblzma/common/stream_encoder_mt.c",
        "src/liblzma/common/stream_flags_common.c",
        "src/liblzma/common/stream_flags_decoder.c",
        "src/liblzma/common/stream_flags_encoder.c",
        "src/liblzma/common/string_conversion.c",
        "src/liblzma/common/vli_decoder.c",
        "src/liblzma/common/vli_encoder.c",
        "src/liblzma/common/vli_size.c",
        "src/liblzma/delta/delta_common.c",
        "src/liblzma/delta/delta_decoder.c",
        "src/liblzma/delta/delta_encoder.c",
        "src/liblzma/lz/lz_decoder.c",
        "src/liblzma/lz/lz_encoder.c",
        "src/liblzma/lz/lz_encoder_mf.c",
        "src/liblzma/lzma/fastpos_table.c",
        "src/liblzma/lzma/lzma2_decoder.c",
        "src/liblzma/lzma/lzma2_encoder.c",
        "src/liblzma/lzma/lzma_decoder.c",
        "src/liblzma/lzma/lzma_encoder.c",
        "src/liblzma/lzma/lzma_encoder_optimum_fast.c",
        "src/liblzma/lzma/lzma_encoder_optimum_normal.c",
        "src/liblzma/lzma/lzma_encoder_presets.c",
        "src/liblzma/rangecoder/price_table.c",
        "src/liblzma/simple/arm.c",
        "src/liblzma/simple/arm64.c",
        "src/liblzma/simple/armthumb.c",
        "src/liblzma/simple/ia64.c",
        "src/liblzma/simple/powerpc.c",
        "src/liblzma/simple/riscv.c",
        "src/liblzma/simple/simple_coder.c",
        "src/liblzma/simple/simple_decoder.c",
        "src/liblzma/simple/simple_encoder.c",
        "src/liblzma/simple/sparc.c",
        "src/liblzma/simple/x86.c",
    ],
    hdrs = [
        "src/common/mythread.h",
        "src/common/sysdefs.h",
        "src/common/tuklib_common.h",
        "src/common/tuklib_config.h",
        "src/common/tuklib_cpucores.h",
        "src/common/tuklib_exit.h",
        "src/common/tuklib_gettext.h",
        "src/common/tuklib_integer.h",
        "src/common/tuklib_mbstr.h",
        "src/common/tuklib_open_stdxxx.h",
        "src/common/tuklib_physmem.h",
        "src/common/tuklib_progname.h",
        "src/liblzma/api/lzma.h",
        "src/liblzma/api/lzma/base.h",
        "src/liblzma/api/lzma/bcj.h",
        "src/liblzma/api/lzma/block.h",
        "src/liblzma/api/lzma/check.h",
        "src/liblzma/api/lzma/container.h",
        "src/liblzma/api/lzma/delta.h",
        "src/liblzma/api/lzma/filter.h",
        "src/liblzma/api/lzma/hardware.h",
        "src/liblzma/api/lzma/index.h",
        "src/liblzma/api/lzma/index_hash.h",
        "src/liblzma/api/lzma/lzma12.h",
        "src/liblzma/api/lzma/stream_flags.h",
        "src/liblzma/api/lzma/version.h",
        "src/liblzma/api/lzma/vli.h",
        "src/liblzma/check/check.h",
        "src/liblzma/check/crc32_arm64.h",
        "src/liblzma/check/crc32_table_be.h",
        "src/liblzma/check/crc32_table_le.h",
        "src/liblzma/check/crc64_table_be.h",
        "src/liblzma/check/crc64_table_le.h",
        "src/liblzma/check/crc_common.h",
        "src/liblzma/check/crc_x86_clmul.h",
        "src/liblzma/common/alone_decoder.h",
        "src/liblzma/common/block_buffer_encoder.h",
        "src/liblzma/common/block_decoder.h",
        "src/liblzma/common/block_encoder.h",
        "src/liblzma/common/common.h",
        "src/liblzma/common/easy_preset.h",
        "src/liblzma/common/filter_common.h",
        "src/liblzma/common/filter_decoder.h",
        "src/liblzma/common/filter_encoder.h",
        "src/liblzma/common/index.h",
        "src/liblzma/common/index_decoder.h",
        "src/liblzma/common/index_encoder.h",
        "src/liblzma/common/lzip_decoder.h",
        "src/liblzma/common/memcmplen.h",
        "src/liblzma/common/outqueue.h",
        "src/liblzma/common/stream_decoder.h",
        "src/liblzma/common/stream_flags_common.h",
        "src/liblzma/delta/delta_common.h",
        "src/liblzma/delta/delta_decoder.h",
        "src/liblzma/delta/delta_encoder.h",
        "src/liblzma/delta/delta_private.h",
        "src/liblzma/lz/lz_decoder.h",
        "src/liblzma/lz/lz_encoder.h",
        "src/liblzma/lz/lz_encoder_hash.h",
        "src/liblzma/lz/lz_encoder_hash_table.h",
        "src/liblzma/lzma/fastpos.h",
        "src/liblzma/lzma/lzma2_decoder.h",
        "src/liblzma/lzma/lzma2_encoder.h",
        "src/liblzma/lzma/lzma_common.h",
        "src/liblzma/lzma/lzma_decoder.h",
        "src/liblzma/lzma/lzma_encoder.h",
        "src/liblzma/lzma/lzma_encoder_private.h",
        "src/liblzma/rangecoder/price.h",
        "src/liblzma/rangecoder/range_common.h",
        "src/liblzma/rangecoder/range_decoder.h",
        "src/liblzma/rangecoder/range_encoder.h",
        "src/liblzma/simple/simple_coder.h",
        "src/liblzma/simple/simple_decoder.h",
        "src/liblzma/simple/simple_encoder.h",
        "src/liblzma/simple/simple_private.h",
    ],
    copts = select({
        "@platforms//os:windows": [],
        "//conditions:default": [
            "-std=c99",
            "-Wall",
            "-Wextra",
            "-Wvla",
            "-Wformat=2",
            "-Winit-self",
            #"-Wmissing-include-dirs",
            "-Wshift-overflow=2",
            "-Wstrict-overflow=3",
            "-Walloc-zero",
            "-Wduplicated-cond",
            "-Wfloat-equal",
            "-Wundef",
            "-Wshadow",
            "-Wpointer-arith",
            "-Wbad-function-cast",
            "-Wwrite-strings",
            "-Wdate-time",
            "-Wsign-conversion",
            "-Wfloat-conversion",
            "-Wlogical-op",
            "-Waggregate-return",
            "-Wstrict-prototypes",
            "-Wold-style-definition",
            "-Wmissing-prototypes",
            "-Wc99-c11-compat",
            "-Wmissing-declarations",
            "-Wredundant-decls",
            "-std=gnu11",
            "-O3",
            "-g",
            "-fPIC",
            "-march=native",
            "-fvisibility=hidden",
        ],
    }),
    includes = [
        "src/common",
        "src/liblzma/api",
        "src/liblzma/check",
        "src/liblzma/common",
        "src/liblzma/delta",
        "src/liblzma/lz",
        "src/liblzma/lzma",
        "src/liblzma/rangecoder",
        "src/liblzma/simple",
    ],
    linkopts = select({
        "@platforms//os:android": [],
        "//conditions:default": ["-pthread"],
    }),
    linkstatic = select({
        "@platforms//os:windows": True,
        "//conditions:default": False,
    }),
    local_defines = [
        "HAVE_CHECK_CRC32",
        "HAVE_CHECK_CRC64",
        "HAVE_CHECK_SHA256",
        "HAVE_CLOCK_GETTIME",
        "HAVE_CLOCK_MONOTONIC",
        "HAVE_CPUID_H",
        "HAVE_DECODERS",
        "HAVE_DECODER_ARM",
        "HAVE_DECODER_ARM64",
        "HAVE_DECODER_ARMTHUMB",
        "HAVE_DECODER_DELTA",
        "HAVE_DECODER_IA64",
        "HAVE_DECODER_LZMA1",
        "HAVE_DECODER_LZMA2",
        "HAVE_DECODER_POWERPC",
        "HAVE_DECODER_RISCV",
        "HAVE_DECODER_SPARC",
        "HAVE_DECODER_X86",
        "HAVE_ENCODERS",
        "HAVE_ENCODER_ARM",
        "HAVE_ENCODER_ARM64",
        "HAVE_ENCODER_ARMTHUMB",
        "HAVE_ENCODER_DELTA",
        "HAVE_ENCODER_IA64",
        "HAVE_ENCODER_LZMA1",
        "HAVE_ENCODER_LZMA2",
        "HAVE_ENCODER_POWERPC",
        "HAVE_ENCODER_RISCV",
        "HAVE_ENCODER_SPARC",
        "HAVE_ENCODER_X86",
        "HAVE_FUNC_ATTRIBUTE_CONSTRUCTOR",
        "HAVE_IMMINTRIN_H",
        "HAVE_INTTYPES_H",
        "HAVE_LZIP_DECODER",
        "HAVE_MF_BT2",
        "HAVE_MF_BT3",
        "HAVE_MF_BT4",
        "HAVE_MF_HC3",
        "HAVE_MF_HC4",
        "HAVE_PTHREAD_CONDATTR_SETCLOCK",
        "HAVE_STDBOOL_H",
        "HAVE_STDINT_H",
        "HAVE_USABLE_CLMUL",
        "HAVE_VISIBILITY=0",
        "HAVE__BOOL",
        "HAVE__MM_MOVEMASK_EPI8",
        "HAVE___BUILTIN_ASSUME_ALIGNED",
        "HAVE___BUILTIN_BSWAPXX",
        "MYTHREAD_POSIX",
        "NDEBUG",
        "PACKAGE_BUGREPORT=\\\"xz@tukaani.org\\\"",
        "PACKAGE_NAME=\\\"XZUtils\\\"",
        "PACKAGE_URL=\\\"https://tukaani.org/xz/\\\"",
        "TUKLIB_CPUCORES_SCHED_GETAFFINITY",
        "TUKLIB_FAST_UNALIGNED_ACCESS",
        "TUKLIB_PHYSMEM_SYSCONF",
        "TUKLIB_SYMBOL_PREFIX=lzma_",
        "_GNU_SOURCE",
    ],
    visibility = ["//visibility:public"],
)

cc_binary(
    name = "xz",
    srcs = [
        "src/common/tuklib_exit.c",
        "src/common/tuklib_mbstr_fw.c",
        "src/common/tuklib_mbstr_width.c",
        "src/common/tuklib_open_stdxxx.c",
        "src/common/tuklib_progname.c",
        "src/liblzma/api/lzma/version.h",
        "src/xz/args.c",
        "src/xz/args.h",
        "src/xz/coder.c",
        "src/xz/coder.h",
        "src/xz/file_io.c",
        "src/xz/file_io.h",
        "src/xz/hardware.c",
        "src/xz/hardware.h",
        "src/xz/list.c",
        "src/xz/list.h",
        "src/xz/main.c",
        "src/xz/main.h",
        "src/xz/message.c",
        "src/xz/message.h",
        "src/xz/mytime.c",
        "src/xz/mytime.h",
        "src/xz/options.c",
        "src/xz/options.h",
        "src/xz/private.h",
        "src/xz/sandbox.c",
        "src/xz/sandbox.h",
        "src/xz/signals.c",
        "src/xz/signals.h",
        "src/xz/suffix.c",
        "src/xz/suffix.h",
        "src/xz/util.c",
        "src/xz/util.h",
    ],
    copts = [
        "-std=c99",
        "-O3",
        "-march=native",
    ],
    includes = [
        "src/common",
        "src/liblzma/api",
        "src/liblzma/check",
        "src/liblzma/common",
        "src/liblzma/delta",
        "src/liblzma/lz",
        "src/liblzma/lzma",
        "src/liblzma/rangecoder",
        "src/liblzma/simple",
    ],
    local_defines = [
        "ASSUME_RAM=128",
        "HAVE_CHECK_CRC32",
        "HAVE_CHECK_CRC64",
        "HAVE_CHECK_SHA256",
        "HAVE_CLOCK_GETTIME",
        "HAVE_CLOCK_MONOTONIC",
        "HAVE_CPUID_H",
        "HAVE_DECODERS",
        "HAVE_DECODER_ARM",
        "HAVE_DECODER_ARM64",
        "HAVE_DECODER_ARMTHUMB",
        "HAVE_DECODER_DELTA",
        "HAVE_DECODER_IA64",
        "HAVE_DECODER_LZMA1",
        "HAVE_DECODER_LZMA2",
        "HAVE_DECODER_POWERPC",
        "HAVE_DECODER_RISCV",
        "HAVE_DECODER_SPARC",
        "HAVE_DECODER_X86",
        "HAVE_ENCODERS",
        "HAVE_ENCODER_ARM",
        "HAVE_ENCODER_ARM64",
        "HAVE_ENCODER_ARMTHUMB",
        "HAVE_ENCODER_DELTA",
        "HAVE_ENCODER_IA64",
        "HAVE_ENCODER_LZMA1",
        "HAVE_ENCODER_LZMA2",
        "HAVE_ENCODER_POWERPC",
        "HAVE_ENCODER_RISCV",
        "HAVE_ENCODER_SPARC",
        "HAVE_ENCODER_X86",
        "HAVE_FUNC_ATTRIBUTE_CONSTRUCTOR",
        "HAVE_IMMINTRIN_H",
        "HAVE_INTTYPES_H",
        "HAVE_LZIP_DECODER",
        "HAVE_MF_BT2",
        "HAVE_MF_BT3",
        "HAVE_MF_BT4",
        "HAVE_MF_HC3",
        "HAVE_MF_HC4",
        "HAVE_PTHREAD_CONDATTR_SETCLOCK",
        "HAVE_STDBOOL_H",
        "HAVE_STDINT_H",
        "HAVE_USABLE_CLMUL",
        "HAVE_VISIBILITY=0",
        "HAVE__BOOL",
        "HAVE__MM_MOVEMASK_EPI8",
        "HAVE___BUILTIN_ASSUME_ALIGNED",
        "HAVE___BUILTIN_BSWAPXX",
        "MYTHREAD_POSIX",
        "NDEBUG",
        "XZ_NLS",
        "PACKAGE=\\\"xz\\\"",
        "PACKAGE_BUGREPORT=\\\"xz@tukaani.org\\\"",
        "PACKAGE_NAME=\\\"XZUtils\\\"",
        "PACKAGE_URL=\\\"https://tukaani.org/xz/\\\"",
        "TUKLIB_CPUCORES_SCHED_GETAFFINITY",
        "TUKLIB_FAST_UNALIGNED_ACCESS",
        "TUKLIB_PHYSMEM_SYSCONF",
        "TUKLIB_SYMBOL_PREFIX=lzma_",
        "_GNU_SOURCE",
    ],
    deps = [
        ":lzma",
    ],
)
